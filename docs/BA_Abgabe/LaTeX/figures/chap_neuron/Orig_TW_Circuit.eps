%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Orig_TW_Circuit.pdf
%%Creator: Adobe Acrobat 18.11.0
%%For: Jonas
%%CreationDate: 10.09.2018, 12:33:45
%%BoundingBox: 0 0 159 150
%%HiResBoundingBox: 0 0 158.5571 149.9320
%%CropBox: 0 0 158.5571 149.9320
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1335 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2017-11-10T01:24:05Z"
   xmp:CreatorTool="LaTeX with hyperref package"
   xmp:ModifyDate="2018-07-28T15:29:48+02:00"
   xmp:MetadataDate="2018-07-28T15:29:48+02:00"
   pdf:Keywords=""
   pdf:Producer="pdfTeX-1.40.17"
   pdf:Trapped="False"
   pdfx:PTEX.Fullbanner="This is pdfTeX, Version 3.14159265-2.6-1.40.17 (TeX Live 2016) kpathsea version 6.2.2"
   xmpMM:DocumentID="uuid:5f24eee0-138b-4682-b489-81c7d57d7c1a"
   xmpMM:InstanceID="uuid:4e7fedc0-b627-4ab5-bdfb-1c473cbd9b3c">
   <dc:creator>
    <rdf:Seq>
     <rdf:li/>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -149.932 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 149.932 li
158.557 149.932 li
158.557 0 li
cp
clp
gsave
-236.543 666.942 mo
161.857 666.942 li
161.857 -10.2356 li
-236.543 -10.2356 li
-236.543 666.942 li
clp
gsave
-231.513 223.283 mo
160.122 223.283 li
160.122 -10.2361 li
-231.513 -10.2361 li
-231.513 223.283 li
clp
.855338 lw
0 lc
0 lj
10 ml
[2.56687 2.56687 ] 0 dsh
true sadj
7.05272 217.426 mo
7.05272 163.87 li
157.982 163.87 li
157.982 217.426 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
.3 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DEAAAA+CMSS10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /DEAAAA+CMSS10 def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMSS10.) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /colon put
dup 76 /L put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 110 /n put
def
/FontBBox {-61 -250 999 759} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 444 461 656 678 694 716] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [61] def
/StdVW [78] def
/StemSnapH [61 64] def
/StemSnapV [78 89] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/colon <1C60D8A8C9B8574464859E1C706DB4AE3AE177C14A2E14B1A26BDF1D
55DB552FF45B81D5B63AF9F5CFC4> |-
/L <1C60D8A8C9B79EE33060974589B17066210DD7F5338AB2D00916C98CB9EF
A8FA42E9D44EAB6F5203BC97A3E2> |-
/d <1C60D8A8C9B7B71A3BF37E5B04A973AE3537B8FD890ED1FF113FAC34199C
B3FA207ED3D23CC2CC9C5CB25E5E02673E4D32655006A2D7DA8B4DC31B0942F2
8555386ADB48AAFB9FE36384F0A54ED1C3D0C1FB9588114D50DC91A1BB175153
E01C3EE813698E4A73B8C5B6> |-
/e <1C60D8A8C9B77FE2B9E77589C8F628AF22F51C7F32A727D1F43317BBADAF
EB9669D8F008F2C4DD8C43A1C2232E39B24E3D22FF160310DAF2ABD5B3E860FE
806DDBF18203F1B306BAB7855DEE1ACB6651BB78FF7B6B2A7647C77F2B3BE1EC
712E42C50E6C4B9A2D> |-
/g <1C60D8A8C9B7A73DB58EC4F5735257CF6484034BE48838869C792E77FEDB
2EDDDF87A4ECEA55DED30419BE80B9800A7A7BCC852BBF2F2E06BC58F5220971
E571F38CF807ABB277789A55600204E7D4F9D5B79E85F55DBE49717A60C2DBDE
EFC117FFEA09FDB25E08EC0D2C46945DC382E7BB216BC1ED46A53D7DCC40B2C9
9BE8374E106F137F672ABF5E8DC549748A999EC7C6BF9EB4A8ACFE131064AD2B
C89A39B533BAC508010480088F92C9E199DE77B0D5D956B2F9890F91DB699D5B
FE37A68F78A04CA9D3C85DA607FEC9886BB4D6> |-
/n <1C60D8A8C9B7B71A30FC1EF512602989A2E0D86EC7C02639B6436B84CC18
653B5379FF9776F5B257A66750D0ABEFE37B6A92687D88CE251EED97BCC4DC44
8D63FE205AE5DF> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HQERRN+CMSS10 /DEAAAA+CMSS10 findfont ct_VMDictPut
/HQERRN+CMSS10*1 
[58{/.notdef}rp /colon 17{/.notdef}rp /L 23{/.notdef}rp /d /e /.notdef 
/g 6{/.notdef}rp /n 145{/.notdef}rp]
HQERRN+CMSS10 nf
HQERRN+CMSS10*1 [8.55596 0 0 -8.55596 0 0 ]msf
10.0733 172.455 mo
(Legend:)
[4.63478 3.80223 4.278 3.80222 4.42084 4.42081 0 ]xsh
.341792 lw
[] 0 dsh
10.0733 175.317 mo
37.8082 175.317 li
@
19.2245 188.853 mo
23.9949 180.591 li
14.454 180.591 li
cp
/1 
[/DeviceCMYK] /CSA add_res
0 .737728 .508659 0 cmyk
f
19.2245 188.853 mo
23.9949 180.591 li
14.454 180.591 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: IEAAAA+CMSS8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IEAAAA+CMSS8 def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMSS8.) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 83 /S put
dup 101 /e put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 121 /y put
def
/FontBBox {-65 -250 1062 761} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 0 444 459 656 677 694 715] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [66] def
/StdVW [87] def
/StemSnapH [59 66] def
/StemSnapV [87 101] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/S <1C60D8A8C9B7CDD84356B54DF104100BCC449E269333A30BC45F206DBFCB
2BB26B137867009BB9E17194658B31CCFA5D0D0FE7D66BB9368072EECE8DBC57
B6D9F6E5E94072D2E1A5831ED6D3946D60F33442CD531176CC2318F0025169DC
761B56769E9349C989EF33BE62C9402F87D812E3C55C303DA3E89569757B0643
63897EE801E244B1FB3F5B39041F> |-
/e <1C60D8A8C9B74383EFFF10C87598D4A3D5946A491C4C0AC6E2B8E58E9559
2041F7F708467C72BD9F4C9318DC61A7F3A3A2A776A0B5C761D1F735E0EDD54B
F6FD0F1F356781F961059A6E20FD864DCA47293E8BA42814C097640FDB33F82B
4A97FA9A> |-
/n <1C60D8A8C9B797473C374DBF54E933F25F37D7D082F67F688FFEBF6E7E84
A2EA3A11EEF96C102760A0311D96071C90A0939216CB15AB23F8517A4D303693
E4727C5EE433CB> |-
/o <1C60D8A8C9B7883C4DCBD75181A7FF6E6971E5C276A30685F0E1C3A50A98
195E99E32A3BD4AC4B6385045A7923253550E4F4C560D3FD17093917A13A3580
186A49C75945BBE1162D2FA0F817EB6A3D2BE8E2DA3B7EC0211E5F> |-
/r <1C60D8A8C9B8002F0D48CD13EA1765B1292825C7CCAEF7BCA17D100F9ADD
739852B03E23AEA19D8C161D9FEE512FB16B10EED5> |-
/s <1C60D8A8C9B704CCCD10E3D8345FD533ED38163C3E3BB669B7A294C1DBDD
F78275A299FF2227F844370DB83C3EFAAEEDA78F237317918CE17D2489E24998
738E3756354592FE28D229BC7EEAAC44E9AAC80ED39081CF46F30A90D57A1062
439E799BFA68E8398A84FBF51768B0BE7E6AC49320A4AE84C1ABCE09E7D14E86
ED999DE409BA9B> |-
/u <1C60D8A8C9B797473607F831AF795F5C3775094CAC07C9785BFB9CC5E06B
540F6312E529CB60DB4CA26A166B158DC4030F25294B67EEDC6FAC5A3ED367CF
06D59B34B82F> |-
/y <1C60D8A8C9B752AB470ADBE8B5B8DBB60234557F0164ED92EB57A425649D
B361E8A0A826591293DA13F05AE08EFC115BABE94B262732A070C3022A270227
A2D6077DB7DF78C23C8E5F94422DB974C496CDCA9BB35D82A1D1D099CC0D1D1F
FFEA69> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HQERRO+CMSS8 /IEAAAA+CMSS8 findfont ct_VMDictPut
/HQERRO+CMSS8*1 
[83{/.notdef}rp /S 17{/.notdef}rp /e 8{/.notdef}rp /n /o 2{/.notdef}rp 
/r /s /.notdef /u 3{/.notdef}rp /y 134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
29.5477 184.841 mo
(Sensoryneuron)
[3.53537 2.82803 3.28561 2.43936 3.0083 2.16745 5.05835 3.28558 2.82806 3.28561 2.17343 3.18198 
0 ]xsh
gsave
22.6682 195.517 mo
22.6682 193.615 21.1258 192.074 19.2244 192.074 cv
17.323 192.074 15.7816 193.615 15.7816 195.517 cv
15.7816 197.419 17.323 198.96 19.2244 198.96 cv
21.1258 198.96 22.6682 197.419 22.6682 195.517 cv
clp
26.1114 202.404 mo
26.1114 188.63 li
12.3375 188.63 li
12.3375 202.404 li
cp
level3{
gsave
clp
[0 -.137739 -.137739 0 26.1114 202.404 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [0 0 0 100.001 ]
/Domain [0 100.001 ]
/Extend[ false false]
/Function
<<
/Domain[0 100.001 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~W;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgr
W;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgr
W;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgr
W;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgrW;rgr
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~W;rgr+J+Pr!:>::!;rSl!;jq>!;c'_!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q
!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q
!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q
!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~?qun/!7u]#!;r#\!;jG0!;b[T!;cQm!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q
!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q
!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q
!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q!;c]q
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`
!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`
!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`
!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`!5*m`
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [25.0003 50.0006 75.001 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[0 -.137739 -.137739 0 26.1114 202.404 ]ct
clp
/0 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~WMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukr
WMcVhUS=ERSt):=R$X,'PEM#gNf8mQLkg\;K7SQ&I=-BeG^":PF)c/;D/<s$BP(gd@UWYN?!LQ9=B8F$
?sd5G>[(B7=BAO'<)Z[l:esh]9h\2P8Ou?@779L05sRXu4Ztnh3]T/Y2Dm<I1,1I9/hJV*.k2tr-RL,b
zzzzzzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzzzzzz!!*0)"pYGA$k3^Z&el&s(`F>6+!;aP,pk#h.kNA-0f(XE2`Wr^5!M>"6q'U;8k_r
T:f:4l='/X1?!^oI:/=\a;cHe!=B\p6?=.)L@q91aBPM="DJsN8F*2YMH$XgcIXcp#K8#&8M2I7ONf]B
dPa.Q%R@9Y:StMdO]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(n
i]Y(ni]Y(ni]Y(ni~>
<~Vl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-Gj
Vl$>gV5:#bUnjf^USFTZU8"BVTqS0RTV.sNT:_aJSt;OFSXl=BS=H+=S"#n9R[T\5R@0J1R$a8-Q^=&)
PEM)lP*1riOcbcfOH>QcO,o?_O,f6\NfK*YNK&pVN/W^SMi3LOMi*CLMMd7IM2@(FLkpkCLPLY?LPCP<
JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+
~>
<~zzzzzzzzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E3%!<N<(!WiE)!WiE)!WiE)!WiE)!WrN,+Wqm
M+!2RG*Zc=B*?6%=)]K_7)B'J2)&O2-(Ddl'()@W"'bh>r'GD,n&eYfh&J5Qc&.]9^%LrsX%1N^Szzzz
zzzzzzzzzzz!!!!!~>
]
>>
0 0 0 100.001 []false false []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
grestore
22.6676 195.517 mo
22.6676 193.615 21.1261 192.074 19.2248 192.074 cv
17.3226 192.074 15.7811 193.615 15.7811 195.517 cv
15.7811 197.418 17.3226 198.96 19.2248 198.96 cv
21.1261 198.96 22.6676 197.418 22.6676 195.517 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IEAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRO+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B845C808251600A255C99B753981E42091FC248AE4E0F76F30
6400> |-
/t <1C60D8A8C9B73CE4EC707BC46A795703EF93C6DD177A176EE2932471CE64
A8C7700DD5273257B4E2D2B768B86B901C4181D904BB6A7160DDF98737657E89
E2C9F3A73E578F66399E91763BB76446352CFAC8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRO+CMSS8 /Encoding get
dup 73 /I put
dup 116 /t put
pop
%ADOEndSubsetFont
/HQERRO+CMSS8*1 
[73{/.notdef}rp /I 9{/.notdef}rp /S 17{/.notdef}rp /e 8{/.notdef}rp /n 
/o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 
134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
29.5477 197.595 mo
(Interneuron)
[1.76743 3.28558 2.298 2.82806 4.29358 3.28558 2.82803 3.28561 2.17343 3.18198 0 ]xsh
19.2245 202.18 mo
14.454 210.442 li
23.9949 210.442 li
cp
.64361 .39292 0 0 cmyk
f
19.2245 202.18 mo
14.454 210.442 li
23.9949 210.442 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: IEAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRO+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B5A128CCC317EB5D85A602A259A3244762F5B9D7623C45DC95
5A639FD7EC6C5A64EE4B0CDC990EE1D0DEDF2187ED56338D1888A7C4C7CF342E
6AF6EC84C5DB3731C94EDAD00DB95CCFC6DD07E9E3752503F2EDBBE10372F468
AC1B6243CB39CA64ADA4183F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRO+CMSS8 /Encoding get
dup 77 /M put
pop
%ADOEndSubsetFont
/HQERRO+CMSS8*1 
[73{/.notdef}rp /I 3{/.notdef}rp /M 5{/.notdef}rp /S 17{/.notdef}rp /e 
8{/.notdef}rp /n /o 2{/.notdef}rp /r /s /t /u 
3{/.notdef}rp /y 134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
29.5477 209.766 mo
(Moto)
[5.55243 3.18198 2.298 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
43.58 209.766 mo
(rneuron)
[4.29956 3.28561 2.82803 3.28561 2.17346 3.18195 0 ]xsh
1.02709 lw
87.3863 188.214 mo
94.703 180.897 li
.663203 0 .654841 0 cmyk
@
96.4019 179.198 mo
94.0178 179.889 li
94.8643 180.736 li
95.7108 181.582 li
cp
f
96.4019 179.198 mo
94.0178 179.889 li
94.8643 180.736 li
95.7108 181.582 li
cp
1.063 lw
gsave
[.607273 -.607239 -.607239 -.607273 96.4019 179.198 ]ct
@
grestore newpath
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IEAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRO+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/E <1C60D8A8C9B67031BC131C54DC9C94693096B2617DBF8AE1217F276BD625
FDC0F18993F5BDF5190D22FF7F4165F9F0D82F8D105701D079D638B5640CC076
E3459D19DEAC893BD2C85EE48C8F84> |-
/a <1C60D8A8C9B7BDE3EC5076B9DD7E38E64E726A6C54B306A0C490A11BFAA5
A7F2BFE5727664F0EE3908FB9FE3259630AE60DA068A29D724CA5EDADE792224
9BD245A92F2621C6B1F65F693FB98346367FF40A5058BB83441A5B2D0F836DA5
C75B78DE7B95D7D78354EAC9ADFEAE9D23804AB0D195FD1BF3> |-
/c <1C60D8A8C9B74383EFE2AED1D20DB94D25F65EA0DDCFCFB4A826D66997A3
91AF5D7A5B5FBB73D056E81114D01C5FE3ACFCCA4AA70FA75F3348C80CC88517
20B7369EF1022939925699461F8805AE42EB5D6DBB> |-
/i <1C60D8A8C9B86FAE6A72F95D40DFC0014093276B4B8451DBCAF1A4FF5653
63ABB851E8B0984AFAFDEA481FD7589BA4> |-
/x <1C60D8A8C9B752AB37239F287B04E3F499ECEBD4175708723F4C5593FE67
BA0A6C5BB470808BE993664603D98232B0CA427B5F6FB002D46622B1DCFA410B
9CB831> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRO+CMSS8 /Encoding get
dup 69 /E put
dup 97 /a put
dup 99 /c put
dup 105 /i put
dup 120 /x put
pop
%ADOEndSubsetFont
/HQERRO+CMSS8*1 
[69{/.notdef}rp /E 3{/.notdef}rp /I 3{/.notdef}rp /M 5{/.notdef}rp /S 
13{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
4{/.notdef}rp /n /o 2{/.notdef}rp /r /s /t /u 
2{/.notdef}rp /x /y 134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
102.578 184.841 mo
(Excitato)
[3.81628 2.93222 2.82806 1.51819 2.29797 3.05688 2.298 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IEAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRO+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B797474C287A4E3426F7D00160DB7662802710EA0B74461C1F
DDEB5FE25ED7009FBC774DF7B12B98483980DD0D5E92478DD19AFED35526B515
1EA54DBB3226080C4395A7204FCE5C472B4B66950AC17BA4BEBD3BF90B6B1876
D2F201D639938EE868> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRO+CMSS8 /Encoding get
dup 112 /p put
pop
%ADOEndSubsetFont
/HQERRO+CMSS8*1 
[69{/.notdef}rp /E 3{/.notdef}rp /I 3{/.notdef}rp /M 5{/.notdef}rp /S 
13{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 
4{/.notdef}rp /n /o /p /.notdef /r /s /t 
/u 2{/.notdef}rp /x /y 134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
124.33 184.841 mo
(rysynapse)
[2.17343 5.05234 2.43936 2.93222 3.28561 3.0629 3.28558 2.43936 0 ]xsh
1.02709 lw
87.3863 200.385 mo
94.8576 192.914 li
0 .737728 .508659 0 cmyk
@
93.3178 191.011 mo
96.7602 194.454 li
1.196 lw
gsave
[.607273 -.607239 -.607239 -.607273 93.3177 191.011 ]ct
@
grestore newpath
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IEAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRO+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/h <1C60D8A8C9B797473C374DBF54E933D56D9F9C2D9733BE24271123910440
A5ADB85B171362E2CE13FA85E99D6D9DB581BB147D3FADC70D1FAD66B6491908
EC4BDB839CBBDD28611F2A11> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRO+CMSS8 /Encoding get
dup 104 /h put
pop
%ADOEndSubsetFont
/HQERRO+CMSS8*1 
[69{/.notdef}rp /E 3{/.notdef}rp /I 3{/.notdef}rp /M 5{/.notdef}rp /S 
13{/.notdef}rp /a /.notdef /c /.notdef /e 2{/.notdef}rp /h 
/i 4{/.notdef}rp /n /o /p /.notdef /r /s 
/t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
102.578 197.013 mo
(Inhito)
[1.76743 3.28561 3.28561 1.51816 2.298 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
117.736 197.013 mo
(rysynapse)
[2.17343 5.05832 2.43939 2.93222 3.28561 3.05685 3.28561 2.43939 0 ]xsh
1.02709 lw
90.466 209.478 mo
94.0436 205.9 li
.64361 .39292 0 0 cmyk
@
89.1077 213.552 mo
91.8245 210.836 li
89.1077 208.119 li
86.3909 210.836 li
cp
1.196 lw
gsave
[-.607239 .607239 .607239 .607239 89.1077 213.552 ]ct
@
grestore newpath
95.4022 201.825 mo
92.6853 204.541 li
95.4021 207.258 li
98.119 204.541 li
cp
gsave
[.607273 -.607239 -.607239 -.607273 95.4023 201.825 ]ct
@
grestore newpath
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IEAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRO+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/G <1C60D8A8C9B639EEF07CAB91668BFE26978FC7EA2A8387BB9CCA8280A713
E8A135944903162529BB8E78C1BDB75C4B1B7BD188AAA037445F8351EA36D05A
D483A9783220DDC7BC0378618622E20AF450CE76B9E8FB1330FA01C5CDC472DA
2D412AB3FCD77B44DAF93C8997312D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRO+CMSS8 /Encoding get
dup 71 /G put
pop
%ADOEndSubsetFont
/HQERRO+CMSS8*1 
[69{/.notdef}rp /E /.notdef /G /.notdef /I 3{/.notdef}rp /M 
5{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef /e 
2{/.notdef}rp /h /i 4{/.notdef}rp /n /o /p /.notdef 
/r /s /t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
102.578 209.184 mo
(Gap)
[4.24207 3.05685 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IEAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRO+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/J <1C60D8A8C9B7A66F73515C56A3850B8F5D8B3FC9ED23D370FEC977D8DEEF
726D47AFB4B8D218CAC3E402E5C27142444578BAF8353F49808B9117BB79> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRO+CMSS8 /Encoding get
dup 74 /J put
pop
%ADOEndSubsetFont
/HQERRO+CMSS8*1 
[69{/.notdef}rp /E /.notdef /G /.notdef /I /J 2{/.notdef}rp 
/M 5{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef 
/e 2{/.notdef}rp /h /i 4{/.notdef}rp /n /o /p 
/.notdef /r /s /t /u 2{/.notdef}rp /x /y 
134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
115.28 209.184 mo
(Junction)
[3.00467 3.28561 3.28561 2.82803 2.298 1.51822 3.18198 0 ]xsh
11.9214 55.581 mo
23.5509 35.4384 li
.29187 35.4384 li
cp
0 .737728 .508659 0 cmyk
f
.341792 lw
11.9214 55.5809 mo
23.5509 35.4384 li
.29187 35.4384 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IEAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRO+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B6F21D0B1254000EECEF869B7A46D6E29CDBA99F578EF9963B
0A54FE611C44565F070BEE13039634A660B7E31F1317B3F7038446F8CCCE59FE
7800A6F5EF36A2CDB66D91FBACDCB2EB1B23D6> |-
/P <1C60D8A8C9B65B439BAE0BEDD02D1C53E18EF0CB985488166F55B19E05BD
9192220820DA84A1091388742D49958118D01F2DD4D171EA1A425E99E956B23E
AD4A72E3FD57DD46B45550C26914934B23DCA30B> |-
/V <1C60D8A8C9B639EEFA1D1947F9A75AF5349D840A5DDB4B38F9C1ABD9F21B
76D3115AE523DD53F4354FF1B19B16CD3A5E172FF46E29C248F74E8A89F1C8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRO+CMSS8 /Encoding get
dup 68 /D put
dup 80 /P put
dup 86 /V put
pop
%ADOEndSubsetFont
/HQERRO+CMSS8*1 
[68{/.notdef}rp /D /E /.notdef /G /.notdef /I /J 
2{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S 2{/.notdef}rp /V 
10{/.notdef}rp /a /.notdef /c /.notdef /e 2{/.notdef}rp /h 
/i 4{/.notdef}rp /n /o /p /.notdef /r /s 
/t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
5.46771 44.2325 mo
(PVD)
[4.06541 4.24205 0 ]xsh
48.4366 55.8309 mo
60.2825 35.314 li
36.5907 35.314 li
cp
0 .737728 .508659 0 cmyk
f
48.4366 55.8309 mo
60.2825 35.314 li
36.5907 35.314 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IEAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRO+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B7F94240DA9B62F437FEED5972A1610AA7453FE45136D99586
1D55929F8A91AACE1136C1B364E9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRO+CMSS8 /Encoding get
dup 76 /L put
pop
%ADOEndSubsetFont
/HQERRO+CMSS8*1 
[68{/.notdef}rp /D /E /.notdef /G /.notdef /I /J 
/.notdef /L /M 2{/.notdef}rp /P 2{/.notdef}rp /S 2{/.notdef}rp 
/V 10{/.notdef}rp /a /.notdef /c /.notdef /e 2{/.notdef}rp 
/h /i 4{/.notdef}rp /n /o /p /.notdef /r 
/s /t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
41.8943 44.2325 mo
(PLM)
[4.06543 3.46225 0 ]xsh
94.2579 42.1528 mo
94.2579 37.013 90.0912 32.8471 84.9523 32.8471 cv
79.8125 32.8471 75.6457 37.013 75.6457 42.1528 cv
75.6457 47.2925 79.8125 51.4584 84.9523 51.4584 cv
90.0912 51.4584 94.2579 47.2925 94.2579 42.1528 cv
cp
0 .737728 .508659 0 cmyk
f
1.28301 lw
94.2579 42.1527 mo
94.2579 37.013 90.0912 32.8471 84.9523 32.8471 cv
79.8125 32.8471 75.6457 37.013 75.6457 42.1527 cv
75.6457 47.2925 79.8125 51.4584 84.9523 51.4584 cv
90.0912 51.4584 94.2579 47.2925 94.2579 42.1527 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IEAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRO+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B639EEFA1D194936F6EBA7B815AB493FFDCA39733B61409929
EAB2745BE5390B96B13B7950F2C570F94C24E565B99F7E19202657D0FC8B088B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRO+CMSS8 /Encoding get
dup 65 /A put
pop
%ADOEndSubsetFont
/HQERRO+CMSS8*1 
[65{/.notdef}rp /A 2{/.notdef}rp /D /E /.notdef /G /.notdef 
/I /J /.notdef /L /M 2{/.notdef}rp /P 2{/.notdef}rp 
/S 2{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c /.notdef 
/e 2{/.notdef}rp /h /i 4{/.notdef}rp /n /o /p 
/.notdef /r /s /t /u 2{/.notdef}rp /x /y 
134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
79.2037 44.2325 mo
(AVA)
[3.53534 3.71503 0 ]xsh
131.147 42.1528 mo
131.147 36.8069 126.813 32.4727 121.467 32.4727 cv
116.121 32.4727 111.787 36.8069 111.787 42.1528 cv
111.787 47.4986 116.121 51.8329 121.467 51.8329 cv
126.813 51.8329 131.147 47.4986 131.147 42.1528 cv
cp
.663203 0 .654841 0 cmyk
f
.341792 lw
131.147 42.1527 mo
131.147 36.8069 126.813 32.4726 121.467 32.4726 cv
116.121 32.4726 111.787 36.8069 111.787 42.1527 cv
111.787 47.4986 116.121 51.8329 121.467 51.8329 cv
126.813 51.8329 131.147 47.4986 131.147 42.1527 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 /0 /CSD get_res sepcs
1 sep
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
115.277 44.2325 mo
(AVD)
[3.53534 4.24203 0 ]xsh
53.1485 81.1024 mo
53.1485 75.8115 48.8589 71.5219 43.568 71.5219 cv
38.2771 71.5219 33.9875 75.8115 33.9875 81.1024 cv
33.9875 86.3933 38.2771 90.6829 43.568 90.6829 cv
48.8589 90.6829 53.1485 86.3933 53.1485 81.1024 cv
cp
.663203 0 .654841 0 cmyk
f
53.1485 81.1024 mo
53.1485 75.8115 48.8589 71.5219 43.568 71.5219 cv
38.2771 71.5219 33.9875 75.8115 33.9875 81.1024 cv
33.9875 86.3933 38.2771 90.6829 43.568 90.6829 cv
48.8589 90.6829 53.1485 86.3933 53.1485 81.1024 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
37.4673 83.1822 mo
(PV)
[4.06543 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IEAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRO+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B65A72DDB2B8CFBAD4F0731225005D620B35356594828CF643
1AA27596AB37D9524C995ADCC0E0680427C2B2706C616FF430C0E9A2D5B62897
1C31B25456BF4C3D6099DFBD47C13F381E5C4CB0DFF3780807410414> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRO+CMSS8 /Encoding get
dup 67 /C put
pop
%ADOEndSubsetFont
/HQERRO+CMSS8*1 
[65{/.notdef}rp /A /.notdef /C /D /E /.notdef /G 
/.notdef /I /J /.notdef /L /M 2{/.notdef}rp /P 
2{/.notdef}rp /S 2{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c 
/.notdef /e 2{/.notdef}rp /h /i 4{/.notdef}rp /n /o 
/p /.notdef /r /s /t /u 2{/.notdef}rp /x 
/y 134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
45.5999 83.1822 mo
(C)sh
94.4749 103.011 mo
94.4749 97.7523 90.2111 93.4885 84.952 93.4885 cv
79.692 93.4885 75.429 97.7523 75.429 103.011 cv
75.429 108.271 79.692 112.534 84.952 112.534 cv
90.2111 112.534 94.4749 108.271 94.4749 103.011 cv
cp
0 .737728 .508659 0 cmyk
f
1.28301 lw
94.4749 103.011 mo
94.4749 97.7523 90.2111 93.4885 84.952 93.4885 cv
79.692 93.4885 75.429 97.7523 75.429 103.011 cv
75.429 108.271 79.692 112.534 84.952 112.534 cv
90.2111 112.534 94.4749 108.271 94.4749 103.011 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
78.9392 105.09 mo
(A)sh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IEAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRO+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B639EEFA7BE518E3E755094FD91F3D11918307CE3516F1D477
B9DDAD5CB0B2991772C355A072D41FCF6A25072883AD50B0A360764014A0658B
D97A742D642FEAC12EF963CDA62E01CE2C1BC0CB6580B5CFCED0A02110AC7519
9630C268B503DCC7C241F224E715BCC97C2C6AA911> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRO+CMSS8 /Encoding get
dup 66 /B put
pop
%ADOEndSubsetFont
/HQERRO+CMSS8*1 
[65{/.notdef}rp /A /B /C /D /E /.notdef /G 
/.notdef /I /J /.notdef /L /M 2{/.notdef}rp /P 
2{/.notdef}rp /S 2{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c 
/.notdef /e 2{/.notdef}rp /h /i 4{/.notdef}rp /n /o 
/p /.notdef /r /s /t /u 2{/.notdef}rp /x 
/y 134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
82.4731 105.09 mo
(VB)
[4.24203 0 ]xsh
114.164 114.608 mo
126.316 93.5612 li
102.012 93.5612 li
cp
0 .737728 .508659 0 cmyk
f
.341792 lw
114.164 114.608 mo
126.316 93.5612 li
102.012 93.5612 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 /0 /CSD get_res sepcs
1 sep
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
107.496 102.656 mo
(AVM)
[3.53534 4.24207 0 ]xsh
145.811 114.505 mo
157.873 93.6129 li
133.748 93.6129 li
cp
0 .737728 .508659 0 cmyk
f
145.811 114.505 mo
157.873 93.6129 li
133.748 93.6129 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 /0 /CSD get_res sepcs
1 sep
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
139.178 102.656 mo
(ALM)
[4.24207 3.46225 0 ]xsh
58.1164 120.052 mo
58.1164 114.706 53.783 110.372 48.4362 110.372 cv
43.0904 110.372 38.757 114.706 38.757 120.052 cv
38.757 125.398 43.0904 129.732 48.4362 129.732 cv
53.783 129.732 58.1164 125.398 58.1164 120.052 cv
cp
0 .737728 .508659 0 cmyk
f
58.1164 120.052 mo
58.1164 114.706 53.783 110.372 48.4362 110.372 cv
43.0904 110.372 38.757 114.706 38.757 120.052 cv
38.757 125.398 43.0904 129.732 48.4362 129.732 cv
53.783 129.732 58.1164 125.398 58.1164 120.052 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
42.2472 122.131 mo
(D)sh
1 /0 /CSD get_res sepcs
1 sep
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
46.6613 122.131 mo
(VA)
[3.71503 0 ]xsh
84.9518 126.636 mo
71.6795 149.624 li
98.2242 149.624 li
cp
.64361 .39292 0 0 cmyk
f
84.9518 126.636 mo
71.6795 149.624 li
98.2242 149.624 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IEAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRO+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B7DCE03E79413B6BCDCC8B7EB77728AE82D4CF6B2AB0C2AD2C
4292357102F704681ABA4F7AA25869992B5AC2C24BBF6536423D7A50B7D7B672
AF> |-
/W <1C60D8A8C9B5ED60CD5E404818F6992F62929015400724930F53E9C37A3A
992DCA27482F05B8D6584089B6276E2A97274AC0AA89086488AD993097F7BF32
DA50B0F56F96A8018A4755E9E51FD19DDFD4F1F9BAE4E45317A8C46216BD6306
DE6D5E5A8D854C3CC338E3907B559BEB77701CC4EF3D32C583C904> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRO+CMSS8 /Encoding get
dup 70 /F put
dup 87 /W put
pop
%ADOEndSubsetFont
/HQERRO+CMSS8*1 
[65{/.notdef}rp /A /B /C /D /E /F /G 
/.notdef /I /J /.notdef /L /M 2{/.notdef}rp /P 
2{/.notdef}rp /S 2{/.notdef}rp /V /W 9{/.notdef}rp /a /.notdef 
/c /.notdef /e 2{/.notdef}rp /h /i 4{/.notdef}rp /n 
/o /p /.notdef /r /s /t /u 2{/.notdef}rp 
/x /y 134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
77.8262 144.04 mo
(FWD)
[3.63956 6.01001 0 ]xsh
84.9518 .541748 mo
74.2137 19.1402 li
95.6899 19.1402 li
cp
.64361 .39292 0 0 cmyk
f
84.9518 .541748 mo
74.2137 19.1402 li
95.6899 19.1402 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IEAAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRO+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B6225AB0F88B34076512085C4C4698B77BC0A031BCF047733C
FEC4D76F45EFFF9C929E09EC65F1EF6ECCE89F581A55E4E26BD2B03759E7C59E
130915DC4D2308258C72CC906AD3D72C2206C4D0597B29B32A10EDE0419262> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRO+CMSS8 /Encoding get
dup 82 /R put
pop
%ADOEndSubsetFont
/HQERRO+CMSS8*1 
[65{/.notdef}rp /A /B /C /D /E /F /G 
/.notdef /I /J /.notdef /L /M 2{/.notdef}rp /P 
/.notdef /R /S 2{/.notdef}rp /V /W 9{/.notdef}rp /a 
/.notdef /c /.notdef /e 2{/.notdef}rp /h /i 4{/.notdef}rp 
/n /o /p /.notdef /r /s /t /u 
2{/.notdef}rp /x /y 134{/.notdef}rp]
HQERRO+CMSS8 nf
HQERRO+CMSS8*1 [5.98909 0 0 -5.98909 0 0 ]msf
78.8611 15.0214 mo
(REV)
[4.11749 3.81628 0 ]xsh
1.02709 lw
16.5692 47.8732 mo
35.3875 71.0352 li
0 .737728 .508659 0 cmyk
@
37.4416 69.6974 mo
33.6586 72.7711 li
1.196 lw
gsave
[.542195 .66731 .66731 -.542195 37.4416 69.6974 ]ct
@
grestore newpath
1.02709 lw
11.9217 55.924 mo
11.9217 83.0424 11.4674 120.052 35.3808 120.052 cv
@
35.6379 117.618 mo
35.6379 122.486 li
@
21.7551 35.2673 mo
39.4081 22.9061 59.1487 24.0852 74.1772 34.6077 cv
@
75.7838 32.761 mo
72.9912 36.7494 li
1.196 lw
gsave
[.703533 .49261 .49261 -.703533 75.7838 32.761 ]ct
@
grestore newpath
1.02709 lw
56.5317 42.1527 mo
71.7999 42.1527 li
@
72.0562 39.7185 mo
72.0562 44.5869 li
@
42.6722 46.1891 mo
21.2184 61.2108 22.9514 94.5673 39.2045 110.82 cv
@
41.1071 109.28 mo
37.6647 112.723 li
1.196 lw
gsave
[.607273 .607239 .607239 -.607273 41.1071 109.28 ]ct
@
grestore newpath
1.02709 lw
58.4487 35.1422 mo
76.3549 22.6041 99.0446 19.7307 112.235 32.9214 cv
@
114.138 31.3813 mo
110.695 34.824 li
1.196 lw
gsave
[.607273 .607239 .607239 -.607273 114.138 31.3813 ]ct
@
grestore newpath
1.02709 lw
75.3242 44.7326 mo
60.5344 48.6958 52.1442 57.5386 48.0049 68.9122 cv
@
50.2071 69.9873 mo
45.6265 68.3202 li
1.196 lw
gsave
[-.294078 .808011 .808011 .294078 50.2071 69.9873 ]ct
@
grestore newpath
1.02709 lw
83.2226 51.9598 mo
80.4445 67.7174 80.4067 77.2326 82.6283 89.8317 cv
@
85.0725 89.6612 mo
80.2729 90.5074 li
1.196 lw
gsave
[.149255 .84663 .84663 -.149255 85.0724 89.6613 ]ct
@
grestore newpath
1.02709 lw
94.5794 39.5731 mo
101.116 37.8212 105.397 37.8469 108.832 38.7667 cv
@
109.711 36.4777 mo
108.449 41.1894 li
1.196 lw
gsave
[.831138 .222689 .222689 -.831138 109.711 36.4777 ]ct
@
grestore newpath
1.02709 lw
[2.56687 2.56687 ] 0 dsh
84.9522 32.205 mo
84.9531 19.3122 li
.64361 .39292 0 0 cmyk
@
.855338 lw
[] 0 dsh
46.445 58.0878 mo
45.3295 67.0113 li
@
44.951 53.8544 mo
44.4528 57.8388 li
48.4373 58.337 li
48.9354 54.3525 li
cp
.996 lw
gsave
[.1066 -.85265 -.85265 -.1066 44.951 53.8544 ]ct
@
grestore newpath
46.8233 71.2446 mo
47.3214 67.2601 li
43.3369 66.7621 li
42.8389 70.7465 li
cp
gsave
[-.106582 .85265 .85265 .106582 46.8233 71.2446 ]ct
@
grestore newpath
1.02709 lw
111.616 42.1527 mo
98.3224 42.1527 li
.663203 0 .654841 0 cmyk
@
95.9202 42.1528 mo
98.0946 43.3499 li
98.0946 42.1528 li
98.0946 40.9556 li
cp
f
.912876 lw
95.9202 42.1528 mo
98.0946 43.3499 li
98.0946 42.1528 li
98.0946 40.9556 li
cp
@
1.02709 lw
114.501 49.1187 mo
100.372 63.2472 97.703 75.6677 90.7083 90.667 cv
@
89.6904 92.8496 mo
91.6992 91.3814 li
90.6116 90.8742 li
89.524 90.367 li
cp
f
89.6904 92.8496 mo
91.6992 91.3813 li
90.6116 90.8742 li
89.524 90.367 li
cp
1.063 lw
gsave
[-.363819 .780196 .780196 .363819 89.6904 92.8496 ]ct
@
grestore newpath
1.02709 lw
111.933 44.7072 mo
86.4663 51.531 77.5187 68.746 55.9644 76.5909 cv
@
53.7034 77.4137 mo
56.1592 77.7954 li
55.7493 76.669 li
55.3393 75.5427 li
cp
f
53.7034 77.4137 mo
56.1592 77.7954 li
55.7493 76.669 li
55.3393 75.5427 li
cp
1.063 lw
gsave
[-.808011 .294078 .294078 .808011 53.7034 77.4137 ]ct
@
grestore newpath
1.02709 lw
49.162 73.1136 mo
57.6115 61.0461 62.5632 52.5932 72.804 47.8176 cv
@
74.9872 46.7994 mo
72.5045 46.633 li
73.0117 47.7206 li
73.5189 48.8082 li
cp
f
74.9872 46.7994 mo
72.5046 46.633 li
73.0117 47.7206 li
73.5189 48.8082 li
cp
1.063 lw
gsave
[.780196 -.363819 -.363819 -.780196 74.9872 46.7994 ]ct
@
grestore newpath
1.02709 lw
54.423 71.9936 mo
62.1528 65.5081 67.6885 59.4151 74.8378 52.2667 cv
.64361 .39292 0 0 cmyk
@
52.7071 75.9525 mo
55.6636 73.4716 li
53.1827 70.5151 li
50.2262 72.996 li
cp
1.196 lw
gsave
[-.660818 .55451 .55451 .660818 52.7071 75.9525 ]ct
@
grestore newpath
76.1957 48.1915 mo
73.4789 50.9083 li
76.1957 53.6251 li
78.9125 50.9083 li
cp
gsave
[.607239 -.607239 -.607239 -.607239 76.1957 48.1916 ]ct
@
grestore newpath
1.02709 lw
45.3185 95.1088 mo
46.6736 105.947 li
@
42.9344 91.5327 mo
43.4112 95.3475 li
47.226 94.8706 li
46.7492 91.0559 li
cp
1.196 lw
gsave
[-.106582 -.85265 -.85265 .106582 42.9344 91.5327 ]ct
@
grestore newpath
49.0578 109.523 mo
48.5809 105.708 li
44.7662 106.185 li
45.243 110 li
cp
gsave
[.106582 .85265 .85265 -.106582 49.0578 109.523 ]ct
@
grestore newpath
1.02709 lw
52.2198 85.6828 mo
72.8965 96.6297 li
.663203 0 .654841 0 cmyk
@
75.0279 97.7579 mo
73.661 95.6744 li
73.0987 96.7365 li
72.5364 97.7987 li
cp
f
75.0279 97.7579 mo
73.661 95.6744 li
73.0987 96.7365 li
72.5364 97.7986 li
cp
1.063 lw
gsave
[.761921 .403374 .403374 -.761921 75.0279 97.7579 ]ct
@
grestore newpath
1.02709 lw
53.2885 80.2522 mo
79.7439 77.9378 89.9101 60.3725 109.935 48.8108 cv
@
112.022 47.6059 mo
109.533 47.6566 li
110.133 48.6966 li
110.734 49.7366 li
cp
f
112.022 47.6059 mo
109.533 47.6565 li
110.133 48.6966 li
110.734 49.7366 li
cp
1.063 lw
gsave
[.746077 -.430761 -.430761 -.746077 112.022 47.6059 ]ct
@
grestore newpath
1.02709 lw
85.8381 92.8791 mo
87.225 77.0253 87.2061 67.9232 86.0983 55.2631 cv
0 .737728 .508659 0 cmyk
@
83.6498 55.2195 mo
88.5027 54.795 li
1.196 lw
gsave
[-.0748765 -.856034 -.856034 .0748765 83.6498 55.2195 ]ct
@
grestore newpath
1.02709 lw
92.1394 95.8239 mo
106.286 81.6773 106.523 68.0365 114.918 53.4949 cv
@
112.932 52.0509 mo
117.162 54.4928 li
1.196 lw
gsave
[.430752 -.746077 -.746077 -.430752 112.932 52.0509 ]ct
@
grestore newpath
1.02709 lw
[2.56687 2.56687 ] 0 dsh
84.9518 113.176 mo
84.9518 126.293 li
.64361 .39292 0 0 cmyk
@
[] 0 dsh
106.246 101.237 mo
98.2787 101.901 li
0 .737728 .508659 0 cmyk
@
98.2248 104.349 mo
97.8204 99.496 li
1.196 lw
gsave
[-.856034 .0713383 .0713383 .856034 98.2248 104.349 ]ct
@
grestore newpath
1.02709 lw
126.818 100.577 mo
133.217 100.577 li
.64361 .39292 0 0 cmyk
@
122.976 102.498 mo
126.818 102.498 li
126.818 98.6558 li
122.976 98.6558 li
cp
@
137.058 98.6559 mo
133.216 98.6559 li
133.216 102.498 li
137.058 102.498 li
cp
@
108.903 105.839 mo
80.2828 134.458 79.084 116.618 52.7299 90.2638 cv
0 .737728 .508659 0 cmyk
@
50.8274 91.8038 mo
54.2698 88.361 li
1.196 lw
gsave
[-.607299 -.607239 -.607239 .607299 50.8274 91.8038 ]ct
@
grestore newpath
.855338 lw
115.613 88.9817 mo
119.694 56.3423 li
.64361 .39292 0 0 cmyk
@
117.107 93.2151 mo
117.605 89.2307 li
113.621 88.7326 li
113.123 92.7171 li
cp
.996 lw
gsave
[-.106574 .85265 .85265 .106574 117.107 93.2151 ]ct
@
grestore newpath
118.199 52.1092 mo
117.701 56.0936 li
121.686 56.5917 li
122.184 52.6072 li
cp
gsave
[.106582 -.85265 -.85265 -.106582 118.199 52.1092 ]ct
@
grestore newpath
1.02709 lw
142.838 93.4413 mo
126.5 54.2323 li
0 .737728 .508659 0 cmyk
@
124.149 54.9331 mo
128.653 53.0564 li
1.196 lw
gsave
[-.331057 -.79458 -.79458 .331057 124.149 54.9331 ]ct
@
grestore newpath
1.02709 lw
140.587 105.801 mo
109.099 137.289 62.1384 132.125 48.0047 93.2926 cv
@
45.6264 93.8848 mo
50.207 92.2177 li
1.196 lw
gsave
[-.294078 -.808011 -.808011 .294078 45.6263 93.8848 ]ct
@
grestore newpath
1.02709 lw
45.882 110.518 mo
43.8003 102.751 38.9577 98.3071 40.2081 93.6414 cv
@
37.9187 92.7621 mo
42.6304 94.0244 li
1.196 lw
gsave
[.22268 -.831138 -.831138 -.22268 37.9187 92.7621 ]ct
@
grestore newpath
1.02709 lw
52.6097 111.102 mo
63.5007 87.7463 69.8462 74.5461 79.3803 54.1013 cv
@
77.2771 52.837 mo
81.7001 54.8995 li
1.196 lw
gsave
[.363819 -.780196 -.780196 -.363819 77.2772 52.837 ]ct
@
grestore newpath
1.02709 lw
58.256 119.193 mo
66.8995 118.436 74.1442 118.446 77.2821 113.964 cv
@
75.4355 112.357 mo
79.4238 115.15 li
1.196 lw
gsave
[.492653 -.703533 -.703533 -.492653 75.4355 112.357 ]ct
@
grestore newpath
1.02709 lw
61.3427 114.029 mo
71.7606 109.168 li
.64361 .39292 0 0 cmyk
@
58.6668 117.403 mo
62.1574 115.774 li
60.5284 112.284 li
57.0378 113.913 li
cp
1.196 lw
gsave
[-.780196 .364103 .364103 .780196 58.6668 117.403 ]ct
@
grestore newpath
74.4364 105.793 mo
70.9458 107.422 li
72.5748 110.913 li
76.0654 109.284 li
cp
gsave
[.780196 -.364094 -.364094 -.780196 74.4364 105.793 ]ct
@
grestore newpath
1.02709 lw
34.1301 78.5739 mo
21.3559 75.1508 19.5198 63.0267 16.1689 53.8198 cv
.663203 0 .654841 0 cmyk
@
15.3457 51.5597 mo
14.9639 54.0155 li
16.0903 53.6055 li
17.2167 53.1956 li
cp
f
15.3457 51.5597 mo
14.9639 54.0155 li
16.0903 53.6055 li
17.2167 53.1956 li
cp
1.063 lw
gsave
[-.294078 -.808011 -.808011 .294078 15.3457 51.5597 ]ct
@
grestore newpath
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NEAAAA+CMSSBX10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /NEAAAA+CMSSBX10 def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMSSBX10.) def
/Weight (Bold) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
def
/FontBBox {-71 -250 1099 780} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 458 475 694 716] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [94] def
/StdVW [136] def
/StemSnapV [136 147] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/A <1C60D8A8C9B610D94CAB500B4E6F5D7119F15FAEC51FCAC759818F06372E
B95FE405F65179638132037EC5CF27F81C6B1356B375BBEF22A810A340B7C58E
44FD4ECCC3A87C6896314A770AABF35E871089B5EAF7489AC8D816F71332F3EE
A6676275C3E0C5936C7B60097FB91014BBFE5D302A7ACE67B8F71E4455AB141F
7EE5> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HQERRP+CMSSBX10 /NEAAAA+CMSSBX10 findfont ct_VMDictPut
/HQERRP+CMSSBX10*1 
[65{/.notdef}rp /A 190{/.notdef}rp]
HQERRP+CMSSBX10 nf
HQERRP+CMSSBX10*1 [8.55596 0 0 -8.55596 0 0 ]msf
-229.781 -3.56252 mo
(A)sh
gsave
-219.341 20.4841 mo
-170.656 20.4841 li
-170.656 5.39955 li
-219.341 5.39955 li
-219.341 20.4841 li
clp
.151481 lw
4 ml
-215.752 14.5307 mo
-215.752 14.5307 -211.238 14.8745 -205.692 9.59561 cv
-200.144 4.31594 -193.488 3.16885 -188.018 11.8146 cv
-182.547 20.4596 -177.727 17.132 -170.727 8.67764 cv
-170.727 8.67764 -179.946 31.8976 -191.575 13.0003 cv
-191.575 13.0003 -195.018 4.01051 -203.779 12.5794 cv
-212.539 21.1483 -219.118 16.2132 -219.118 16.2132 cv
-219.118 16.2132 -220.343 15.0661 -215.752 14.5307 cv
cp
.910124 .789548 .619928 .980377 cmyk
@
-182.753 20.2911 mo
-184.74 20.1335 -186.82 18.8857 -188.776 16.6779 cv
-189.858 15.4566 -191.121 13.6681 -191.649 12.6083 cv
-192.377 11.1503 -193.336 10.0735 -194.495 9.41304 cv
-195.351 8.9247 -196.433 8.70505 -197.438 8.81374 cv
-199.384 9.02544 -201.377 10.1629 -203.736 12.4093 cv
-204.062 12.7199 -204.519 13.1438 -204.75 13.35 cv
-209.133 17.2673 -213.821 18.4884 -217.884 16.7718 cv
-218.404 16.5521 -218.984 16.2162 -219.09 16.0742 cv
-219.246 15.8657 -219.143 15.6105 -218.818 15.4033 cv
-218.241 15.0358 -216.827 14.7029 -215.53 14.6304 cv
-213.877 14.538 -212.455 14.1423 -210.718 13.2925 cv
-208.965 12.4351 -207.458 11.3605 -205.59 9.63477 cv
-204.905 9.00177 -204.641 8.77246 -204.157 8.39073 cv
-202.233 6.87081 -200.297 5.95511 -198.381 5.65631 cv
-197.782 5.56296 -196.612 5.56164 -196.022 5.65328 cv
-194.527 5.88638 -193.099 6.54456 -191.724 7.63408 cv
-191.24 8.01866 -190.174 9.07353 -189.739 9.60087 cv
-189.254 10.1888 -188.816 10.7828 -188.353 11.4855 cv
-187.046 13.4663 -186.495 14.1726 -185.575 15.0536 cv
-184.572 16.0159 -183.552 16.6127 -182.492 16.8606 cv
-182.015 16.9721 -180.927 16.9803 -180.439 16.8767 cv
-178.177 16.3954 -175.822 14.6253 -172.54 10.9381 cv
-172.203 10.5601 -171.757 10.0491 -171.549 9.80121 cv
-171.34 9.55429 -171.162 9.35964 -171.152 9.3693 cv
-171.128 9.39372 -171.52 10.2303 -171.897 10.9589 cv
-172.973 13.0349 -174.119 14.7984 -175.355 16.2783 cv
-175.878 16.9064 -176.91 17.9367 -177.436 18.3576 cv
-179.236 19.7976 -180.981 20.4316 -182.753 20.2911 cv
cp
.417121 .325109 .327855 .115206 cmyk
f
grestore
1.71154 lw
-146.311 5.63753 mo
-160.917 5.63753 li
-162.262 5.63753 -163.352 6.72731 -163.352 8.07216 cv
-163.352 9.41612 -162.262 10.5068 -160.917 10.5068 cv
-148.746 10.5068 li
-151.181 10.5068 li
-152.525 10.5068 -153.615 11.5966 -153.615 12.9414 cv
-153.615 14.2854 -152.525 15.3752 -151.181 15.3752 cv
-148.746 15.3752 li
-149.821 15.3752 -150.694 16.2477 -150.694 17.3228 cv
-150.694 18.3989 -149.821 19.2706 -148.746 19.2706 cv
-143.878 19.2706 li
-144.684 19.2706 -145.337 19.9241 -145.337 20.7314 cv
-145.337 21.5377 -144.684 22.1913 -143.878 22.1913 cv
-139.008 22.1913 li
-132.958 22.1913 -128.054 17.2868 -128.054 11.2368 cv
-128.054 6.63284 -130.935 2.51762 -135.262 .943481 cv
-140.981 -1.1382 li
-142.145 -1.80974 -143.635 -1.41127 -144.307 -.246765 cv
-144.897 .776016 -144.668 2.0762 -143.763 2.83536 cv
-139.547 5.26913 li
cp
@
gsave
-219.341 81.3419 mo
-170.656 81.3419 li
-170.656 66.2575 li
-219.341 66.2575 li
-219.341 81.3419 li
clp
.151481 lw
4 ml
-215.752 75.3885 mo
-215.752 75.3885 -211.238 75.7324 -205.692 70.4535 cv
-200.144 65.1738 -193.488 64.0267 -188.018 72.6725 cv
-182.547 81.3175 -177.727 77.9898 -170.727 69.5355 cv
-170.727 69.5355 -179.946 92.7554 -191.575 73.8582 cv
-191.575 73.8582 -195.018 64.8684 -203.779 73.4372 cv
-212.539 82.0061 -219.118 77.0711 -219.118 77.0711 cv
-219.118 77.0711 -220.343 75.924 -215.752 75.3885 cv
cp
.910124 .789548 .619928 .980377 cmyk
@
-182.753 81.1489 mo
-184.74 80.9914 -186.82 79.7435 -188.776 77.5357 cv
-189.858 76.3144 -191.121 74.526 -191.649 73.4662 cv
-192.377 72.0082 -193.336 70.9313 -194.495 70.2709 cv
-195.351 69.7825 -196.433 69.5629 -197.438 69.6716 cv
-199.384 69.8833 -201.377 71.0207 -203.736 73.2672 cv
-204.062 73.5777 -204.519 74.0017 -204.75 74.2079 cv
-209.133 78.1252 -213.821 79.3463 -217.884 77.6296 cv
-218.404 77.41 -218.984 77.0741 -219.09 76.9321 cv
-219.246 76.7236 -219.143 76.4683 -218.818 76.2612 cv
-218.241 75.8937 -216.827 75.5608 -215.53 75.4883 cv
-213.877 75.3959 -212.455 75.0001 -210.718 74.1503 cv
-208.965 73.2929 -207.458 72.2184 -205.59 70.4926 cv
-204.905 69.8596 -204.641 69.6303 -204.157 69.2486 cv
-202.233 67.7287 -200.297 66.813 -198.381 66.5142 cv
-197.782 66.4208 -196.612 66.4195 -196.022 66.5111 cv
-194.527 66.7442 -193.099 67.4024 -191.724 68.4919 cv
-191.24 68.8765 -190.174 69.9314 -189.739 70.4587 cv
-189.254 71.0467 -188.816 71.6406 -188.353 72.3433 cv
-187.046 74.3241 -186.495 75.0304 -185.575 75.9115 cv
-184.572 76.8737 -183.552 77.4706 -182.492 77.7184 cv
-182.015 77.83 -180.927 77.8381 -180.439 77.7345 cv
-178.177 77.2532 -175.822 75.4831 -172.54 71.7959 cv
-172.203 71.418 -171.757 70.9069 -171.549 70.6591 cv
-171.34 70.4121 -171.162 70.2175 -171.152 70.2271 cv
-171.128 70.2516 -171.52 71.0881 -171.897 71.8167 cv
-172.973 73.8928 -174.119 75.6562 -175.355 77.1362 cv
-175.878 77.7643 -176.91 78.7945 -177.436 79.2154 cv
-179.236 80.6555 -180.981 81.2894 -182.753 81.1489 cv
cp
.417121 .325109 .327855 .115206 cmyk
f
grestore
%ADOBeginSubsetFont: DEAAAA+CMSS10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRN+CMSS10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B737EC27E43BF1977FE17ADFD232FE85F5EFD5C586
2A0BCB221BD72F5DFF64E9FED5D9544D67B5EC2A6104879FF77CB542587AF349
2ABB2D617A82C5D7037237C93E3E4BAD01841748B3C8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRN+CMSS10 /Encoding get
dup 40 /parenleft put
pop
%ADOEndSubsetFont
/HQERRN+CMSS10*1 
[40{/.notdef}rp /parenleft 17{/.notdef}rp /colon 17{/.notdef}rp /L 23{/.notdef}rp /d 
/e /.notdef /g 6{/.notdef}rp /n 145{/.notdef}rp]
HQERRN+CMSS10 nf
HQERRN+CMSS10*1 [8.2642 -2.21428 -2.21428 -8.2642 0 0 ]msf
-185.871 63.0508 mo
(\(\()
[3.21396 -.86113 0 0 ]xysh
%ADOBeginSubsetFont: DEAAAA+CMSS10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRN+CMSS10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenright <1C60D8A8C9B737EC27E43BF1977FE17AF2262CF64EF962DFDAC
02AB55D2052756AA63120FAA4DF07747C062A66782FCA254E0720B3E8AC47FE4
D121674CB18260D9B55604C1C9BF203D4A1C3D9A16AD59F> |-
/T <1C60D8A8C9B65DE7084A9E9492A58835F7940251EB98B239FECA182B1BFC
F1490B6E4D78F5C11463D1DCC6B135919DD08858C1F3F60777E0E8860DD0FD54> |-
/a <1C60D8A8C9B75BE56E33EB69405267CDDC8DB4C66FE9B1473F4E80C7A28C
AD56100A17F72621ED8AE9CAC52360ADFB886B00F8AE36A7804C886400067321
140FA115B1A1C52E49A8B8E111DF40827A37FDEBF533C521D5AE7DF3D5D00062
EE305CF4BF08EA8722CF10765BFA02BF9B87B0FF67DDF91C0D> |-
/p <1C60D8A8C9B7B71A401521EFAFFC87595FB9107185CDB6BE7DDAEAF81CEB
CE462D81F0291C4C1D750855BCB321DCEB30D0F293A0DC910A249A6B5D487CD5
E1F65C3AD6D7BA5EE2BC2B5818A2389DD74DC4EDB2D916E0DC2E85C9B9450915
7654165891B9658B19> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRN+CMSS10 /Encoding get
dup 41 /parenright put
dup 84 /T put
dup 97 /a put
dup 112 /p put
pop
%ADOEndSubsetFont
/HQERRN+CMSS10*1 
[40{/.notdef}rp /parenleft /parenright 16{/.notdef}rp /colon 17{/.notdef}rp /L 7{/.notdef}rp 
/T 12{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g 
6{/.notdef}rp /n /.notdef /p 143{/.notdef}rp]
HQERRN+CMSS10 nf
HQERRN+CMSS10*1 [8.2642 -2.21428 -2.21428 -8.2642 0 0 ]msf
-176.689 60.5969 mo
(Tap\)\))
[4.93872 -1.32326 3.97183 -1.06419 7.02197 -1.88145 3.21396 -.861145 0 0 ]xysh
-153.614 66.4962 mo
-168.22 66.4962 li
-169.565 66.4962 -170.655 67.586 -170.655 68.9308 cv
-170.655 70.2748 -169.565 71.3655 -168.22 71.3655 cv
-156.049 71.3655 li
-158.484 71.3655 li
-159.828 71.3655 -160.918 72.4553 -160.918 73.8001 cv
-160.918 75.1441 -159.828 76.2339 -158.484 76.2339 cv
-156.049 76.2339 li
-157.124 76.2339 -157.997 77.1064 -157.997 78.1816 cv
-157.997 79.2576 -157.124 80.1292 -156.049 80.1292 cv
-151.181 80.1292 li
-151.987 80.1292 -152.641 80.7828 -152.641 81.59 cv
-152.641 82.3964 -151.987 83.05 -151.181 83.05 cv
-146.311 83.05 li
-140.261 83.05 -135.357 78.1455 -135.357 72.0954 cv
-135.357 67.4915 -138.238 63.3763 -142.565 61.8022 cv
-148.284 59.7205 li
-149.449 59.0489 -150.938 59.4474 -151.61 60.6119 cv
-152.2 61.6347 -151.971 62.9349 -151.066 63.6941 cv
-146.85 66.1278 li
cp
@
gsave
-221.775 142.2 mo
-173.09 142.2 li
-173.09 127.115 li
-221.775 127.115 li
-221.775 142.2 li
clp
-184.649 142.2 mo
-184.731 142.2 li
-185.502 142.194 -186.3 142.042 -187.12 141.714 cv
-187.052 141.687 -186.985 141.659 -186.918 141.63 cv
-186.151 141.918 -185.406 142.048 -184.688 142.048 cv
-184.686 142.048 -184.684 142.048 -184.682 142.048 cv
-181.296 142.048 -178.427 139.141 -176.41 136.216 cv
-175.402 134.753 -174.606 133.29 -174.063 132.193 cv
-173.782 131.624 -173.569 131.155 -173.429 130.834 cv
-177.034 135.143 -180.06 138.054 -182.944 138.586 cv
-182.889 138.524 -182.834 138.462 -182.779 138.4 cv
-179.942 137.772 -176.877 134.768 -173.219 130.345 cv
-173.09 130.421 li
-173.092 130.424 -174.257 133.361 -176.286 136.302 cv
-178.307 139.229 -181.185 142.174 -184.649 142.2 cv
-187.321 141.63 mo
-187.333 141.624 -187.345 141.619 -187.357 141.614 cv
-187.29 141.589 -187.223 141.563 -187.156 141.536 cv
-187.143 141.541 -187.131 141.546 -187.119 141.551 cv
-187.186 141.578 -187.253 141.604 -187.321 141.63 cv
-216.569 139.419 mo
-216.57 139.419 -216.57 139.419 -216.571 139.419 cv
-217.479 139.419 -218.283 139.298 -218.967 139.127 cv
-218.861 139.102 -218.753 139.075 -218.645 139.047 cv
-218.036 139.179 -217.342 139.267 -216.571 139.267 cv
-213.904 139.267 -210.326 138.212 -206.266 134.241 cv
-204.705 132.714 -203.309 131.74 -202.068 131.173 cv
-202.01 131.202 -201.954 131.232 -201.898 131.263 cv
-203.145 131.813 -204.562 132.786 -206.16 134.349 cv
-210.24 138.342 -213.861 139.419 -216.569 139.419 cv
-219.285 139.042 mo
-219.301 139.037 -219.318 139.032 -219.334 139.028 cv
-219.229 139.006 -219.123 138.983 -219.018 138.958 cv
-219 138.962 -218.983 138.967 -218.966 138.971 cv
-219.073 138.997 -219.179 139.02 -219.285 139.042 cv
-183.229 138.63 mo
-183.173 138.571 -183.118 138.513 -183.065 138.455 cv
-183.051 138.453 -183.038 138.45 -183.024 138.448 cv
-183.077 138.507 -183.13 138.566 -183.184 138.624 cv
-183.199 138.626 -183.214 138.629 -183.229 138.63 cv
-186.218 138.077 mo
-186.223 138.075 -186.228 138.072 -186.232 138.07 cv
-186.175 138.043 -186.118 138.016 -186.06 137.988 cv
-186.055 137.99 -186.051 137.993 -186.046 137.995 cv
-186.103 138.023 -186.161 138.051 -186.218 138.077 cv
-186.398 137.979 mo
-187.766 137.208 -189.123 135.772 -190.515 133.571 cv
-193.35 129.093 -196.486 127.267 -199.613 127.267 cv
-199.614 127.267 -199.615 127.267 -199.615 127.267 cv
-200.355 127.267 -201.095 127.369 -201.832 127.564 cv
-201.919 127.534 -202.005 127.506 -202.092 127.479 cv
-201.27 127.241 -200.442 127.115 -199.613 127.115 cv
-196.422 127.115 -193.235 128.986 -190.387 133.49 cv
-188.967 135.734 -187.596 137.161 -186.228 137.901 cv
-186.285 137.928 -186.342 137.954 -186.398 137.979 cv
-191.941 137.558 mo
-192.106 137.439 -192.27 137.31 -192.434 137.171 cv
-192.444 137.158 -192.453 137.145 -192.463 137.132 cv
-192.298 137.273 -192.132 137.405 -191.967 137.526 cv
-191.958 137.537 -191.949 137.548 -191.941 137.558 cv
-192.352 137.028 mo
-192.544 136.864 -192.736 136.686 -192.929 136.494 cv
-193.308 135.959 -193.689 135.38 -194.074 134.756 cv
-194.077 134.75 li
-194.08 134.743 li
-194.08 134.742 -194.176 134.491 -194.381 134.108 cv
-194.765 133.389 -195.521 132.229 -196.704 131.458 cv
-196.8 131.34 -196.896 131.224 -196.992 131.111 cv
-194.928 132.227 -193.998 134.54 -193.941 134.682 cv
-193.406 135.552 -192.876 136.332 -192.352 137.028 cv
-197.091 131.229 mo
-197.106 131.22 -197.122 131.212 -197.137 131.204 cv
-197.214 131.116 -197.303 131.017 -197.4 130.913 cv
-197.381 130.921 -197.363 130.929 -197.344 130.937 cv
-197.26 131.032 -197.175 131.13 -197.091 131.229 cv
-201.723 131.188 mo
-201.779 131.156 -201.835 131.125 -201.891 131.095 cv
-201.885 131.092 -201.879 131.089 -201.873 131.087 cv
-201.848 131.1 -201.823 131.115 -201.798 131.129 cv
-201.767 131.146 -201.737 131.163 -201.707 131.181 cv
-201.713 131.184 -201.718 131.186 -201.723 131.188 cv
-202.134 127.649 mo
-202.221 127.622 -202.307 127.596 -202.394 127.571 cv
-202.381 127.567 -202.368 127.563 -202.355 127.559 cv
-202.268 127.583 -202.181 127.609 -202.093 127.637 cv
-202.107 127.641 -202.12 127.645 -202.134 127.649 cv
.274725 .238016 .187097 .29604 cmyk
f
-184.706 142.026 mo
-184.867 142.026 -185.027 142.02 -185.187 142.007 cv
-185.748 141.962 -186.316 141.831 -186.886 141.616 cv
-185.428 140.979 -184.112 139.878 -182.966 138.61 cv
-182.933 138.604 -182.902 138.599 -182.873 138.592 cv
-180.61 138.111 -178.256 136.341 -174.973 132.654 cv
-174.637 132.276 -174.191 131.765 -173.982 131.517 cv
-173.779 131.276 -173.604 131.085 -173.587 131.085 cv
-173.587 131.085 -173.586 131.085 -173.586 131.085 cv
-173.561 131.109 -173.953 131.946 -174.331 132.675 cv
-175.407 134.751 -176.553 136.514 -177.789 137.994 cv
-178.312 138.622 -179.344 139.652 -179.87 140.073 cv
-181.507 141.383 -183.098 142.026 -184.706 142.026 cv
-187.086 141.537 mo
-187.099 141.532 -187.111 141.527 -187.123 141.522 cv
-186.334 141.198 -185.542 140.716 -184.739 140.073 cv
-184.371 139.779 -183.756 139.187 -183.24 138.642 cv
-183.226 138.641 -183.211 138.64 -183.197 138.638 cv
-184.342 139.88 -185.65 140.942 -187.086 141.537 cv
-216.573 139.246 mo
-217.256 139.246 -217.931 139.175 -218.593 139.033 cv
-216.381 138.439 -213.812 137.072 -211.029 134.349 cv
-208.209 131.591 -205.954 130.669 -204.199 130.669 cv
-204.199 130.669 -204.198 130.669 -204.198 130.669 cv
-204.196 130.669 -204.195 130.669 -204.193 130.669 cv
-203.393 130.669 -202.693 130.861 -202.087 131.163 cv
-203.357 131.745 -204.692 132.717 -206.17 134.125 cv
-206.496 134.436 -206.952 134.86 -207.184 135.066 cv
-210.271 137.824 -213.509 139.246 -216.573 139.246 cv
-218.913 138.958 mo
-218.93 138.954 -218.947 138.95 -218.964 138.945 cv
-216.665 138.394 -214.318 137.09 -212.053 135.066 cv
-211.822 134.86 -211.365 134.436 -211.039 134.125 cv
-208.68 131.879 -206.687 130.741 -204.741 130.529 cv
-204.572 130.511 -204.401 130.502 -204.229 130.502 cv
-203.416 130.502 -202.586 130.704 -201.892 131.076 cv
-201.898 131.079 -201.905 131.082 -201.911 131.084 cv
-202.56 130.742 -203.32 130.519 -204.198 130.517 cv
-206.009 130.518 -208.3 131.468 -211.135 134.241 cv
-214.023 137.066 -216.667 138.415 -218.913 138.958 cv
-188.365 138.658 mo
-187.668 138.604 -186.963 138.405 -186.246 138.076 cv
-186.241 138.078 -186.236 138.081 -186.232 138.083 cv
-186.746 138.319 -187.246 138.487 -187.742 138.592 cv
-187.901 138.626 -188.122 138.648 -188.365 138.658 cv
-189.231 138.649 mo
-189.452 138.634 -189.651 138.61 -189.795 138.576 cv
-190.501 138.411 -191.189 138.091 -191.866 137.612 cv
-191.874 137.602 -191.883 137.591 -191.891 137.581 cv
-191.01 138.21 -190.128 138.557 -189.231 138.649 cv
-188.734 138.522 mo
-188.737 138.522 -188.741 138.522 -188.744 138.522 cv
-189.927 138.522 -191.091 138.076 -192.266 137.1 cv
-193.02 136.11 -193.723 135.047 -194.083 134.324 cv
-194.811 132.866 -195.77 131.789 -196.928 131.129 cv
-196.959 131.111 -196.989 131.095 -197.02 131.078 cv
-198.554 129.285 -200.161 128.153 -201.793 127.578 cv
-201.467 127.491 -201.141 127.423 -200.815 127.372 cv
-200.512 127.325 -200.063 127.301 -199.616 127.301 cv
-199.181 127.301 -198.748 127.324 -198.456 127.369 cv
-196.961 127.602 -195.533 128.26 -194.158 129.35 cv
-193.673 129.734 -192.608 130.789 -192.173 131.317 cv
-191.687 131.904 -191.25 132.499 -190.787 133.201 cv
-189.479 135.182 -188.929 135.888 -188.009 136.769 cv
-187.482 137.275 -186.951 137.679 -186.411 137.985 cv
-187.204 138.337 -187.976 138.522 -188.734 138.522 cv
-197.369 130.909 mo
-197.388 130.901 -197.407 130.893 -197.426 130.885 cv
-197.935 130.341 -198.654 129.646 -199.027 129.35 cv
-200.02 128.563 -201.04 128.001 -202.094 127.662 cv
-202.08 127.658 -202.066 127.654 -202.053 127.65 cv
-200.459 128.164 -198.884 129.213 -197.369 130.909 cv
.125521 .0982853 .0994694 .0343406 cmyk
f
grestore
gsave
-226.644 142.2 mo
-177.959 142.2 li
-177.959 127.115 li
-226.644 127.115 li
-226.644 142.2 li
clp
-189.518 142.2 mo
-189.6 142.2 li
-192.424 142.179 -195.591 140.203 -198.943 134.756 cv
-198.946 134.75 li
-198.949 134.743 li
-198.949 134.742 -199.046 134.491 -199.25 134.108 cv
-199.668 133.325 -200.527 132.02 -201.898 131.263 cv
-201.839 131.237 -201.781 131.212 -201.723 131.188 cv
-199.759 132.328 -198.869 134.536 -198.811 134.681 cv
-195.453 140.134 -192.313 142.049 -189.557 142.048 cv
-189.555 142.048 -189.553 142.048 -189.551 142.048 cv
-188.779 142.048 -188.035 141.897 -187.321 141.63 cv
-187.254 141.659 -187.187 141.687 -187.12 141.714 cv
-187.883 142.018 -188.684 142.194 -189.518 142.2 cv
-186.918 141.63 mo
-186.985 141.605 -187.052 141.578 -187.119 141.551 cv
-187.108 141.546 -187.097 141.542 -187.086 141.537 cv
-187.02 141.565 -186.953 141.591 -186.886 141.616 cv
-186.897 141.621 -186.907 141.625 -186.918 141.63 cv
-221.438 139.419 mo
-221.439 139.419 -221.44 139.419 -221.44 139.419 cv
-224.56 139.418 -226.459 137.995 -226.467 137.99 cv
-226.47 137.987 li
-226.473 137.984 li
-226.478 137.978 -226.629 137.841 -226.644 137.617 cv
-226.644 137.552 li
-226.629 137.329 -226.458 137.071 -225.968 136.836 cv
-225.45 136.586 -224.566 136.346 -223.064 136.171 cv
-223.057 136.17 li
-223.05 136.171 li
-223.049 136.171 -222.993 136.175 -222.881 136.175 cv
-222.016 136.175 -217.94 135.913 -213.047 131.256 cv
-210.373 128.711 -207.435 127.116 -204.483 127.115 cv
-203.684 127.115 -202.885 127.232 -202.092 127.479 cv
-202.18 127.504 -202.268 127.531 -202.355 127.559 cv
-203.062 127.361 -203.773 127.267 -204.483 127.267 cv
-204.483 127.267 -204.484 127.267 -204.485 127.267 cv
-207.379 127.267 -210.285 128.837 -212.942 131.366 cv
-217.858 136.045 -221.976 136.327 -222.878 136.327 cv
-222.879 136.327 -222.88 136.327 -222.881 136.327 cv
-222.976 136.327 -223.034 136.324 -223.054 136.322 cv
-224.542 136.496 -225.412 136.735 -225.902 136.972 cv
-226.395 137.213 -226.494 137.435 -226.494 137.587 cv
-226.431 137.794 li
-226.387 137.855 li
-226.372 137.872 li
-226.349 137.889 -226.237 137.969 -226.04 138.085 cv
-225.373 138.478 -223.745 139.267 -221.44 139.267 cv
-220.776 139.267 -220.055 139.202 -219.285 139.042 cv
-219.182 139.071 -219.076 139.1 -218.967 139.127 cv
-219.856 139.335 -220.683 139.419 -221.438 139.419 cv
-223.047 136.322 mo
-223.047 136.322 li
-223.047 136.322 li
-223.055 136.246 mo
-223.055 136.246 li
-223.047 136.322 li
-223.055 136.246 li
-218.645 139.047 mo
-218.755 139.023 -218.862 138.998 -218.966 138.971 cv
-218.949 138.967 -218.931 138.963 -218.913 138.958 cv
-218.807 138.985 -218.7 139.01 -218.593 139.033 cv
-218.61 139.038 -218.628 139.042 -218.645 139.047 cv
-183.197 138.638 mo
-183.193 138.634 -183.188 138.629 -183.184 138.624 cv
-183.104 138.613 -183.024 138.6 -182.944 138.586 cv
-182.951 138.594 -182.959 138.602 -182.966 138.61 cv
-183.035 138.621 -183.113 138.631 -183.197 138.638 cv
-183.024 138.448 mo
-182.388 137.739 -181.805 136.978 -181.28 136.216 cv
-180.271 134.753 -179.476 133.29 -178.933 132.193 cv
-178.652 131.624 -178.439 131.155 -178.299 130.834 cv
-181.181 134.28 -183.694 136.832 -186.06 137.988 cv
-186.116 137.96 -186.172 137.931 -186.228 137.901 cv
-183.787 136.745 -181.145 134.04 -178.088 130.345 cv
-177.959 130.421 li
-177.961 130.424 -179.126 133.361 -181.155 136.302 cv
-181.647 137.014 -182.189 137.727 -182.779 138.4 cv
-182.861 138.418 -182.942 138.434 -183.024 138.448 cv
-186.246 138.076 mo
-186.301 138.047 -186.356 138.016 -186.411 137.985 cv
-186.407 137.983 -186.403 137.981 -186.398 137.979 cv
-186.343 138.01 -186.288 138.041 -186.232 138.07 cv
-186.237 138.072 -186.241 138.074 -186.246 138.076 cv
-191.891 137.581 mo
-191.916 137.563 -191.941 137.545 -191.967 137.526 cv
-192.094 137.365 -192.223 137.199 -192.352 137.028 cv
-192.323 137.052 -192.295 137.076 -192.266 137.1 cv
-192.142 137.263 -192.016 137.424 -191.891 137.581 cv
-192.463 137.132 mo
-193.43 136.305 -194.399 135.13 -195.385 133.571 cv
-195.943 132.689 -196.512 131.911 -197.091 131.229 cv
-196.957 131.3 -196.828 131.377 -196.704 131.458 cv
-196.213 132.065 -195.73 132.741 -195.257 133.49 cv
-194.468 134.736 -193.695 135.73 -192.929 136.494 cv
-192.773 136.714 -192.618 136.926 -192.463 137.132 cv
-202.068 131.173 mo
-202.074 131.17 -202.081 131.166 -202.087 131.163 cv
-202.028 131.136 -201.969 131.11 -201.911 131.084 cv
-201.904 131.088 -201.898 131.091 -201.891 131.095 cv
-201.95 131.12 -202.009 131.146 -202.068 131.173 cv
-196.992 131.111 mo
-197.106 131.049 -197.223 130.991 -197.344 130.937 cv
-197.353 130.928 -197.361 130.919 -197.369 130.909 cv
-197.25 130.961 -197.133 131.017 -197.02 131.078 cv
-197.011 131.089 -197.001 131.1 -196.992 131.111 cv
-202.053 127.65 mo
-202.067 127.646 -202.08 127.641 -202.093 127.637 cv
-202.006 127.611 -201.919 127.587 -201.832 127.564 cv
-201.819 127.569 -201.807 127.573 -201.793 127.578 cv
-201.88 127.601 -201.966 127.625 -202.053 127.65 cv
.456686 .395663 .311019 .492118 cmyk
f
-187.12 141.714 mo
-187.187 141.687 -187.254 141.659 -187.321 141.63 cv
-187.253 141.604 -187.186 141.578 -187.119 141.551 cv
-187.052 141.578 -186.985 141.605 -186.918 141.63 cv
-186.985 141.659 -187.052 141.687 -187.12 141.714 cv
-218.967 139.127 mo
-219.076 139.1 -219.182 139.071 -219.285 139.042 cv
-219.179 139.02 -219.073 138.997 -218.966 138.971 cv
-218.862 138.998 -218.755 139.023 -218.645 139.047 cv
-218.753 139.075 -218.861 139.102 -218.967 139.127 cv
-183.184 138.624 mo
-183.13 138.566 -183.077 138.507 -183.024 138.448 cv
-182.942 138.434 -182.861 138.418 -182.779 138.4 cv
-182.834 138.462 -182.889 138.524 -182.944 138.586 cv
-183.024 138.6 -183.104 138.613 -183.184 138.624 cv
-186.232 138.07 mo
-186.288 138.041 -186.343 138.01 -186.398 137.979 cv
-186.342 137.954 -186.285 137.928 -186.228 137.901 cv
-186.172 137.931 -186.116 137.96 -186.06 137.988 cv
-186.118 138.016 -186.175 138.043 -186.232 138.07 cv
-191.967 137.526 mo
-192.132 137.405 -192.298 137.273 -192.463 137.132 cv
-192.618 136.926 -192.773 136.714 -192.929 136.494 cv
-192.736 136.686 -192.544 136.864 -192.352 137.028 cv
-192.223 137.199 -192.094 137.365 -191.967 137.526 cv
-196.704 131.458 mo
-196.828 131.377 -196.957 131.3 -197.091 131.229 cv
-197.175 131.13 -197.26 131.032 -197.344 130.937 cv
-197.223 130.991 -197.106 131.049 -196.992 131.111 cv
-196.896 131.224 -196.8 131.34 -196.704 131.458 cv
-201.898 131.263 mo
-201.954 131.232 -202.01 131.202 -202.068 131.173 cv
-202.009 131.146 -201.95 131.12 -201.891 131.095 cv
-201.835 131.125 -201.779 131.156 -201.723 131.188 cv
-201.781 131.212 -201.839 131.237 -201.898 131.263 cv
-202.093 127.637 mo
-202.181 127.609 -202.268 127.583 -202.355 127.559 cv
-202.268 127.531 -202.18 127.504 -202.092 127.479 cv
-202.005 127.506 -201.919 127.534 -201.832 127.564 cv
-201.919 127.587 -202.006 127.611 -202.093 127.637 cv
.592265 .513126 .403353 .638216 cmyk
f
-186.886 141.616 mo
-186.953 141.591 -187.02 141.565 -187.086 141.537 cv
-185.65 140.942 -184.342 139.88 -183.197 138.638 cv
-183.113 138.631 -183.035 138.621 -182.966 138.61 cv
-184.112 139.878 -185.428 140.979 -186.886 141.616 cv
-218.593 139.033 mo
-218.7 139.01 -218.807 138.985 -218.913 138.958 cv
-216.667 138.415 -214.023 137.066 -211.135 134.241 cv
-208.3 131.468 -206.009 130.518 -204.198 130.517 cv
-203.32 130.519 -202.56 130.742 -201.911 131.084 cv
-201.969 131.11 -202.028 131.136 -202.087 131.163 cv
-202.693 130.861 -203.393 130.669 -204.193 130.669 cv
-204.195 130.669 -204.196 130.669 -204.198 130.669 cv
-204.198 130.669 -204.199 130.669 -204.199 130.669 cv
-205.954 130.669 -208.209 131.591 -211.029 134.349 cv
-213.812 137.072 -216.381 138.439 -218.593 139.033 cv
-188.706 138.665 mo
-188.884 138.665 -189.064 138.66 -189.231 138.649 cv
-190.128 138.557 -191.01 138.21 -191.891 137.581 cv
-192.016 137.424 -192.142 137.263 -192.266 137.1 cv
-191.091 138.076 -189.927 138.522 -188.744 138.522 cv
-188.741 138.522 -188.737 138.522 -188.734 138.522 cv
-187.976 138.522 -187.204 138.337 -186.411 137.985 cv
-186.356 138.016 -186.301 138.047 -186.246 138.076 cv
-186.963 138.405 -187.668 138.604 -188.365 138.658 cv
-188.476 138.663 -188.59 138.665 -188.706 138.665 cv
-197.02 131.078 mo
-197.133 131.017 -197.25 130.961 -197.369 130.909 cv
-198.884 129.213 -200.459 128.164 -202.053 127.65 cv
-201.966 127.625 -201.88 127.601 -201.793 127.578 cv
-200.161 128.153 -198.554 129.285 -197.02 131.078 cv
.52589 .462068 .4008 .584606 cmyk
f
-189.576 142.026 mo
-189.736 142.026 -189.896 142.02 -190.056 142.007 cv
-192.043 141.849 -194.123 140.601 -196.079 138.394 cv
-197.161 137.172 -198.424 135.384 -198.952 134.324 cv
-199.661 132.904 -200.589 131.846 -201.707 131.181 cv
-200.83 130.819 -200.039 130.669 -199.33 130.669 cv
-199.33 130.669 -199.329 130.669 -199.329 130.669 cv
-199.327 130.669 -199.326 130.669 -199.324 130.669 cv
-198.488 130.669 -197.761 130.879 -197.137 131.204 cv
-197.103 131.244 -197.071 131.281 -197.042 131.317 cv
-196.557 131.904 -196.119 132.499 -195.656 133.201 cv
-194.349 135.182 -193.798 135.888 -192.878 136.769 cv
-192.731 136.911 -192.582 137.045 -192.434 137.171 cv
-190.673 139.499 -188.973 140.902 -187.357 141.614 cv
-188.097 141.889 -188.835 142.026 -189.576 142.026 cv
-187.156 141.536 mo
-188.67 140.904 -190.273 139.651 -191.941 137.558 cv
-191.916 137.576 -191.891 137.594 -191.866 137.612 cv
-191.645 137.888 -191.424 138.152 -191.209 138.394 cv
-189.882 139.892 -188.497 140.949 -187.123 141.522 cv
-187.134 141.527 -187.145 141.531 -187.156 141.536 cv
-221.442 139.246 mo
-222.729 139.246 -223.985 138.995 -225.187 138.487 cv
-225.707 138.268 -226.287 137.932 -226.394 137.79 cv
-226.549 137.581 -226.446 137.326 -226.121 137.119 cv
-225.544 136.752 -224.13 136.419 -222.833 136.346 cv
-221.18 136.254 -219.758 135.858 -218.021 135.008 cv
-216.268 134.151 -214.761 133.076 -212.893 131.35 cv
-212.208 130.718 -211.943 130.488 -211.46 130.106 cv
-209.536 128.587 -207.6 127.671 -205.684 127.372 cv
-205.381 127.325 -204.932 127.301 -204.486 127.301 cv
-204.05 127.301 -203.617 127.324 -203.325 127.369 cv
-203.012 127.418 -202.702 127.485 -202.394 127.571 cv
-204.392 128.217 -206.347 129.514 -208.178 131.256 cv
-213.071 135.913 -217.147 136.175 -218.012 136.175 cv
-218.124 136.175 -218.18 136.171 -218.18 136.171 cv
-218.18 136.171 li
-218.188 136.17 li
-218.195 136.171 li
-219.696 136.346 -220.581 136.586 -221.099 136.836 cv
-221.587 137.07 -221.758 137.328 -221.775 137.55 cv
-221.775 137.619 li
-221.759 137.842 -221.609 137.978 -221.604 137.984 cv
-221.601 137.987 li
-221.598 137.99 li
-221.593 137.993 -220.775 138.606 -219.334 139.028 cv
-220.043 139.173 -220.747 139.246 -221.442 139.246 cv
-219.018 138.958 mo
-220.036 138.693 -220.773 138.319 -221.171 138.085 cv
-221.368 137.969 -221.479 137.889 -221.502 137.872 cv
-221.518 137.855 li
-221.562 137.794 li
-221.625 137.587 li
-221.624 137.435 -221.526 137.213 -221.033 136.972 cv
-220.543 136.735 -219.672 136.496 -218.184 136.322 cv
-218.165 136.324 -218.106 136.327 -218.012 136.327 cv
-218.01 136.327 -218.009 136.327 -218.008 136.327 cv
-217.107 136.327 -212.989 136.045 -208.073 131.366 cv
-206.188 129.571 -204.177 128.26 -202.134 127.649 cv
-202.121 127.653 -202.107 127.658 -202.094 127.662 cv
-203.59 128.107 -205.094 128.924 -206.591 130.106 cv
-207.074 130.488 -207.338 130.718 -208.024 131.35 cv
-209.892 133.076 -211.398 134.151 -213.151 135.008 cv
-214.889 135.858 -216.311 136.254 -217.963 136.346 cv
-219.261 136.419 -220.675 136.752 -221.252 137.119 cv
-221.577 137.326 -221.68 137.581 -221.524 137.79 cv
-221.418 137.932 -220.838 138.268 -220.318 138.487 cv
-219.874 138.675 -219.422 138.828 -218.964 138.945 cv
-218.982 138.95 -219 138.954 -219.018 138.958 cv
-183.496 138.658 mo
-183.407 138.651 -183.318 138.642 -183.229 138.63 cv
-183.233 138.634 -183.237 138.638 -183.24 138.642 cv
-183.321 138.649 -183.407 138.654 -183.496 138.658 cv
-184.361 138.649 mo
-184.583 138.634 -184.782 138.61 -184.926 138.576 cv
-185.367 138.473 -185.802 138.309 -186.232 138.083 cv
-186.227 138.081 -186.223 138.079 -186.218 138.077 cv
-185.604 138.397 -184.986 138.585 -184.361 138.649 cv
-183.865 138.522 mo
-183.868 138.522 -183.872 138.522 -183.875 138.522 cv
-184.603 138.522 -185.325 138.353 -186.046 137.995 cv
-184.267 137.126 -182.319 135.435 -179.843 132.654 cv
-179.506 132.276 -179.06 131.765 -178.852 131.517 cv
-178.648 131.276 -178.473 131.085 -178.456 131.085 cv
-178.456 131.085 -178.455 131.085 -178.455 131.085 cv
-178.431 131.109 -178.823 131.946 -179.2 132.675 cv
-180.276 134.751 -181.422 136.514 -182.658 137.994 cv
-182.773 138.132 -182.912 138.289 -183.065 138.455 cv
-183.334 138.499 -183.6 138.522 -183.865 138.522 cv
-201.873 131.087 mo
-201.879 131.083 -201.886 131.08 -201.892 131.076 cv
-201.205 130.781 -200.535 130.602 -199.872 130.529 cv
-199.703 130.511 -199.532 130.502 -199.36 130.502 cv
-198.699 130.502 -198.027 130.635 -197.426 130.885 cv
-197.417 130.894 -197.409 130.904 -197.4 130.913 cv
-197.966 130.67 -198.608 130.519 -199.329 130.517 cv
-200.09 130.517 -200.937 130.686 -201.873 131.087 cv
.208658 .163383 .165352 .0570857 cmyk
f
-187.357 141.614 mo
-188.973 140.902 -190.673 139.499 -192.434 137.171 cv
-192.27 137.31 -192.106 137.439 -191.941 137.558 cv
-190.273 139.651 -188.67 140.904 -187.156 141.536 cv
-187.223 141.563 -187.29 141.589 -187.357 141.614 cv
-219.334 139.028 mo
-220.775 138.606 -221.593 137.993 -221.598 137.99 cv
-221.601 137.987 li
-221.604 137.984 li
-221.609 137.978 -221.759 137.842 -221.775 137.619 cv
-221.775 137.55 li
-221.758 137.328 -221.587 137.07 -221.099 136.836 cv
-220.581 136.586 -219.696 136.346 -218.195 136.171 cv
-218.188 136.17 li
-218.18 136.171 li
-218.18 136.171 -218.124 136.175 -218.012 136.175 cv
-217.147 136.175 -213.071 135.913 -208.178 131.256 cv
-206.347 129.514 -204.392 128.217 -202.394 127.571 cv
-202.307 127.596 -202.221 127.622 -202.134 127.649 cv
-204.177 128.26 -206.188 129.571 -208.073 131.366 cv
-212.989 136.045 -217.107 136.327 -218.008 136.327 cv
-218.009 136.327 -218.01 136.327 -218.012 136.327 cv
-218.106 136.327 -218.165 136.324 -218.184 136.322 cv
-219.672 136.496 -220.543 136.735 -221.033 136.972 cv
-221.526 137.213 -221.624 137.435 -221.625 137.587 cv
-221.562 137.794 li
-221.518 137.855 li
-221.502 137.872 li
-221.479 137.889 -221.368 137.969 -221.171 138.085 cv
-220.773 138.319 -220.036 138.693 -219.018 138.958 cv
-219.123 138.983 -219.229 139.006 -219.334 139.028 cv
-218.177 136.322 mo
-218.177 136.322 li
-218.177 136.322 li
-218.186 136.246 mo
-218.186 136.246 li
-218.177 136.322 li
-218.186 136.246 li
-183.837 138.665 mo
-184.015 138.665 -184.195 138.66 -184.361 138.649 cv
-184.986 138.585 -185.604 138.397 -186.218 138.077 cv
-186.161 138.051 -186.103 138.023 -186.046 137.995 cv
-185.325 138.353 -184.603 138.522 -183.875 138.522 cv
-183.872 138.522 -183.868 138.522 -183.865 138.522 cv
-183.6 138.522 -183.334 138.499 -183.065 138.455 cv
-183.118 138.513 -183.173 138.571 -183.229 138.63 cv
-183.318 138.642 -183.407 138.651 -183.496 138.658 cv
-183.606 138.663 -183.721 138.665 -183.837 138.665 cv
-197.137 131.204 mo
-197.761 130.879 -198.488 130.669 -199.324 130.669 cv
-199.326 130.669 -199.327 130.669 -199.329 130.669 cv
-199.329 130.669 -199.33 130.669 -199.33 130.669 cv
-200.039 130.669 -200.83 130.819 -201.707 131.181 cv
-201.737 131.163 -201.767 131.146 -201.798 131.129 cv
-201.823 131.115 -201.848 131.1 -201.873 131.087 cv
-200.937 130.686 -200.09 130.517 -199.329 130.517 cv
-198.608 130.519 -197.966 130.67 -197.4 130.913 cv
-197.303 131.017 -197.214 131.116 -197.137 131.204 cv
.342084 .275709 .270604 .171042 cmyk
f
-187.123 141.522 mo
-188.497 140.949 -189.882 139.892 -191.209 138.394 cv
-191.424 138.152 -191.645 137.888 -191.866 137.612 cv
-191.189 138.091 -190.501 138.411 -189.795 138.576 cv
-189.651 138.61 -189.452 138.634 -189.231 138.649 cv
-189.064 138.66 -188.884 138.665 -188.706 138.665 cv
-188.59 138.665 -188.476 138.663 -188.365 138.658 cv
-188.122 138.648 -187.901 138.626 -187.742 138.592 cv
-187.246 138.487 -186.746 138.319 -186.232 138.083 cv
-185.802 138.309 -185.367 138.473 -184.926 138.576 cv
-184.782 138.61 -184.583 138.634 -184.361 138.649 cv
-184.195 138.66 -184.015 138.665 -183.837 138.665 cv
-183.721 138.665 -183.606 138.663 -183.496 138.658 cv
-183.407 138.654 -183.321 138.649 -183.24 138.642 cv
-183.756 139.187 -184.371 139.779 -184.739 140.073 cv
-185.542 140.716 -186.334 141.198 -187.123 141.522 cv
-218.964 138.945 mo
-219.422 138.828 -219.874 138.675 -220.318 138.487 cv
-220.838 138.268 -221.418 137.932 -221.524 137.79 cv
-221.68 137.581 -221.577 137.326 -221.252 137.119 cv
-220.675 136.752 -219.261 136.419 -217.963 136.346 cv
-216.311 136.254 -214.889 135.858 -213.151 135.008 cv
-211.398 134.151 -209.892 133.076 -208.024 131.35 cv
-207.338 130.718 -207.074 130.488 -206.591 130.106 cv
-205.094 128.924 -203.59 128.107 -202.094 127.662 cv
-201.04 128.001 -200.02 128.563 -199.027 129.35 cv
-198.654 129.646 -197.935 130.341 -197.426 130.885 cv
-198.027 130.635 -198.699 130.502 -199.36 130.502 cv
-199.532 130.502 -199.703 130.511 -199.872 130.529 cv
-200.535 130.602 -201.205 130.781 -201.892 131.076 cv
-202.586 130.704 -203.416 130.502 -204.229 130.502 cv
-204.401 130.502 -204.572 130.511 -204.741 130.529 cv
-206.687 130.741 -208.68 131.879 -211.039 134.125 cv
-211.365 134.436 -211.822 134.86 -212.053 135.066 cv
-214.318 137.09 -216.665 138.394 -218.964 138.945 cv
.270604 .211888 .214441 .0740331 cmyk
f
grestore
gsave
-231.513 142.2 mo
-182.828 142.2 li
-182.828 127.115 li
-231.513 127.115 li
-231.513 142.2 li
clp
.151481 lw
4 ml
-227.924 136.246 mo
-227.924 136.246 -223.41 136.59 -217.863 131.311 cv
-212.316 126.032 -205.66 124.885 -200.189 133.53 cv
-194.719 142.175 -189.898 138.848 -182.898 130.393 cv
-182.898 130.393 -192.117 153.613 -203.747 134.716 cv
-203.747 134.716 -207.19 125.726 -215.95 134.295 cv
-224.71 142.864 -231.29 137.929 -231.29 137.929 cv
-231.29 137.929 -232.514 136.782 -227.924 136.246 cv
cp
.910124 .789548 .619928 .980377 cmyk
@
-194.925 142.007 mo
-196.912 141.849 -198.992 140.601 -200.947 138.394 cv
-202.029 137.172 -203.293 135.384 -203.821 134.324 cv
-204.549 132.866 -205.507 131.789 -206.666 131.129 cv
-207.522 130.64 -208.604 130.421 -209.609 130.529 cv
-211.555 130.741 -213.549 131.879 -215.907 134.125 cv
-216.234 134.436 -216.69 134.86 -216.921 135.066 cv
-221.305 138.983 -225.993 140.204 -230.056 138.487 cv
-230.575 138.268 -231.155 137.932 -231.262 137.79 cv
-231.418 137.581 -231.314 137.326 -230.99 137.119 cv
-230.413 136.752 -228.999 136.419 -227.701 136.346 cv
-226.049 136.254 -224.626 135.858 -222.889 135.008 cv
-221.136 134.151 -219.629 133.076 -217.762 131.35 cv
-217.076 130.717 -216.812 130.488 -216.328 130.106 cv
-214.404 128.587 -212.469 127.671 -210.552 127.372 cv
-209.953 127.279 -208.784 127.277 -208.194 127.369 cv
-206.699 127.602 -205.27 128.26 -203.895 129.35 cv
-203.411 129.734 -202.346 130.789 -201.91 131.317 cv
-201.425 131.905 -200.988 132.499 -200.524 133.201 cv
-199.217 135.182 -198.667 135.888 -197.747 136.769 cv
-196.743 137.732 -195.723 138.328 -194.663 138.576 cv
-194.186 138.688 -193.099 138.696 -192.611 138.592 cv
-190.348 138.111 -187.994 136.341 -184.711 132.654 cv
-184.375 132.276 -183.928 131.765 -183.72 131.517 cv
-183.511 131.27 -183.333 131.075 -183.324 131.085 cv
-183.299 131.109 -183.691 131.946 -184.068 132.675 cv
-185.145 134.751 -186.29 136.514 -187.526 137.994 cv
-188.05 138.622 -189.082 139.652 -189.607 140.073 cv
-191.408 141.513 -193.152 142.147 -194.925 142.007 cv
cp
.417121 .325109 .327855 .115206 cmyk
f
grestore
-188.284 149.264 mo
-214.18 149.264 li
.499611 0 .728023 0 cmyk
@
-207.939 153.114 mo
-214.608 149.264 li
-207.939 145.413 li
cp
f
-207.939 153.114 mo
-214.608 149.264 li
-207.939 145.413 li
cp
@
.89221 .218601 1 .119265 cmyk
%ADOBeginSubsetFont: DEAAAA+CMSS10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRN+CMSS10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B678BD655A0EBDF954FA6285E833C3E93EC6D475732F74D513
D35373907A6EE14E6A4A3456FA2EC3188EA16F03B14334D43FD5802D2AE88D49
F9BF8FAF93FA929808E665C840167227705E4151522885F23CAD33ED4EB6> |-
/o <1C60D8A8C9B7A73DCEDF64ACF1D92FCD603C38194EF3F5934A984E60F2AF
9261930EDC731DFAE6DC0D65525DECAD56D01145F3205995C224947145FF19D1
982913BDB63436AA6C4E83643807117E1530260A08A6B9A3F353> |-
/s <1C60D8A8C9B73CE4EDA402BCF9D339BDBCE98B96DA76C29318F6633EF72E
BA302E6A0588BC011E13DEE5BE1C1EDFB2B6930FF58DCB22074D0F2327B5C314
95B5F6E965253DE5A09ECBF6A4E73E792570AE2EF66E1C108C27A9930A01B508
1226079ADE164A7914BB3F67EAD98219DDB1DD925E31EB5E0F77FA0B44435ECD
12283D9A977C35> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRN+CMSS10 /Encoding get
dup 82 /R put
dup 111 /o put
dup 115 /s put
pop
%ADOEndSubsetFont
/HQERRN+CMSS10*1 
[40{/.notdef}rp /parenleft /parenright 16{/.notdef}rp /colon 17{/.notdef}rp /L 5{/.notdef}rp 
/R /.notdef /T 12{/.notdef}rp /a 2{/.notdef}rp /d /e 
/.notdef /g 6{/.notdef}rp /n /o /p 2{/.notdef}rp /s 
140{/.notdef}rp]
HQERRN+CMSS10 nf
HQERRN+CMSS10*1 [8.55596 0 0 -8.55596 0 0 ]msf
-211.521 168.442 mo
(Resp)
[5.52542 3.80225 3.27951 0 ]xsh
-194.256 168.442 mo
(onse)
[4.27798 4.42081 3.2795 0 ]xsh
-153.614 127.355 mo
-168.22 127.355 li
-169.565 127.355 -170.655 128.445 -170.655 129.79 cv
-170.655 131.134 -169.565 132.224 -168.22 132.224 cv
-156.049 132.224 li
-158.484 132.224 li
-159.828 132.224 -160.918 133.314 -160.918 134.659 cv
-160.918 136.003 -159.828 137.093 -158.484 137.093 cv
-156.049 137.093 li
-157.124 137.093 -157.997 137.965 -157.997 139.04 cv
-157.997 140.116 -157.124 140.988 -156.049 140.988 cv
-151.181 140.988 li
-151.987 140.988 -152.641 141.641 -152.641 142.449 cv
-152.641 143.255 -151.987 143.909 -151.181 143.909 cv
-146.311 143.909 li
-140.261 143.909 -135.357 139.005 -135.357 132.954 cv
-135.357 128.35 -138.238 124.235 -142.565 122.661 cv
-148.284 120.58 li
-149.449 119.908 -150.938 120.306 -151.61 121.471 cv
-152.2 122.493 -151.971 123.794 -151.066 124.553 cv
-146.85 126.987 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
gsave
-231.513 203.057 mo
-182.828 203.057 li
-182.828 187.973 li
-231.513 187.973 li
-231.513 203.057 li
clp
.151481 lw
4 ml
-227.924 197.104 mo
-227.924 197.104 -223.41 197.448 -217.863 192.169 cv
-212.316 186.889 -205.66 185.742 -200.189 194.388 cv
-194.719 203.033 -189.898 199.706 -182.898 191.251 cv
-182.898 191.251 -192.117 214.471 -203.747 195.574 cv
-203.747 195.574 -207.19 186.584 -215.95 195.153 cv
-224.71 203.722 -231.29 198.787 -231.29 198.787 cv
-231.29 198.787 -232.514 197.64 -227.924 197.104 cv
cp
.910124 .789548 .619928 .980377 cmyk
@
-194.925 202.865 mo
-196.912 202.707 -198.992 201.459 -200.947 199.251 cv
-202.029 198.03 -203.293 196.242 -203.821 195.182 cv
-204.549 193.724 -205.507 192.647 -206.666 191.987 cv
-207.522 191.498 -208.604 191.279 -209.609 191.387 cv
-211.555 191.599 -213.549 192.736 -215.907 194.983 cv
-216.234 195.293 -216.69 195.717 -216.921 195.924 cv
-221.305 199.841 -225.993 201.062 -230.056 199.345 cv
-230.575 199.126 -231.155 198.79 -231.262 198.648 cv
-231.418 198.439 -231.314 198.184 -230.99 197.977 cv
-230.413 197.609 -228.999 197.276 -227.701 197.204 cv
-226.049 197.112 -224.626 196.716 -222.889 195.866 cv
-221.136 195.009 -219.629 193.934 -217.762 192.208 cv
-217.076 191.575 -216.812 191.346 -216.328 190.964 cv
-214.404 189.444 -212.469 188.529 -210.552 188.23 cv
-209.953 188.136 -208.784 188.135 -208.194 188.227 cv
-206.699 188.46 -205.27 189.118 -203.895 190.208 cv
-203.411 190.592 -202.346 191.647 -201.91 192.174 cv
-201.425 192.762 -200.988 193.356 -200.524 194.059 cv
-199.217 196.04 -198.667 196.746 -197.747 197.627 cv
-196.743 198.589 -195.723 199.186 -194.663 199.434 cv
-194.186 199.546 -193.099 199.554 -192.611 199.45 cv
-190.348 198.969 -187.994 197.199 -184.711 193.512 cv
-184.375 193.134 -183.928 192.623 -183.72 192.375 cv
-183.511 192.128 -183.333 191.933 -183.324 191.943 cv
-183.299 191.967 -183.691 192.804 -184.068 193.532 cv
-185.145 195.608 -186.29 197.372 -187.526 198.852 cv
-188.05 199.48 -189.082 200.51 -189.607 200.931 cv
-191.408 202.371 -193.152 203.005 -194.925 202.865 cv
cp
.417121 .325109 .327855 .115206 cmyk
f
grestore
-153.614 188.214 mo
-168.22 188.214 li
-169.565 188.214 -170.655 189.303 -170.655 190.648 cv
-170.655 191.992 -169.565 193.083 -168.22 193.083 cv
-156.049 193.083 li
-158.484 193.083 li
-159.828 193.083 -160.918 194.173 -160.918 195.517 cv
-160.918 196.861 -159.828 197.951 -158.484 197.951 cv
-156.049 197.951 li
-157.124 197.951 -157.997 198.824 -157.997 199.899 cv
-157.997 200.975 -157.124 201.847 -156.049 201.847 cv
-151.181 201.847 li
-151.987 201.847 -152.641 202.5 -152.641 203.307 cv
-152.641 204.114 -151.987 204.767 -151.181 204.767 cv
-146.311 204.767 li
-140.261 204.767 -135.357 199.863 -135.357 193.813 cv
-135.357 189.209 -138.238 185.094 -142.565 183.52 cv
-148.284 181.438 li
-149.449 180.766 -150.938 181.165 -151.61 182.329 cv
-152.2 183.352 -151.971 184.652 -151.066 185.411 cv
-146.85 187.845 li
cp
@
HQERRN+CMSS10*1 [8.2642 -2.21428 -2.21428 -8.2642 0 0 ]msf
-76.327 63.0508 mo
(\(\()
[3.21394 -.86113 0 0 ]xysh
1 /0 /CSD get_res sepcs
1 sep
HQERRN+CMSS10*1 [8.2642 -2.21428 -2.21428 -8.2642 0 0 ]msf
-67.1478 60.599 mo
(Tap\)\))
[4.93872 -1.32327 3.97182 -1.06418 7.022 -1.88145 3.21394 -.861145 0 0 ]xysh
-92.7557 98.1428 mo
-92.7557 95.7082 li
-31.897 95.7082 li
-31.897 98.1428 li
cp
1 /0 /CSD get_res sepcs
.4 sep
f
.341792 lw
-92.7557 98.1428 mo
-92.7557 95.7082 li
-31.897 95.7082 li
-31.897 98.1428 li
cp
@
gsave
-31.8967 98.1429 mo
-31.8967 95.7083 li
-44.0689 95.7083 li
-44.0689 98.1429 li
-31.8967 98.1429 li
clp
-25.8098 99.3602 mo
-25.8098 94.491 li
-50.156 94.491 li
-50.156 99.3602 li
cp
np
grestore
gsave
-92.7553 95.7083 mo
-92.7553 98.1429 li
-104.928 98.1429 li
-104.928 95.7083 li
-92.7553 95.7083 li
clp
-86.6685 99.3602 mo
-86.6685 94.491 li
-111.015 94.491 li
-111.015 99.3602 li
cp
np
grestore
-52.5891 89.9841 mo
-64.7605 89.9841 li
-65.4329 89.9841 -65.9782 90.5294 -65.9782 91.201 cv
-65.9782 96.0702 li
-65.9782 96.7427 -65.4329 97.2871 -64.7605 97.2871 cv
-52.5891 97.2871 li
-51.9167 97.2871 -51.3722 96.7427 -51.3722 96.0702 cv
-51.3722 91.201 li
-51.3722 90.5294 -51.9167 89.9841 -52.5891 89.9841 cv
cp
.845975 .709255 0 0 cmyk
f
1.71154 lw
-52.5891 89.9841 mo
-64.7605 89.9841 li
-65.4329 89.9841 -65.9782 90.5294 -65.9782 91.201 cv
-65.9782 96.0702 li
-65.9782 96.7427 -65.4329 97.2871 -64.7605 97.2871 cv
-52.5891 97.2871 li
-51.9167 97.2871 -51.3722 96.7427 -51.3722 96.0702 cv
-51.3722 91.201 li
-51.3722 90.5294 -51.9167 89.9841 -52.5891 89.9841 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
4.27755 lw
-58.0936 95.7487 mo
-64.1247 67.0846 li
.212406 .523919 .837339 .105776 cmyk
@
-57.298 92.943 mo
-57.298 92.1821 -57.9146 91.5664 -58.6746 91.5664 cv
-59.4355 91.5664 -60.0521 92.1821 -60.0521 92.943 cv
-60.0521 93.7039 -59.4355 94.3196 -58.6746 94.3196 cv
-57.9146 94.3196 -57.298 93.7039 -57.298 92.943 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.341792 lw
-57.298 92.943 mo
-57.298 92.1821 -57.9146 91.5664 -58.6746 91.5664 cv
-59.4355 91.5664 -60.0521 92.1821 -60.0521 92.943 cv
-60.0521 93.7039 -59.4355 94.3196 -58.6746 94.3196 cv
-57.9146 94.3196 -57.298 93.7039 -57.298 92.943 cv
cp
@
1.71154 lw
-44.0688 66.4962 mo
-58.6748 66.4962 li
-60.0196 66.4962 -61.1094 67.586 -61.1094 68.9308 cv
-61.1094 70.2748 -60.0196 71.3655 -58.6748 71.3655 cv
-46.5034 71.3655 li
-48.938 71.3655 li
-50.282 71.3655 -51.3726 72.4553 -51.3726 73.8001 cv
-51.3726 75.1441 -50.282 76.2339 -48.938 76.2339 cv
-46.5034 76.2339 li
-47.5786 76.2339 -48.4511 77.1064 -48.4511 78.1816 cv
-48.4511 79.2576 -47.5786 80.1292 -46.5034 80.1292 cv
-41.635 80.1292 li
-42.4414 80.1292 -43.0949 80.7828 -43.0949 81.59 cv
-43.0949 82.3964 -42.4414 83.05 -41.635 83.05 cv
-36.7657 83.05 li
-30.7157 83.05 -25.8112 78.1455 -25.8112 72.0954 cv
-25.8112 67.4915 -28.6924 63.3763 -33.0189 61.8022 cv
-38.7383 59.7205 li
-39.9029 59.0489 -41.392 59.4474 -42.0644 60.6119 cv
-42.6544 61.6347 -42.425 62.9349 -41.5208 63.6941 cv
-37.3042 66.1278 li
cp
@
gsave
-61.1087 159.002 mo
-61.1087 150.481 li
-44.0689 150.481 li
-44.0689 159.002 li
-61.1087 159.002 li
clp
-44.0689 156.396 mo
-50.5164 156.396 li
-50.5164 152.06 li
-50.5167 151.427 -50.7998 150.861 -51.2465 150.481 cv
-44.0689 150.481 li
-44.0689 156.396 li
np
grestore
-92.7557 159.002 mo
-92.7557 156.567 li
-31.897 156.567 li
-31.897 159.002 li
-92.7557 159.002 li
.415686 .32549 .329412 .113725 cmyk
f
-92.7557 159.002 mo
-92.9266 159.002 li
-92.9266 156.396 li
-31.7261 156.396 li
-31.7261 159.172 li
-92.9266 159.172 li
-92.9266 159.002 li
-92.7557 159.002 li
-92.7557 158.831 li
-32.068 158.831 li
-32.068 156.738 li
-92.5849 156.738 li
-92.5849 159.002 li
-92.7557 159.002 li
-92.7557 158.831 li
-92.7557 159.002 li
f
gsave
-31.8967 159.002 mo
-31.8967 156.567 li
-44.0689 156.567 li
-44.0689 159.002 li
-31.8967 159.002 li
clp
-25.8098 160.219 mo
-25.8098 155.35 li
-50.156 155.35 li
-50.156 160.219 li
cp
np
grestore
gsave
-92.7553 156.567 mo
-92.7553 159.002 li
-104.928 159.002 li
-104.928 156.567 li
-92.7553 156.567 li
clp
-86.6685 160.219 mo
-86.6685 155.35 li
-111.015 155.35 li
-111.015 160.219 li
cp
np
grestore
-66.834 156.396 mo
-69.9911 156.396 li
-69.9911 152.06 li
-69.9907 151.862 -69.8286 151.699 -69.6291 151.699 cv
-66.8024 151.699 li
-66.8231 151.816 -66.8339 151.937 -66.834 152.06 cv
-66.834 156.396 li
.337255 .283922 0 0 cmyk
f
-66.8025 157.29 mo
-69.6291 157.29 li
-69.8293 157.29 -69.9907 157.128 -69.9911 156.929 cv
-69.9911 156.738 li
-66.834 156.738 li
-66.834 156.929 li
-66.8339 157.052 -66.8232 157.173 -66.8025 157.29 cv
.611765 .541176 0 0 cmyk
f
-66.834 156.738 mo
-69.9911 156.738 li
-69.9911 156.396 li
-66.834 156.396 li
-66.834 156.738 li
f
-69.9911 156.396 mo
-71.7026 156.396 li
-71.7026 152.06 li
-71.7018 150.915 -70.7744 149.988 -69.6291 149.987 cv
-57.4577 149.987 li
-57.4577 149.987 li
-64.7605 149.987 li
-65.7826 149.988 -66.6309 150.726 -66.8024 151.699 cv
-69.6291 151.699 li
-69.8286 151.699 -69.9907 151.862 -69.9911 152.06 cv
-69.9911 156.396 li
.363922 .315294 .247843 .392157 cmyk
f
-65.5866 158.831 mo
-70.4552 158.831 li
-71.189 158.512 -71.7022 157.781 -71.7026 156.929 cv
-71.7026 156.738 li
-69.9911 156.738 li
-69.9911 156.929 li
-69.9907 157.128 -69.8293 157.29 -69.6291 157.29 cv
-66.8025 157.29 li
-66.6805 157.984 -66.2143 158.558 -65.5866 158.831 cv
.596078 .494118 .478431 .411765 cmyk
f
-64.7605 159.002 mo
-69.6291 159.002 li
-69.9227 159.002 -70.2021 158.941 -70.4552 158.831 cv
-65.5866 158.831 li
-65.3335 158.941 -65.0541 159.002 -64.7605 159.002 cv
-69.9911 156.738 mo
-71.7026 156.738 li
-71.7026 156.396 li
-69.9911 156.396 li
-69.9911 156.738 li
f
-52.228 156.396 mo
-55.3851 156.396 li
-55.3851 152.06 li
-55.3851 151.937 -55.3959 151.816 -55.4166 151.699 cv
-52.5891 151.699 li
-52.39 151.699 -52.2283 151.861 -52.228 152.06 cv
-52.228 156.396 li
level3{
gsave
clp
[0 -.170415 -.340847 0 -35.5466 163.262 ]ct
<<
/PatternType 2
/Shading
/1 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Background [.168627 .141961 0 0 ]
/Coords [0 0 0 100.001 ]
/Domain [0 100.001 ]
/Extend[ false false]
/Function
<<
/Domain[0 100.001 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r
.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r
.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r
.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r.OP2r
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.OP2r_P@/3o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)
o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)
o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)
o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~LN*:omC`K"o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)
o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)
o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)
o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)o"P/)
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~f<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSY
f<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSY
f<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSY
f<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSY
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [25.0003 50.0006 75.001 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>> /Gradient add_res /1 /Gradient get_res >> matrix makepattern grestore setpattern
fill
}if
level3 not{
gsave
[0 -.170415 -.340847 0 -35.5466 163.262 ]ct
clp
/1 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt
.P!&&0/54=2)dKU4$>bm5sn%07nH<H9i"S`;cQk#=^,-;?X[DSAS5[kCMds.EH?5FGBnL^I=Hd!K8#&9
LPUeEMi<XUO-#KePE_>uQ^F20S"-%@T:hmPUSO``Vl6SpX/rG+YHY:;Za@-K\%&u[]=bhk^VI\&_o0O6
f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+
~>
<~-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-R^Dn.kNA,0JYF@2)[ES3]fJg5<qP&6q'R98P2WM:/=\a;cHat=BSg3?!^lG@Uiq[AnYmnCMds-E,p#A
EH-#?F*)PJG'A1VH$XgbI!pHnIt3*%JqJ`1KnbA=Ll%"IMi<XUNfT9aOckomPa.Q$Q^F20R[]h<SXuIH
[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM
~>
0 0 ]
>>
0 0 0 100.001 []false false [.168627 .141961 0 0 ]
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
-52.5891 157.29 mo
-55.4165 157.29 li
-55.3958 157.173 -55.3851 157.052 -55.3851 156.929 cv
-55.3851 156.738 li
-52.228 156.738 li
-52.228 156.929 li
-52.2283 157.129 -52.3891 157.29 -52.5891 157.29 cv
.533333 .454902 .168627 .0196078 cmyk
f
-52.228 156.738 mo
-55.3851 156.738 li
-55.3851 156.396 li
-52.228 156.396 li
-52.228 156.738 li
f
-61.1087 156.396 mo
-65.1225 156.396 li
-65.1225 152.06 li
-65.1221 151.862 -64.9598 151.699 -64.7605 151.699 cv
-61.1087 151.699 li
-61.1087 156.396 li
.439754 .370211 0 0 cmyk
f
-57.0966 156.396 mo
-61.1087 156.396 li
-61.1087 151.699 li
-57.4577 151.699 li
-57.2587 151.699 -57.0969 151.861 -57.0966 152.06 cv
-57.0966 156.396 li
level3{
gsave
clp
[0 -.170415 -.340847 0 -35.5466 163.262 ]ct
<<
/PatternType 2
/Shading
/2 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Background [.439754 .370211 0 0 ]
/Coords [0 0 0 100.001 ]
/Domain [0 100.001 ]
/Extend[ false false]
/Function
<<
/Domain[0 100.001 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~E+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_H
E+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_H
E+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_H
E+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_HE+&_H
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~E+&_Hc)gsGlb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8u
lb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8u
lb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8u
lb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8u
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Ya#1gk.:Tnlb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8u
lb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8u
lb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8u
lb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8ulb*8u
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~f<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSY
f<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSY
f<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSY
f<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSYf<kSY
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [25.0003 50.0006 75.001 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>> /Gradient add_res /2 /Gradient get_res >> matrix makepattern grestore setpattern
fill
}if
level3 not{
gsave
[0 -.170415 -.340847 0 -35.5466 163.262 ]ct
clp
/2 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8
E,]f;F*)PJGBeCZH@($fIXcm!JqJ`1KnbA=M2I4MNK0']OHG]iPa.Q$R$jD4S"-%@T:hmPUSO``VPgAl
YctC;ZEggC['[6K[^NZS\@K/]]">Se]Y2"m^;%Fu_84"*_o'F2`Poj:a2c9Bai_cLbKS2Tc-FV\cd:%d
f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+
~>
<~@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ
@:<VT@q9._AnPdkBkhF"Ci+'.DfB]:EcZ>FF`qtRG^4U^H[L6jIXcm!JV&N-KS>/9LPUeEMMmFQNK0']
Q'IW#QBml(Q^F/.R@0M4R[]e:S=H.@SXuFFT:_dLTV8'RU8"EXUSO]^V5:&dVPg>jW2Q\pWN)u!X/i>'
[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM
~>
0 0 ]
>>
0 0 0 100.001 []false false [.439754 .370211 0 0 ]
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
-57.4577 157.29 mo
-64.7605 157.29 li
-64.9607 157.29 -65.1221 157.128 -65.1225 156.929 cv
-65.1225 156.738 li
-57.0966 156.738 li
-57.0966 156.929 li
-57.0969 157.129 -57.2579 157.29 -57.4577 157.29 cv
.670588 .592157 0 0 cmyk
f
-57.0966 156.738 mo
-65.1225 156.738 li
-65.1225 156.396 li
-61.1087 156.396 li
-57.0966 156.396 li
-57.0966 156.738 li
f
-55.3851 156.396 mo
-57.0966 156.396 li
-57.0966 152.06 li
-57.0969 151.861 -57.2587 151.699 -57.4577 151.699 cv
-55.4166 151.699 li
-55.3959 151.816 -55.3851 151.937 -55.3851 152.06 cv
-55.3851 156.396 li
level3{
gsave
clp
[0 -.170415 -.340847 0 -35.5466 163.262 ]ct
<<
/PatternType 2
/Shading
/3 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Background [.521569 .490888 .175902 .182038 ]
/Coords [0 0 0 100.001 ]
/Domain [0 100.001 ]
/Extend[ false false]
/Function
<<
/Domain[0 100.001 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Lib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-N
Lib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-N
Lib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-N
Lib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-NLib-N
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Lib-Ni5ks!s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+
s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+
s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+
s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^T@J9s5FUls5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+
s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+
s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+
s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+s5Y:+
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~o@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsB
o@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsB
o@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsB
o@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsBo@EsB
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [25.0003 50.0006 75.001 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>> /Gradient add_res /3 /Gradient get_res >> matrix makepattern grestore setpattern
fill
}if
level3 not{
gsave
[0 -.170415 -.340847 0 -35.5466 163.262 ]ct
clp
/3 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~LkpkCLkpkCLkpkCLkpkCLkpkCLkpkCLkpkCLkpkCLkpkCLkpkCLkpkCLkpkCLkpkCLkpkCLkpkCLkpkC
LkpnFMi<XUNfT9aP*;,pQ'Rc(R@9V7S=Q7DTV8'RUSO``Vl6PnWiN5'Y-+t4Z*L^C[C*HP\@K2_]=bhk
^V@S"_8=(,`5KX6`lH-@aiV]JbKS2TcHab_d*^7he'lgse^i='f\"m2g=tB;h;-rFhr*JPio9"ZjQ5Od
oCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
~>
<~FEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVH
FEDYKGBeCYH@($fIXZcsJV&N,KS>/9LkpnFMi<XTNfT9aP*2#nQ'Rc'R$jD4S=H.AT:hmPU8+N\VPg>j
Xf\b/YHP17Z*CU?Za7$G[C*HO\$rlW\[oAa]=bei]tV4q^VIY$_8=(,_o0L4`l?'>aN2KFb0%oNbfn>V
f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+
~>
<~.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#
.k3"t.4?Sm-RU5f,pai_,U4NX+sJ0R+<VaJ+!)ID*??+>)]K\6)AsD0(`*u)()@W"'GM5p'+toj&J5Qc
z!!!$#!<E3%!WiE)!WiH+!s8W-"9\i1"9\l3"U,&5"pP89"pP;;#6tJ=#RC\A#RC_C#mgnE$47+Izzzz
zzzzzzzzzzz!!!!!~>
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U"r2"9\i1"9\i1"9\i1"9\i1"9S`.!s8W-!s8W-!s8W-!s8W-!s/N*!WiE)!WiE)!WiE)!WiE)!W`<&
zzzzzzzzzzzz!!!!"!<E3%!<E3%!<E3%zzzzzzzzzzzzzzz!!!!!~>
]
>>
0 0 0 100.001 []false false [.521569 .490888 .175902 .182038 ]
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
-55.4165 157.29 mo
-64.7605 157.29 li
-64.7605 157.29 li
-57.4577 157.29 li
-57.2579 157.29 -57.0969 157.129 -57.0966 156.929 cv
-57.0966 156.738 li
-55.3851 156.738 li
-55.3851 156.929 li
-55.3851 157.052 -55.3958 157.173 -55.4165 157.29 cv
.745098 .666667 .294118 .137255 cmyk
f
-55.3851 156.738 mo
-57.0966 156.738 li
-57.0966 156.396 li
-55.3851 156.396 li
-55.3851 156.738 li
f
-51.2465 150.481 mo
-56.1152 150.481 li
-56.4767 150.173 -56.9453 149.987 -57.4577 149.987 cv
-52.5891 149.987 li
-52.0766 149.987 -51.608 150.173 -51.2465 150.481 cv
.181961 .157647 .123922 .196078 cmyk
f
-50.5164 156.396 mo
-52.228 156.396 li
-52.228 152.06 li
-52.2283 151.861 -52.39 151.699 -52.5891 151.699 cv
-52.5891 151.699 li
-55.4166 151.699 li
-55.5019 151.214 -55.7555 150.787 -56.1152 150.481 cv
-51.2465 150.481 li
-50.7998 150.861 -50.5167 151.427 -50.5164 152.06 cv
-50.5164 156.396 li
level3{
gsave
clp
[0 -.170415 -.340847 0 -35.5466 163.262 ]ct
<<
/PatternType 2
/Shading
/4 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Background [.181961 .157647 .123922 .196078 ]
/Coords [0 0 0 100.001 ]
/Domain [0 100.001 ]
/Extend[ false false]
/Function
<<
/Domain[0 100.001 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e
4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e
4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e
4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e4=i,e
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~4=i,ebd.9Ls3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#K
s3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#K
s3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#K
s3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#K
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~OFI61r6bQFs3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#K
s3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#K
s3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#K
s3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#Ks3q#K
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!
jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!
jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!
jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!jM_*!
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [25.0003 50.0006 75.001 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>> /Gradient add_res /4 /Gradient get_res >> matrix makepattern grestore setpattern
fill
}if
level3 not{
gsave
[0 -.170415 -.340847 0 -35.5466 163.262 ]ct
clp
/4 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g
4?Ykn5sn%/7n?6F9hnJ];H-Xs=BSj5?=.)L@qB7bBkhI$DfB];FEVkQH@('hJ:W<*KnkJ@Mi<[WOckon
OHG]iPa.Q$R$jD4S=Q7DTq\<XV5C/hWN*##Xfek3ZEppG[^WcW]">Vg^;%J"_o0O6a2lBFbKS5Vcd:(f
jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_
~>
<~/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'
/1iJ-0etOB2E*WW4$>bl5sdq-7Rp$B92//W;,U=m<``F->?tQB@:E_XAnPgmCMds-EH6,CG'A4XH[U?m
It*!"JqJ]/KnbA<Ll%"IN/WaVO-#HcP*;,qQ'Rc(R@0M5S=Q7CT:hmPU8+N\VPg>jWN*#"XKAY/YctC<
`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8
~>
<~0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t3
0.nk//M&G'.k3"t.4?Sm-RU5f,paf^,9nBV+sA*P+<M[H*ZZ7@*#on:)B'J2(`4&*()@Z#'bh>q'+toi
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!W`<&!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3$zzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzz!!!!!~>
]
>>
0 0 0 100.001 []false false [.181961 .157647 .123922 .196078 ]
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
-51.7633 158.831 mo
-56.632 158.831 li
-56.0044 158.558 -55.5383 157.983 -55.4165 157.29 cv
-52.5891 157.29 li
-52.3891 157.29 -52.2283 157.129 -52.228 156.929 cv
-52.228 156.738 li
-50.5164 156.738 li
-50.5164 156.929 li
-50.5166 157.78 -51.0295 158.511 -51.7633 158.831 cv
.517647 .411765 .407843 .243137 cmyk
f
-52.5891 159.002 mo
-64.7605 159.002 li
-64.7605 159.002 li
-57.4577 159.002 li
-57.1642 159.002 -56.885 158.941 -56.632 158.831 cv
-51.7633 158.831 li
-52.0163 158.941 -52.2955 159.002 -52.5891 159.002 cv
-50.5164 156.738 mo
-52.228 156.738 li
-52.228 156.396 li
-50.5164 156.396 li
-50.5164 156.738 li
f
-65.1225 156.396 mo
-66.834 156.396 li
-66.834 152.06 li
-66.8339 151.937 -66.8231 151.816 -66.8024 151.699 cv
-61.1087 151.699 li
-64.7605 151.699 li
-64.9598 151.699 -65.1221 151.862 -65.1225 152.06 cv
-65.1225 156.396 li
.521569 .470434 .0163629 .00204537 cmyk
f
-64.7605 157.29 mo
-66.8025 157.29 li
-66.8232 157.173 -66.8339 157.052 -66.834 156.929 cv
-66.834 156.738 li
-65.1225 156.738 li
-65.1225 156.929 li
-65.1221 157.128 -64.9607 157.29 -64.7605 157.29 cv
.729412 .654902 .121569 .0117647 cmyk
f
-65.1225 156.738 mo
-66.834 156.738 li
-66.834 156.396 li
-65.1225 156.396 li
-65.1225 156.738 li
f
-61.1087 151.699 mo
-66.8024 151.699 li
-66.6309 150.726 -65.7826 149.988 -64.7605 149.987 cv
-57.4577 149.987 li
-56.9453 149.987 -56.4767 150.173 -56.1152 150.481 cv
-61.1087 150.481 li
-61.1087 151.699 li
.474525 .411119 .323168 .511342 cmyk
f
-55.4166 151.699 mo
-57.4577 151.699 li
-57.4577 151.699 li
-61.1087 151.699 li
-61.1087 150.481 li
-56.1152 150.481 li
-55.7555 150.787 -55.5019 151.214 -55.4166 151.699 cv
level3{
gsave
clp
[0 -.170415 -.340847 0 -35.5466 163.262 ]ct
<<
/PatternType 2
/Shading
/5 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Background [.474525 .411119 .323168 .511342 ]
/Coords [0 0 0 100.001 ]
/Domain [0 100.001 ]
/Extend[ false false]
/Function
<<
/Domain[0 100.001 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`
KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`
KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`
KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`KP>*`
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~KP>*`s7%fRs63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*U
s63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*U
s63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*U
s63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*U
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~c+6Cfs6E6Ks63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*U
s63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*U
s63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*U
s63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*Us63*U
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 100.001 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&
s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&
s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&
s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&s6rK&
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [25.0003 50.0006 75.001 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>> /Gradient add_res /5 /Gradient get_res >> matrix makepattern grestore setpattern
fill
}if
level3 not{
gsave
[0 -.170415 -.340847 0 -35.5466 163.262 ]ct
clp
/5 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3
KS>/9Ll.+LNK0*_P*;,rQ^F21S=Q7DTq\<XV5L8kWiN8)YHY==['d?P\[oDc^;%J"_SjF5a2uKIbg"J\
c-=MYcHjh`d*^7hdaQ[peCE+#f%8O+f\+s3g=tB;gtgfChV[5Ki8NYSioB([jQ5Lck3(pkkiq?slKdd&
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~Bk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9q
BkhF#DJsN8F*2YMH$XgcIXcp#K8#&8M2I4NNfT<cPEhH#R@9V9StD^NUSXicWN*#$Y-5+9ZaI6N\[oGe
]"5Jb]=bei]tV4q^VIY$_8=(,_o0L4`Q#p<a2c9BaiV]JbKJ,Rc-=PZcd0tbdF$Cje'lgre^`4$f%8O+
nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:
~>
<~BP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'m
BP1phAS#C_@q/tW@:3JM?X@&E?!LW=>?Y04=BJX+<`W4#<)Z^n;Gg:f:esk^:/+DU91qlL8P)HD7n,s:
7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'?84Z9B84Z9B84Z9B
7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:
~>
<~5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o5!D.o
5!;%k4?GVc3]T2[3&`cS2Dm?L1c.!E1,:R=0JG.5/hS_-/1`>&.k3"t.4?Sl-RL/d,pX`],9nBV+X%sN
+<VdM+X/*S,9nHZ,UF``-7:/g-n$Mn.4Qet.k</%/M/S-/h\k30JG491,:XA1GgpG2)R9M2`EZT3&ru[
,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX
~>
]
>>
0 0 0 100.001 []false false [.474525 .411119 .323168 .511342 ]
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
-56.632 158.831 mo
-65.5866 158.831 li
-66.2143 158.558 -66.6805 157.984 -66.8025 157.29 cv
-64.7605 157.29 li
-64.7605 157.29 li
-55.4165 157.29 li
-55.5383 157.983 -56.0044 158.558 -56.632 158.831 cv
.647059 .54902 .52549 .541176 cmyk
f
-57.4577 159.002 mo
-64.7605 159.002 li
-65.0541 159.002 -65.3335 158.941 -65.5866 158.831 cv
-56.632 158.831 li
-56.885 158.941 -57.1642 159.002 -57.4577 159.002 cv
f
-62.3264 150.843 mo
-74.4978 150.843 li
-75.1702 150.843 -75.7155 151.388 -75.7155 152.06 cv
-75.7155 156.929 li
-75.7155 157.601 -75.1702 158.146 -74.4978 158.146 cv
-62.3264 158.146 li
-61.6539 158.146 -61.1095 157.601 -61.1095 156.929 cv
-61.1095 152.06 li
-61.1095 151.388 -61.6539 150.843 -62.3264 150.843 cv
cp
.845975 .709255 0 0 cmyk
f
-62.3264 150.843 mo
-74.4978 150.843 li
-75.1702 150.843 -75.7155 151.388 -75.7155 152.06 cv
-75.7155 156.929 li
-75.7155 157.601 -75.1702 158.146 -74.4978 158.146 cv
-62.3264 158.146 li
-61.6539 158.146 -61.1095 157.601 -61.1095 156.929 cv
-61.1095 152.06 li
-61.1095 151.388 -61.6539 150.843 -62.3264 150.843 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
4.27755 lw
-67.7248 156.608 mo
-72.7512 127.943 li
.212406 .523919 .837339 .105776 cmyk
@
-67.0353 153.802 mo
-67.0353 153.041 -67.6519 152.425 -68.4119 152.425 cv
-69.1728 152.425 -69.7894 153.041 -69.7894 153.802 cv
-69.7894 154.563 -69.1728 155.178 -68.4119 155.178 cv
-67.6519 155.178 -67.0353 154.563 -67.0353 153.802 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.341792 lw
-67.0353 153.802 mo
-67.0353 153.041 -67.6519 152.425 -68.4119 152.425 cv
-69.1728 152.425 -69.7894 153.041 -69.7894 153.802 cv
-69.7894 154.563 -69.1728 155.178 -68.4119 155.178 cv
-67.6519 155.178 -67.0353 154.563 -67.0353 153.802 cv
cp
@
1.71154 lw
-44.0688 127.355 mo
-58.6748 127.355 li
-60.0196 127.355 -61.1094 128.445 -61.1094 129.79 cv
-61.1094 131.134 -60.0196 132.224 -58.6748 132.224 cv
-46.5034 132.224 li
-48.938 132.224 li
-50.282 132.224 -51.3726 133.314 -51.3726 134.659 cv
-51.3726 136.003 -50.282 137.093 -48.938 137.093 cv
-46.5034 137.093 li
-47.5786 137.093 -48.4511 137.965 -48.4511 139.04 cv
-48.4511 140.116 -47.5786 140.988 -46.5034 140.988 cv
-41.635 140.988 li
-42.4414 140.988 -43.0949 141.641 -43.0949 142.449 cv
-43.0949 143.255 -42.4414 143.909 -41.635 143.909 cv
-36.7657 143.909 li
-30.7157 143.909 -25.8112 139.005 -25.8112 132.954 cv
-25.8112 128.35 -28.6924 124.235 -33.0189 122.661 cv
-38.7383 120.58 li
-39.9029 119.908 -41.392 120.306 -42.0644 121.471 cv
-42.6544 122.493 -42.425 123.794 -41.5208 124.553 cv
-37.3042 126.987 li
cp
@
-78.738 149.264 mo
-104.634 149.264 li
.499611 0 .728023 0 cmyk
@
-98.3936 153.114 mo
-105.062 149.264 li
-98.3936 145.413 li
cp
f
-98.3936 153.114 mo
-105.062 149.264 li
-98.3936 145.413 li
cp
@
.89221 .218601 1 .119265 cmyk
HQERRN+CMSS10*1 [8.55596 0 0 -8.55596 0 0 ]msf
-101.977 168.442 mo
(Resp)
[5.52541 3.80225 3.27951 0 ]xsh
-84.7113 168.442 mo
(onse)
[4.27798 4.42081 3.27951 0 ]xsh
-92.7557 219.86 mo
-92.7557 217.426 li
-31.897 217.426 li
-31.897 219.86 li
cp
1 /0 /CSD get_res sepcs
.4 sep
f
.341792 lw
-92.7557 219.86 mo
-92.7557 217.426 li
-31.897 217.426 li
-31.897 219.86 li
cp
@
gsave
-31.8967 219.86 mo
-31.8967 217.426 li
-44.0689 217.426 li
-44.0689 219.86 li
-31.8967 219.86 li
clp
-25.8098 221.078 mo
-25.8098 216.208 li
-50.156 216.208 li
-50.156 221.078 li
cp
np
grestore
gsave
-92.7553 217.426 mo
-92.7553 219.86 li
-104.928 219.86 li
-104.928 217.426 li
-92.7553 217.426 li
clp
-86.6685 221.078 mo
-86.6685 216.208 li
-111.015 216.208 li
-111.015 221.078 li
cp
np
grestore
-72.0636 211.702 mo
-84.235 211.702 li
-84.9074 211.702 -85.4527 212.247 -85.4527 212.918 cv
-85.4527 217.788 li
-85.4527 218.46 -84.9074 219.005 -84.235 219.005 cv
-72.0636 219.005 li
-71.3912 219.005 -70.8467 218.46 -70.8467 217.788 cv
-70.8467 212.918 li
-70.8467 212.247 -71.3912 211.702 -72.0636 211.702 cv
cp
.845975 .709255 0 0 cmyk
f
1.71154 lw
-72.0636 211.702 mo
-84.235 211.702 li
-84.9074 211.702 -85.4527 212.247 -85.4527 212.918 cv
-85.4527 217.788 li
-85.4527 218.46 -84.9074 219.005 -84.235 219.005 cv
-72.0636 219.005 li
-71.3912 219.005 -70.8467 218.46 -70.8467 217.788 cv
-70.8467 212.918 li
-70.8467 212.247 -71.3912 211.702 -72.0636 211.702 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
4.27755 lw
-78.1494 217.466 mo
-78.1494 188.802 li
.212406 .523919 .837339 .105776 cmyk
@
-76.7725 214.661 mo
-76.7725 213.9 -77.3891 213.284 -78.1491 213.284 cv
-78.91 213.284 -79.5266 213.9 -79.5266 214.661 cv
-79.5266 215.421 -78.91 216.037 -78.1491 216.037 cv
-77.3891 216.037 -76.7725 215.421 -76.7725 214.661 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.341792 lw
-76.7725 214.66 mo
-76.7725 213.9 -77.3891 213.284 -78.1491 213.284 cv
-78.91 213.284 -79.5266 213.9 -79.5266 214.66 cv
-79.5266 215.421 -78.91 216.037 -78.1491 216.037 cv
-77.3891 216.037 -76.7725 215.421 -76.7725 214.66 cv
cp
@
1.71154 lw
-44.0688 188.214 mo
-58.6748 188.214 li
-60.0196 188.214 -61.1094 189.303 -61.1094 190.648 cv
-61.1094 191.992 -60.0196 193.083 -58.6748 193.083 cv
-46.5034 193.083 li
-48.938 193.083 li
-50.282 193.083 -51.3726 194.173 -51.3726 195.517 cv
-51.3726 196.861 -50.282 197.951 -48.938 197.951 cv
-46.5034 197.951 li
-47.5786 197.951 -48.4511 198.824 -48.4511 199.899 cv
-48.4511 200.975 -47.5786 201.847 -46.5034 201.847 cv
-41.635 201.847 li
-42.4414 201.847 -43.0949 202.5 -43.0949 203.307 cv
-43.0949 204.114 -42.4414 204.767 -41.635 204.767 cv
-36.7657 204.767 li
-30.7157 204.767 -25.8112 199.863 -25.8112 193.813 cv
-25.8112 189.209 -28.6924 185.094 -33.0189 183.52 cv
-38.7383 181.438 li
-39.9029 180.766 -41.392 181.165 -42.0644 182.329 cv
-42.6544 183.352 -42.425 184.652 -41.5208 185.411 cv
-37.3042 187.845 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NEAAAA+CMSSBX10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRP+CMSSBX10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B610D94CEA1CF9389C4988503E6EA49CD905927750FF598DBB
2A82F12FD5A499A66E6D6E045E20FB965D6BC29B833303D689841A31AFE21372
93BE409F46F80A8F75313A8C386470B0AFB4BC8645D9FDA1D2073A0CABA22181
063AE4FCE78BE7706AD72CBB4C0686BCA9F1F4AA1E1B5CFF256BCDAAEADA56D1
C4FE9873> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRP+CMSSBX10 /Encoding get
dup 66 /B put
pop
%ADOEndSubsetFont
/HQERRP+CMSSBX10*1 
[65{/.notdef}rp /A /B 189{/.notdef}rp]
HQERRP+CMSSBX10 nf
HQERRP+CMSSBX10*1 [8.55596 0 0 -8.55596 0 0 ]msf
-108.065 -3.56252 mo
(B)sh
-92.7557 37.2841 mo
-92.7557 34.8495 li
-31.897 34.8495 li
-31.897 37.2841 li
cp
1 /0 /CSD get_res sepcs
.4 sep
f
.341792 lw
-92.7557 37.2841 mo
-92.7557 34.8495 li
-31.897 34.8495 li
-31.897 37.2841 li
cp
@
gsave
-31.8967 37.2843 mo
-31.8967 34.8496 li
-44.0689 34.8496 li
-44.0689 37.2843 li
-31.8967 37.2843 li
clp
-25.8098 38.5015 mo
-25.8098 33.6323 li
-50.156 33.6323 li
-50.156 38.5015 li
cp
np
grestore
gsave
-92.7553 34.8496 mo
-92.7553 37.2843 li
-104.928 37.2843 li
-104.928 34.8496 li
-92.7553 34.8496 li
clp
-86.6685 38.5015 mo
-86.6685 33.6323 li
-111.015 33.6323 li
-111.015 38.5015 li
cp
np
grestore
-52.5891 29.1254 mo
-64.7605 29.1254 li
-65.4329 29.1254 -65.9782 29.6707 -65.9782 30.3423 cv
-65.9782 35.2115 li
-65.9782 35.884 -65.4329 36.4284 -64.7605 36.4284 cv
-52.5891 36.4284 li
-51.9167 36.4284 -51.3722 35.884 -51.3722 35.2115 cv
-51.3722 30.3423 li
-51.3722 29.6707 -51.9167 29.1254 -52.5891 29.1254 cv
cp
.845975 .709255 0 0 cmyk
f
1.71154 lw
-52.5891 29.1254 mo
-64.7605 29.1254 li
-65.4329 29.1254 -65.9782 29.6707 -65.9782 30.3423 cv
-65.9782 35.2115 li
-65.9782 35.884 -65.4329 36.4284 -64.7605 36.4284 cv
-52.5891 36.4284 li
-51.9167 36.4284 -51.3722 35.884 -51.3722 35.2115 cv
-51.3722 30.3423 li
-51.3722 29.6707 -51.9167 29.1254 -52.5891 29.1254 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
4.27755 lw
-58.675 34.89 mo
-58.675 6.22586 li
.212406 .523919 .837339 .105776 cmyk
@
-57.298 32.0843 mo
-57.298 31.3234 -57.9146 30.7077 -58.6746 30.7077 cv
-59.4355 30.7077 -60.0521 31.3234 -60.0521 32.0843 cv
-60.0521 32.8452 -59.4355 33.4609 -58.6746 33.4609 cv
-57.9146 33.4609 -57.298 32.8452 -57.298 32.0843 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
.341792 lw
-57.298 32.0843 mo
-57.298 31.3234 -57.9146 30.7077 -58.6746 30.7077 cv
-59.4355 30.7077 -60.0521 31.3234 -60.0521 32.0843 cv
-60.0521 32.8452 -59.4355 33.4609 -58.6746 33.4609 cv
-57.9146 33.4609 -57.298 32.8452 -57.298 32.0843 cv
cp
@
1.71154 lw
-36.7656 5.63753 mo
-51.3716 5.63753 li
-52.7164 5.63753 -53.8062 6.72731 -53.8062 8.07216 cv
-53.8062 9.41612 -52.7164 10.5068 -51.3716 10.5068 cv
-39.2002 10.5068 li
-41.6348 10.5068 li
-42.9788 10.5068 -44.0695 11.5966 -44.0695 12.9414 cv
-44.0695 14.2854 -42.9788 15.3752 -41.6348 15.3752 cv
-39.2002 15.3752 li
-40.2754 15.3752 -41.1479 16.2477 -41.1479 17.3228 cv
-41.1479 18.3989 -40.2754 19.2706 -39.2002 19.2706 cv
-34.3318 19.2706 li
-35.1382 19.2706 -35.7917 19.9241 -35.7917 20.7314 cv
-35.7917 21.5377 -35.1382 22.1913 -34.3318 22.1913 cv
-29.4626 22.1913 li
-23.4125 22.1913 -18.5081 17.2868 -18.5081 11.2368 cv
-18.5081 6.63284 -21.3893 2.51762 -25.7158 .943481 cv
-31.4352 -1.1382 li
-32.5997 -1.80974 -34.0888 -1.41127 -34.7612 -.246765 cv
-35.3512 .776016 -35.1219 2.0762 -34.2176 2.83536 cv
-30.001 5.26913 li
cp
@
grestore
false sop
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /BCAAAA+NimbusRomNo9L-Regu def
/FontInfo 7 dict dup begin
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/Weight (Regular) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 58 /colon put
dup 70 /F put
dup 73 /I put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
dup 175 /fl put
def
/FontBBox {-168 -281 1000 924} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 450 470 662 682] def
/BlueScale 0.039625 def
/StdHW [30] def
/StdVW [85] def
/StemSnapH [30 38 43 53 60 73] def
/StemSnapV [78 85 91 103 109 115] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
24 dict dup begin
/period <1C60D8A8C9B8707CABCFCFB7572BA26C4F342CB44977C4D272DE413
3DB5EF66FB5CBCC13D7> |-
/one <1C60D8A8C9B7A73DC549024A66BCA9F4353026BD17B6210A66FD5D4176
116945A2F6BAB903CF6DE4F4D3C8542E96270F5E403BDB0773406DE9484D2E0E
A2DBD71107DE79DF70216D3BFEAA2172D8D68DEE8378CE1279ABF171> |-
/colon <1C60D8A8C9B854D083E206F04B4C3DD188754390434C4FB50EB4672E
AEE8A85520BB1D78CE2A6974387875B94CD46C379E034A7804D304B20C0AC31F
F325F5883A400828> |-
/F <1C60D8A8C9B7EF322BCE349315DC362BCA8CFE4FA18BB639D443336F7111
E2FACF60D2E19F1D435E96E49FD0AF135C8F4D593F674BA833D2635B8F02FCB2
BA0EA4D7637689C705ACF839A843947A142679A187B852855766FB975C8A7F4A
36CBB0767C130BA6A421FFE56B2026B49CFD6C7C20869DFF5A9F134D0B5DB06E
3DBFFEF295> |-
/I <1C60D8A8C9B81F2C46F6291E6BC656A33181A7A4C9904C14F3C78DD8A216
6C79F417AFFBE3B86093B7A5C9E5643BE68ED9E3DF5945A598D6DBA4A9E1182E
708E6DE986B0C684C3> |-
/a <1C60D8A8C9B77FE2B8A4D22D65455054518A9081A02F6171B4D6753717B5
C4BCFBE68C976641B0DA567300A37FD1F7BE0E53E951AF39FE7187820E58AB7E
16899451090BE178FB9A491AFEF8E37FF1C5BDD8D0256C28A39196FBCF43F894
58E78497ED2727A4DE9FADAB50CC878B363C604914D69E8722C78AB472A690DE
86045D5F8F45A8F711931993BC8981E4EC5F1265B4496A3A3138E85E75C304A4
1129F5747FC321FC219DE10F0876B8AE64C30F976EE673CA77E26C723368D2A5
BAFCD92094CBCB0C1DAAAB41901C661D72AF00> |-
/c <1C60D8A8C9B77FE2B8B3EAC4BBDE029BAC315D1866DD7913AEB5D830EAFE
778D8CA9FE61C9F1D7F341AAC32F9CA6E189A5065ADF2D5F773BF6F8A8426463
FFD760FDD2A3FB2FF93A8F0D901F4D79430D0C49AB088DDE46CA955357CE80E9
61F17603291AD5A9BCF763> |-
/d <1C60D8A8C9B7A73DCF5C5F318A67A421CF99702516EE66DD46F0A19A39CD
2B5B742B889350B6027EFEDA3412AF17D7447FE125ED85A03529B863375064C8
442F844291318DB0203469A078E9359BCEB35DF8F23C36890A37B169F260AC05
C273B3B8D223D18F700437592FBE0590BD27CA2E484106160C2D3CA8D60D3B12
6EF2BAA957015ACD17B66CCB4B5794278CE2D6> |-
/e <1C60D8A8C9B77FE2B8B0813537CAE403B54DB4598F87C338598C4F359D15
4701105B91D71789866B8BBDD17C51AE2B80B6E9F47C5014A178B7C760E089E4
D6B50937639285A177B2DF2F9CD9B293DCADC3AA4DBEC7EDEC1EDE937DA59145
B9D8A5509D89ABB6F024A66CDE0F535E3C7B64> |-
/f <1C60D8A8C9B81F2C46F2EFDEFE0CB59F321E43BFD6E82BCAAF0597468DCF
77C72C9CD398FF8891FD585C23641F8AE8F6E3020ADECFAC4A393E9FF54C49FA
B5A21E2F4C1179F83C25D9862068548F63557CBD68840FA2E638617AF24BDFC9
D81568C2C6E1A315E20924BB4D9FEEC5799B976A> |-
/g <1C60D8A8C9B7A73DB582976F788935A228E33A2F9BA837718EB44913857B
7DF2B08937FF3593A626EDE6CCF55DB88F671B0ACF0E0BF6EDE603335F61508C
BD99213F6A996E978EE78EC5AD0C1CE4169AAF8ED27DA5119BB90C33C9447085
BA17B797E462B8F0977A661167FBA44D02B1BE8517861232196A81989A462F7F
2FCF08A5E9EBA1DAEB8CCBF341DCDE2423F1236D5142A49C668E169F9EAF2F25
102C1FB112EB576652F83324C585B8F161182918C8C79BC3194BCD6500A04D2D
22D177CFDF96C8E4C849F7239608F6F7453202FB5504E13F8033A5FE2FB7EA35
06AF00C9E3C825E1554EE013BCEAF50C41410225B6E0A012AC7F7FF737456D43
38> |-
/h <1C60D8A8C9B7A73DC549024A8346FE9FE9D7E1CFA5F3A3542DDBE4C5A916
A5024A59CE0EA5149D6EA79ED65490BEFEF9C3C348201E7A69F357C223E56920
09826F3A927DADAF422165EC130205D6C94EDE841416A6709F1685CEE6DEF083
AF9B4CF1705AC60AB37B96773E8FE945D56F9115B299614B0DC15F528F328117
D5F2914E00B04A31> |-
/i <1C60D8A8C9B854D08887A9543335390AEE4DB40199897ABD16F19F24E0DE
858E4CD6E00B26B1829973C0FE01CFA3E329A9D0E2AFEC96CBC670DB940EEA7C
A262004364C378CC527E7F0DFBFD9ADBA6EF6E2301F19CF6860BAC9BB8A50A02
F9217A15FCE88184A4DF0C717E46391573826F599D2DFE27F4F9D82251BA41CC> |-
/l <1C60D8A8C9B854D08887A941088E15019368529A0C411CDB31B6270BDB21
E6F24215DA6EAB48951C8DAFF38285C17967F3E2D31A5645B4CB7848E783EC24
2D0750B83BCD4D9A2F> |-
/n <1C60D8A8C9B7A73DC549024A80DEC09E4F713BEC6C630F986F2AB3ECE6D2
578D5DEC50402B578B4E6CE0632E8947CBBCEB7543031081448F167C88EBA303
B4D2C70599E4B2DBCDA2B9DA37C571B7CFFA556EE2B6CDE54270E5EAA3F80E68
09540E2D41E62BFC6D0AC69B3E0C88DD3AF2AA5C4EA7ABFC511536F434A8C9EA
34BFE186> |-
/o <1C60D8A8C9B7A73DCF4402F5174BF7DD0D28D0C5665CB34D2E8E7AB07F99
F61992CA50ADD51C5A93B4B134C15D36CEC8323CBBE9C0D3A63155E9EC74B781
308A5B21C88AA604D5E026CDBDC830C30107F5FE4F678EF57725AF37DE4B> |-
/r <1C60D8A8C9B81F2C46F2EFDE84D89C8CA27978F2B1BB49B09209CD1A52AA
0883E159C0BCFCEC840E4AF4AFD0AF12CC05AB7610067AFD32B1652EE398EAF1
DF9DCBDAA912A22D36A52AAB2ABE36110186ED1FE34787D24198929398156D9F
0AC35E6BD99313253DDFFC34D01333EFCC> |-
/s <1C60D8A8C9B7361F0DD2D2259B4AE3E4ACCB44FB8872BFAC621D64E450F5
14624BD4700B917EA1CE8D60019D3B1C42E0F7377CE112D5333D1612736D0EDB
07B34DD4BA1403D44985C1A0543D99F912C9BC9DC7E96430EE2781E418322823
5F9935573E82940F1E761BEFBA74A42BEDBB36268156C77D28FAFCF48800821E
AC277DD0C93425B27A2041FB9E67F885F359D5FF9B96714513F4D2945088A893
D87F8B4D3A6600FAAA0EA12384184218B424A8492A8E97821E10762E83A8B2B1
7B9DE8ED2A20C9152C561D7EAED2> |-
/t <1C60D8A8C9B854D082F829CADA2402D0C363E188624B3DC91E66507A8AF7
69E833E0645176BA592C3DD44ECFC4C7D84DE06A044A230214D945DF321A4D72
94F214FA4A69DDBFFDC37CE6C0694F8A402CC82FE94C2B9274D4DCEAB0696C3D
253D2964904B34E1D9065A46BEE535DCD936F67C56C176C8E7F77F2F60DE69B8
6A560016E73AE51935CC218444D0EB76BA0FFF40D1297093F9> |-
/u <1C60D8A8C9B7A73DB6F2A4B59B2312EBBBE2417FA44F369C1F0ED6D6A369
96AE53A137DB00AA7567A9CEC49CE2737379BD17250255FC7E3093655F665038
8D1064F7AC48308F1DF9CB661A2773CC10559E7C61A5DCDB640FF06049B6ADB9
F9495291BF4F69DA004975E0967945B04D0D1E0AADFA85B338744A9D49B5C34C
0392DD8C9A2D5D0FBF7A81667B636E9E308B1316F61183357C46ADD0B9B8732D> |-
/w <1C60D8A8C9B6079FE827C15FB749C5E2D59AF07BCDCB23600A9E54DC7F64
C7E827C38E4CA3EDC141AC5EDC06F362661B84CB18900C724B81D9620EF76D18
0ED63FA9D5A5F924854335916B03AA4F91AFA0C7C0C6CB02E2839A0511DD63E5
74762EF80F517D5F038A6BF8C6AA8B2D183A3AB23FCFA16E562D70F6716B39E9
98C527890272681E7128A4D20258D13EE2F2B8FA152F655FEBAEDC8C60259050
DBA81825B0CDCAC66195D9F1022749> |-
/x <1C60D8A8C9B7A73DC54C6E6F1E1B2347F151B660B24776F2E8D8FE0D08BE
B090A51431058F7336381763833F21F79669FB1758E4A45605BCF730FFBF7CFA
2C722F5A25EBB940FDF2BA7B9B5ACDDB0A61662A5F4610A72EC6495E2E42CD0D
A0ABD967E5F1DD106B1FD129929FE9D5A5F6068F5AC837D5D03F8F6EF1AB141A
71105EC102F68544C432C4D0444E5DAB600D38EB3AE2F6AF3A06CD69455C91A5
6BBAB338293B6D0E> |-
/fl <1C60D8A8C9B7EF32570AFF8232948073BB5AB8BA9958E12740BD6120DA0
9BA71CD6F811C2BBB563106B582150E5A1C24BDA9759826DFC4919C1848E76E8
9761DBE4C4B2E6609DA375C7A7C8FEB3898BB254249657F8E306ED10A632687E
A2482F80F700AFD51B8B9A14589974C2A50465ABFAC5C01138999D96D63B7FC9
3C2BDB14C1CCB20E9D6A098294573BB579B56FF29BC82CD8DCA8CC6EA9AD2C62
FB1204B7951E6BCEA1D929F1CC1D7421119653F57C1E42B46EF0F374674275F6
1F798605ABED38C3641617B72BD49933BAA7F84CA6C418DE6> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu /BCAAAA+NimbusRomNo9L-Regu findfont ct_VMDictPut
/HQERRQ+NimbusRomNo9L-Regu*1 
[46{/.notdef}rp /period 2{/.notdef}rp /one 8{/.notdef}rp /colon 11{/.notdef}rp /F 
2{/.notdef}rp /I 23{/.notdef}rp /a /.notdef /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t /u /.notdef /w 
/x 54{/.notdef}rp /fl 80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [10.167 0 0 -9.96768 0 0 ]msf
-236.075 242.94 mo
(Figure)sh
-206.642 242.94 mo
(1:Illustrationofthetouchwithdrawalre\257ex.)
[5.08353 6.70001 3.38554 2.82643 2.82645 5.08351 3.95506 2.82643 3.38554 4.51418 2.82643 2.82643 
5.08351 7.97099 5.08351 6.2628 2.82643 5.08353 7.40163 2.82645 5.0835 5.08353 4.51418 7.97096 
7.34062 2.82642 2.82645 5.0835 5.08356 3.38553 4.3616 7.23898 4.51416 5.71393 3.38553 4.51416 
5.65286 4.36172 5.08353 0 ]xsh
%ADOBeginSubsetFont: FCAAAA+NimbusRomNo9L-Medi Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /FCAAAA+NimbusRomNo9L-Medi def
/FontInfo 7 dict dup begin
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/Weight (Bold) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
def
/FontBBox {-168 -341 1000 960} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 461 481 676 696] def
/BlueScale 0.039625 def
/StdHW [33] def
/StdVW [140] def
/StemSnapH [33 44 48 55 66 73] def
/StemSnapV [118 140 148 163 174 178] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/A <1C60D8A8C9B6079F1E726295E14B9D3E37B5679DF68031BFBD1BFE066052
926E25CE0977A152243271BE1D747B37EA89DE114D2E292EBCFA5757AB5F0742
8265AD587191DB5983F8ED99B8DB322C097F8AA32C17CF35304218F0C8E5E2CB
9D3370FBC8175B895A9A7BF3FBEB1A81A06888C0AA48BAA23BD6E670F21106> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HQERRR+NimbusRomNo9L-Medi /FCAAAA+NimbusRomNo9L-Medi findfont ct_VMDictPut
/HQERRR+NimbusRomNo9L-Medi*1 
[65{/.notdef}rp /A 190{/.notdef}rp]
HQERRR+NimbusRomNo9L-Medi nf
HQERRR+NimbusRomNo9L-Medi*1 [9.96768 0 0 -9.96768 0 0 ]msf
-17.0333 242.94 mo
(A)sh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/quoteright <1C60D8A8C9B81F2C3563ACD6650DD362B964D01F0CCE6A6381E
7AF5ADF5753B3592425016EDBD8EC34B3257C151FCF802999CCB500CD6DE38CD
30C802D6639CEEB7878488445> |-
/parenright <1C60D8A8C9B81F2C34C10FB5F8CB4FB0C01CBD8EB5118892552
E140106D8CE6C92507D29757CD6290403441A1EA7693B4F3C96FFB476C2C573B
7D2E57D40483AABB12672AA2C522BCD98D28F543A66D4C9ADFF> |-
/T <1C60D8A8C9B7D8BE6A419732DB5F024C0509628A5C1F3C8AEF4E7D00CBC1
830EA50E7630715A3443152766048C069B0A4C72A78E94AB6D91F59E64DF9B5E
3A2935C3883FA28660A00DBD8C0553BBB6DF7158E8BBDF61D18A> |-
/m <1C60D8A8C9B6FF86E3B590DB9FE94810D7AFBFE7B946F15ADC36CFC8347F
8B8E738CF4CF4D1809A80A85D86BFA110670A045293350272C5F45FB77C527D1
F2930D0378ADEDC7688C13D3561051EFE72DCA1312160E6190220B69FF2CC393
85ADB7B9FA12F1BEBDBD9D878BFF3BD03685B77D07FB95D12B8B813430FA3185
D7AFA5CE12372E2F5699928B2C0F3AE08B114EAE456B389E7295ED8892CA8D2A
68CBEB3EF1E32DB99917A5DF402A16D8590243BEA627189E26BE24948A498003
EC603B5D13E615> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 39 /quoteright put
dup 41 /parenright put
dup 84 /T put
dup 109 /m put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[39{/.notdef}rp /quoteright /.notdef /parenright 4{/.notdef}rp /period 2{/.notdef}rp /one 
8{/.notdef}rp /colon 11{/.notdef}rp /F 2{/.notdef}rp /I 10{/.notdef}rp /T 
12{/.notdef}rp /a /.notdef /c /d /e /f /g 
/h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp 
/r /s /t /u /.notdef /w /x 54{/.notdef}rp 
/fl 80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [10.167 0 0 -9.96768 0 0 ]msf
-9.83698 242.94 mo
(\)Touchingtheworm'stailwillexcitethe)
[6.27301 5.40872 5.08356 5.0835 4.51416 5.08356 2.82642 5.0835 7.97098 2.82648 5.0835 7.40161 
7.23895 5.08353 3.38556 7.90994 2.83652 6.8425 2.82648 4.51413 2.82645 5.7037 7.34061 2.82642 
2.82645 5.7139 4.3718 5.08353 4.51416 2.81622 2.82645 7.40161 2.82645 5.0835 0 ]xsh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B8707CA2FD797333ADE4A97DDAD77B582F5CBD0659CEC2
54CCAA47E940636A08F827925CD9A1666856A55DD075D3D80919EBA1DBDA0C08
A49DC0170BF91775E03F0E3F84EA866F24DB4E0E5C25C184B2DD7B> |-
/L <1C60D8A8C9B7D8BE6A6D10833A58E10E35AAFF577B959C281B432F2033A3
778270B7BC2F94F72D8EF799737B2B47855DBABFD82810DF495FF107F9807477
33A863894E18FDBBE26BF9A4CCFBEC890F8084F442A884FC2F927A7A2864CE18
84EE963B829AA2B70A1A8A> |-
/M <1C60D8A8C9B59F859BE0FB9A2A0F7654C6EDCAEDEE9F7FF9D3DB18954F7E
3A836D4F49588823AA3E0BA32781764B19BC402CF82F4E9C5FD476EEEA839B5A
36B407165C4F7ECC6BF68EFFCD7256A6194F4F444DA2C3D477E30DE627473946
676FD66FFE635B9837F63138E4D5B2CF03795A7A7CDACF770C823E2C6B8522> |-
/P <1C60D8A8C9B7EF322BA184F1B466A5F9E0510ACA70CC36BD5B876749AD4F
E16EDC508BA233A1AAAC6BA273FF20CF31BB17B9F1092A4BB71099575FEA4868
93AD4E3A7525913D0CD05606C6D78ACC32E189D016D7274A626F44BE17623E20
CF682C39158B1AF28D3051A12E160F64DF843604F0E5D5C417DF0F4700F18E24
35DD56AAB71313C4C2D0A2D81AEB42E579BF0FFF6DE110A340F6AA3B51D151D4
9C34D4B8C12908> |-
/p <1C60D8A8C9B7A73DB58119388AD28C6EB26113B395FAEB5BB1A92787CC00
CD17996991481186ABE86940E24AB594D9A474B01D5D0752783C6F719E685638
4C42FC6FADE6220E0D5360188934499D6C788FD6225163F3ED610B71BFF6B877
481E0736BEF6EB1112BB14B3A87DE8D1E721238F8F2E426DBC236319E17981A4
C07831306A73D6A3E6AC794689B59CA316CE67D8D4C94BF2EB8F108645A3CF1B
50AB6566123326> |-
/y <1C60D8A8C9B7A73DB5828C8EB6692FACE27F93F009F946C390116926A043
617DCF82B76B3921AD1CAB060694C724481443C88DCE9CCDBD4C5105E503E45C
67DC21FA0E146B65B0F0EA2429259DEF9F5CD456C1B4E1A4CBC49AFDCA5F37B1
AD742660BF135BF9BE1A2789C070C0A4FB4767FBA0411908E30D692396427C73
1EB9FE493ECBA19FDDC5F0C50E54D346D5DA656C79E40808BBE549> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 44 /comma put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 112 /p put
dup 121 /y put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[39{/.notdef}rp /quoteright /.notdef /parenright 2{/.notdef}rp /comma /.notdef /period 
2{/.notdef}rp /one 8{/.notdef}rp /colon 11{/.notdef}rp /F 2{/.notdef}rp /I 
2{/.notdef}rp /L /M 2{/.notdef}rp /P 3{/.notdef}rp /T 12{/.notdef}rp 
/a /.notdef /c /d /e /f /g /h 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /u /.notdef /w /x /y 
53{/.notdef}rp /fl 80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [10.167 0 0 -9.96768 0 0 ]msf
-236.075 253.855 mo
(touch)sh
-210.505 253.855 mo
(sensory)sh
-176.476 253.855 mo
(neuron)sh
-145.263 253.855 mo
(PLM,)sh
-118.839 253.855 mo
(and)sh
-101.189 253.855 mo
(corre)sh
-80.3061 253.855 mo
(spondingly)sh
-32.1347 253.855 mo
(induces)sh
1.90466 253.855 mo
(aforwardlocomotioncommandinthe)
[7.48294 3.38559 5.0835 3.38556 7.24902 4.51419 3.38556 8.05231 2.82645 5.0835 4.51416 5.08353 
7.90994 5.08353 2.82645 2.82645 5.0835 8.06244 4.51419 5.0835 7.90997 7.90991 4.51419 5.0835 
8.06253 2.82645 8.05222 2.82642 5.08353 0 ]xsh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/bracketleft <1C60D8A8C9B81F2C36B2094B9ED0E07AA432BA5CE2E16D09DB
E94F578B72BBBB31B68E690F62B9641352789F0E43476B5B076476BF5E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 91 /bracketleft put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[39{/.notdef}rp /quoteright /.notdef /parenright 2{/.notdef}rp /comma /.notdef /period 
2{/.notdef}rp /one 8{/.notdef}rp /colon 11{/.notdef}rp /F 2{/.notdef}rp /I 
2{/.notdef}rp /L /M 2{/.notdef}rp /P 3{/.notdef}rp /T 6{/.notdef}rp 
/bracketleft 5{/.notdef}rp /a /.notdef /c /d /e /f 
/g /h /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /u /.notdef /w 
/x /y 53{/.notdef}rp /fl 80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [10.0773 0 0 -9.96768 0 0 ]msf
-236.075 264.77 mo
(animal)sh
-206.156 264.77 mo
([)sh
HQERRQ+NimbusRomNo9L-Regu*1 [9.96768 0 0 -9.96768 0 0 ]msf
-202.805 264.77 mo
(1)sh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/exclam <1C60D8A8C9B81F2C4F5C693B4F9606D99CE9AA0851732BF143A1668
AFAE535C83297F35AD6EFCA84373B2909E422DE69F4F52485098F3AF9CDF677C
BA7F42AFA29E7E2367B0B478A5DCA8614A02E796B91A2947774> |-
/parenleft <1C60D8A8C9B81F2C34C10FB5B45A8FF20C81B99897830644196B
9F0B77D18F1E2415B32643B9BEFB32917C4D47B1853CE389710AFD496390E0F7
93FB9D427EA0C5D4BB5FDA148EAFEE0C20062EA421DE85BAC5> |-
/H <1C60D8A8C9B6079F1E4884809AF27C32C4C4644B748B72386090DF6EB484
CEA0815D83DD608CC775FE83C31EDE164D077FF80BB002D9CA37B26EA5372CD4
FEE69909A5383B74A93FDCDCA1E7577D38E8B9431EDF4F2AED0BB7B71858AF38
E98C9DD8D402A49E8B0C6A4E0841C41D036EDF21A21312F4AE79B0046CA7EE30
82CAAB0BAB2FA41410BA4687> |-
/bracketright <1C60D8A8C9B81F2C36B2094B9ED0E07AB0AE245978D415C9B
35A8D321C0AFE31914517F88ADB7E422E89E84FA69E241776020CB3FEA2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 33 /exclam put
dup 40 /parenleft put
dup 72 /H put
dup 93 /bracketright put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[33{/.notdef}rp /exclam 5{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/.notdef /period 2{/.notdef}rp /one 8{/.notdef}rp /colon 11{/.notdef}rp /F 
/.notdef /H /I 2{/.notdef}rp /L /M 2{/.notdef}rp /P 
3{/.notdef}rp /T 6{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a 
/.notdef /c /d /e /f /g /h /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u /.notdef /w /x /y 53{/.notdef}rp 
/fl 80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [10.0773 0 0 -9.96768 0 0 ]msf
-197.82 264.77 mo
(]\(Handisnotdrawntoscale!\).)
[5.84482 3.35567 7.27583 4.47433 5.03867 7.51768 2.8015 6.40919 5.03867 5.03867 5.29063 5.03865 
3.35568 4.32323 7.27583 7.52769 2.8015 7.52782 3.92014 4.47433 4.47433 2.79137 4.47433 3.35571 
3.35565 0 ]xsh
%ADOBeginSubsetFont: FCAAAA+NimbusRomNo9L-Medi AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRR+NimbusRomNo9L-Medi dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B64EDFFAB6FC0D4AFA7632EE41A0D7DCE29049997277D72A0A
39DD6BB53A9CF9D4391EAA8E30EA1FFE7AE0DA105C8DE5B29C13D3A527D1570C
4E94D4A6136BC47C3EE58D0D001FCBF50CA8541008F5CE032400AE3C4E978862
006BA5C73697DA0FA0981AA955B307A37EF49F673BF9CB32796CDDBE697AEF2E
8D1A2A14D6D8F7DF860B0C0419489F9E4F44828CF1D02C772E2CC85A9EE9AE1C
12C8FF6427E5E12B9144E9C076A701DE35F9DEF13B2CFA3EA7DFE8473C3EB260
856751CEB16922BBA1D71C0734AAB5ECACB690863A6F966384424E753517D164> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRR+NimbusRomNo9L-Medi /Encoding get
dup 66 /B put
pop
%ADOEndSubsetFont
/HQERRR+NimbusRomNo9L-Medi*1 
[65{/.notdef}rp /A /B 189{/.notdef}rp]
HQERRR+NimbusRomNo9L-Medi nf
HQERRR+NimbusRomNo9L-Medi*1 [9.96768 0 0 -9.96768 0 0 ]msf
-69.4309 264.77 mo
(B)sh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B5D6EF35A61E5C76A324B31A56F3B1CFE26126626F91A2A4BA
CB1AFAA605E0E99F36A77DB54F2E6AD346FFEBAF72E8228330EFB65AAE1194D5
7BEB271028701B01DDDAD430D9B1C5E6D2484E89D44C9AF9F0018889671FF0D3
BE9234ABC3DA9D8C8004B7B21325045A51F5AA0FE20F5CDACE9D24E8264E834A
6CC230947F02E113668F0DEC36085CC5DE7FE47E19E6F994D361F781D02378A2
2F044298> |-
/k <1C60D8A8C9B7A73DC549024AEE55A0365CA53932E5214D92E03447BD2708
2733F8BC4B52390213A989FF43E960E136400BFBE15D14D9BA4C2D61B09B4F05
0FBF7DCACD230C4E8767F21A80F637BF5694F2161773ADC9B25B69CFE9C32887
671F39202B1661FF55FACF361DF983E96161F84FF87D28B0AC0FA43709B6CB55
E1E44E07E3A733E7B5F64E7A67A496C0C4D5E21D4A198AB4487F8ABDBAE25A8E
986F6B42BE1053CBBD4E723DD568DBDCFB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 87 /W put
dup 107 /k put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[33{/.notdef}rp /exclam 5{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/.notdef /period 2{/.notdef}rp /one 8{/.notdef}rp /colon 11{/.notdef}rp /F 
/.notdef /H /I 2{/.notdef}rp /L /M 2{/.notdef}rp /P 
3{/.notdef}rp /T 2{/.notdef}rp /W 3{/.notdef}rp /bracketleft /.notdef /bracketright 
3{/.notdef}rp /a /.notdef /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /.notdef /w 
/x /y 53{/.notdef}rp /fl 80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [10.0773 0 0 -9.96768 0 0 ]msf
-62.7828 264.77 mo
(\)Workingprincipleoftheintroducedtouchwithdrawal)
[5.84482 8.71683 5.0387 3.35568 5.03864 2.80148 5.0387 7.5177 5.03864 3.35568 2.80148 5.0387 
4.47433 2.80148 5.03867 2.80148 6.9635 5.03864 5.84473 2.80148 5.03867 6.96347 2.80151 5.03867 
2.80148 3.34555 5.03867 5.0488 5.03867 4.4642 4.47433 7.52783 2.80148 5.03867 5.03867 4.47433 
7.5278 7.27582 2.80151 2.80148 5.03867 5.03867 3.35568 4.32309 7.17514 4.47433 0 ]xsh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B81F2C3AED63678C15FF4B0D41EAF1ADF08534F78C6CF
D85> |-
/v <1C60D8A8C9B7A73D3387F33511357F5C470E09351F77CC276AE129494BAE
19BAE0CA39F2A5A776A3E65DC754DA89AD1C5CC64A59E7F0B5EC70F5692EBE0E
0FB9D1DB1A31CC7BBB43C8920E79F728121E780030958DB645DD328A17F8DFF9
82D1DC59D2D6959A7E783D9C1D0AA54F17D353136E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 45 /hyphen put
dup 118 /v put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[33{/.notdef}rp /exclam 5{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen /period 2{/.notdef}rp /one 8{/.notdef}rp /colon 11{/.notdef}rp /F 
/.notdef /H /I 2{/.notdef}rp /L /M 2{/.notdef}rp /P 
3{/.notdef}rp /T 2{/.notdef}rp /W 3{/.notdef}rp /bracketleft /.notdef /bracketright 
3{/.notdef}rp /a /.notdef /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /v /w 
/x /y 53{/.notdef}rp /fl 80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [9.96768 0 0 -9.96768 0 0 ]msf
-236.075 275.684 mo
(inverted-pendulumcontroller.)
[2.77101 4.58514 4.83435 4.42566 3.31915 2.77103 4.42566 4.98384 3.31917 4.98383 4.42566 4.98384 
4.98386 4.98384 2.771 4.98386 10.2467 4.42566 4.98384 4.98384 2.77101 3.31917 4.98384 2.77103 
2.771 4.42564 2.771 0 ]xsh
%ADOBeginSubsetFont: FCAAAA+NimbusRomNo9L-Medi AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRR+NimbusRomNo9L-Medi dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B6079FED7B811C9CB98FDD2CBB73B766F3FE85D1EE3FD8DDB8
5BC465FE2BC61BAC5B5A2E845BEE1CB687D5EE8D92148AD0E5427DF74A90FB77
64CC177867BD76CAA04E6A69E2891FC8B9E96FF6DA1BBC73DDC3D80086E55449
49DB2A153C2FBD03A3FAF8D79C22F8E0F57F4EB1D994BB49218C5E945433A9F2
5B2828A5C917A6F314FC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRR+NimbusRomNo9L-Medi /Encoding get
dup 67 /C put
pop
%ADOEndSubsetFont
/HQERRR+NimbusRomNo9L-Medi*1 
[65{/.notdef}rp /A /B /C 188{/.notdef}rp]
HQERRR+NimbusRomNo9L-Medi nf
HQERRR+NimbusRomNo9L-Medi*1 [9.96768 0 0 -9.96768 0 0 ]msf
-114.495 275.684 mo
(C)sh
HQERRQ+NimbusRomNo9L-Regu*1 [9.96768 0 0 -9.96768 0 0 ]msf
-107.298 275.684 mo
(\)TapWithdrawalneuralcircuitof)
[5.81104 5.29277 4.42566 7.4758 9.0108 2.77103 2.771 4.98386 4.98383 3.31918 4.27606 7.09702 
4.42566 5.263 4.98383 4.42566 4.98386 3.31915 4.42566 5.26288 4.42566 2.77103 3.31915 4.42566 
4.98386 2.771 5.26297 4.98386 0 ]xsh
%ADOBeginSubsetFont: JCAAAA+NimbusRomNo9L-ReguItal Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /JCAAAA+NimbusRomNo9L-ReguItal def
/FontInfo 7 dict dup begin
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/Weight (Regular) def
/ItalicAngle -15.5 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 67 /C put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 108 /l put
dup 110 /n put
dup 115 /s put
def
/FontBBox {-169 -270 1010 924} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 432 452 653 673] def
/BlueScale 0.039625 def
/StdHW [23] def
/StdVW [78] def
/StemSnapH [19 23 32 38 43 47 53 69] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/period <1C60D8A8C9B8707CABCFCF9DA0E740BAF14381B46E7EF43F488F487
2E9294321A54B0280> |-
/C <1C60D8A8C9B64EDF7ACDAD27FC7B2DBF66A88CDF54CD328D7FD24369B2FE
D33EDD2352F5FC4BCBC7C1A4F5DC71ED9B84E5E65E7E13A2B9A3B72FF47DE9B4
D20AAE993D30DD7D9C69B6DC812C06CC421CB55A2A83853F6470EC0A60D48FBC
B56AB218A84EA160A4794FC71A721BAF78F5B6AA73C60EE0DE> |-
/a <1C60D8A8C9B7A73DCEA80DF8A035E6052CC982C976E52805ECA17E96ED85
358DAEDA8137772CDA5D0D5F7C4275C1A5E4026261E2C3B38D308543B0E1AE71
3B517F7E54F0F5CF956209F612780761A2B71144A88A7046841A56B11D93FFB7
995D2EA00522953A8040D863497047DA14446BB2067ECCA8ED4D837CAE01ACE7
B46971340ABC15D79E32B004512A5DC5059BB56C2E7C594AD5A68E2BF959502E
9DADE6C7214B6F03755BE1A81CA309BC3F4F893EA7111D43D400FD21B368B73A
A2E3205E67> |-
/e <1C60D8A8C9B77FE2B997F32F2DB91A4F584393A1EA30FB14EBA73D87B1A4
D022DF8523FDF49BC255F6353D4EC7286276F638720F53775551090EF627DE32
99167E228A46C7C9F7600C313C9DB3D95EFD29DAE4921482D8BDA0C17CF165AE
54F2E4EAE86D7BC98FAA78761A40F55BE22953DF97061B> |-
/g <1C60D8A8C9B7A73DB58EA1BABB86F5673E58177B13D1689217184648646A
C0CE49A237A8F103AFCDB5EC056581454943D22FAB127F5C1E1E8B9D6E918057
E41E57DC52684AD5331B647C59B7E247B500C8501462047450C98D0B8241197F
7468EEABB23B6BE6A7CBE76395CF8839E2B115BC98F6FA00D46DDFE6768E493A
3C0344DC7EA7D3699B1F8782B909183D69E072358DA2A49D119AC7EDA36AC077
37F930D0C75C1F1BCB60AF1EAF20DDD5E35335A0BC9EC8E0CE2E4A3CD6851439
F3DA9D850AF5975B35E3C0F98171603731A62B92C94E104B5375FD3CA4280A4C
C5653EBF95230E8F334DA161BDC71F51D2AC3CF2759DA1D1B2BF0F0FB9FBB3DB
4CA56B5DDF9EBC89C937B97D72AE185FFA5EE4F1CC1FCB4460BBA25A82EF5CF4
F8653AA4B26755A26D8BF3E9248CABA6BFFD30E08F> |-
/l <1C60D8A8C9B854D0838A1108B53790159DD3B4EA9A1AD8636B0628F820FD
D5F77683DE15235D1FD339E9EA97EC21485FAAD28EC53B019AD5B813C84FDEA8
E91A6EF405E10B821029B8F161246B85F33E1B773CCB78341CFCF787EB8263F3
78D06DE7AFE2110DF0B39030FD> |-
/n <1C60D8A8C9B7A73DCCC2CF5CE401F1233B06D0FCF55836E538C58E814EEA
E6634460655FD290AE7488CE32E814759E0AF2C2482D7ABBAB2541CE23A2082E
8ED41FB38E252A6CF76E3507FBCD76F6FFBE5683A3516B6ED6647539D8D688FE
36EA596FC13D794F6D3DDE908BBDA3068338531638CB57995C08C38697724D14
8D71913F92B471AD67329A2D4B1A2188889C10BEBFE0E915562767D4E2D95C76
B539DE865FC66F5538DC89EE812915B3922908D3579330F65A44> |-
/s <1C60D8A8C9B7361F8BB5EB474F071A14F6886A6A71311E11AE8DF8D62DC3
BA85E254787E7DE96602C8D214E85040DD2CD59A86CF2994C7DBEBE3497C89DE
48A5193513118D9558DD3565C61BBDDA73580B36F71CB4E32D78B6DB4E5ED4D1
267100D1262D415027F043F562CDF11A5D7AA04FB2DDF5C58D3789142B59E5C7
AE5B5B52E6A06FCCAD6BA1E60EEC10FDF0D840DA95B7FF8BF26E189AC01FA90D
B18C7828CCC68A7BB8906A516C79B12ED0B2A14494F039D484536482D2FB3F95
00> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HQERRS+NimbusRomNo9L-ReguItal /JCAAAA+NimbusRomNo9L-ReguItal findfont ct_VMDictPut
/HQERRS+NimbusRomNo9L-ReguItal*1 
[46{/.notdef}rp /period 20{/.notdef}rp /C 29{/.notdef}rp /a 3{/.notdef}rp /e 
/.notdef /g 4{/.notdef}rp /l /.notdef /n 4{/.notdef}rp /s 
140{/.notdef}rp]
HQERRS+NimbusRomNo9L-ReguItal nf
HQERRS+NimbusRomNo9L-ReguItal*1 [9.96768 0 0 -9.96768 0 0 ]msf
30.7581 275.684 mo
(C.elegans)
[6.64853 4.98383 4.42569 2.771 4.02695 4.98386 4.98383 4.98383 0 ]xsh
HQERRQ+NimbusRomNo9L-Regu*1 [9.96768 0 0 -9.96768 0 0 ]msf
72.4431 275.684 mo
(.)sh
%ADOBeginSubsetFont: FCAAAA+NimbusRomNo9L-Medi AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRR+NimbusRomNo9L-Medi dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B5D6EF3EDF823525D67884CFE5E6E2D79F528AEFD30B8C24F3
F84A353EB328441BFBAE386C2334F111D031C740693356DADDA62C1815C8D910
A43D21FE1312019BC32369117BA43F900FACF9D0C8E6A1E3B5E69EA1CA878962
F0DD93613312CC0C6EF96DA429093C1285F13F509BB821E55B44A0AA1CD034> |-
/T <1C60D8A8C9B64EDF881B97EC6C740C9E7C27B920CCBA50F1DA7D4E67D1AE
27EDDB3829EA2D3509E3D6DC43353717C70BAA27DA2848B72EF65091FB4CFA81
212B062D0E5D587BD9F343935655E98789F65E8F4977> |-
/W <1C60D8A8C9B5EE31863EFB3384F13E0E8396C5D3D5F699707E696A4CF1D9
C6028DD07274D2E17BA32FA2C9E3996B970A13E3ED19EB9EDD60E729BB1F4819
24B0B1F30E0FC23CD57A61387EB8375F65107DAAD28A078F0158EFCACE4511CA
8A0080BDBBAF9AF089015563DF73DAA788FBDE2A720DA5751BF5F9F75D53E321
34876AC1824CB887733BE6356C157F4EF9CB19732EE563AF97B37230F1E32A2E
917228B2> |-
/a <1C60D8A8C9B7A73D3387F3351E8E18AD4C337D189ACB524452C5C76175D3
6A9B9EE21E61CCD032B72EA732DAB08D223F8476F8158A75DD87D53D4754BF58
8F21BBDD0B9BD8A57E8132EB5982C81AEFE1FC21DC7FEF21759B1DDD64FEC1B0
1D76B223BFE0C623B317990FF3F82C513CCA8FA63FF271DA495502242C53CA27
EA3287B2BBFC3217711C1DDF95ED56603997D39682906E04AF748FD5C8E52443
0A90FD84624F869BD880BCBADE562C810BE2A83CC20CB51E6D0CA2C7008633C4
06518E> |-
/b <1C60D8A8C9B7EF32A197526A4B04A18ABDFB17B506314FEBCC967D58D37A
1BAE1D70D51387A69E33A3528C1E4C46131DD0F716CB9CD5D029861C055A88A4
7591CB3E3F2D0AE589CD946E2F4EFB67DDEE0D1973635635E163477753314CA0
CA2593426D2EDAC290CA8BDEDC3D96B7> |-
/c <1C60D8A8C9B77FE24419C765668C66977042CF4AAC33A05586CA04AB921B
B7D14E2740B1CE39960F7CFC14FBE33A3738153404F59CDC94DC3EC626A023EA
0F50958819CB5E3F42DC48646B0675A464926E4575093FB7FB37B685779CE3A0
2CD6> |-
/d <1C60D8A8C9B7EF3243D232E82BE0910CC994C22771842A9ADF622B1D79E3
7DE4B68C19FCEF3730CD11E25E3272E2D5BCD269C67B73F70F41A90007DBE5E5
2CD25DBBED229B9448840D6CD8FC9C629790473304F7C27650B6E8C1752F56C8
3DB6B91FCDE4B804D81851D7DF80C983E503F4B54CFB5219587BA6339570529E
29DE5652FCE8EA96FB54198A92511FE6D7B4D6C21BE10C37FCBC2F> |-
/e <1C60D8A8C9B77FE24404D6FC75C46E8B158C7975D79013EBB5DCD53440E2
1332CFC4ECC341E7AFADF9585DB658612EC8ED47CB15CBF662FC73FBEE0045FF
CB1EC723F1B412304D1100168E2128E2060163C1E9CBFAF33B361B5A6E493F9D
F06D41DD478FF2FA297D0668847F9C36D5F5C238CA> |-
/f <1C60D8A8C9B81F2C46CB7D4B088C9644D850FF2E7D4B535086D0F5438DAF
C761104412F361FE092E9179ED2DF1120475113D9F11FCD502BC52046F3C88BB
DF27941300ABCC14ED64B8A7F615666C615610346A170729FDF8D7C8CDA401C1
95E18403D8B9F0195CD09B663946D17CB518E3599938731873FABFDA> |-
/g <1C60D8A8C9B7A73DB6986B74967860531D5C33FE655CD281C5643C14DD6E
74CB50E9F5CEBF92AB3E2DB23D8D0536338ACC1434BD74DB78E6C8972A56B5EC
A00CAED24519752EC7C275BE9E252326654566806EE44BED5B9C3C15F855C948
AE366CCB698D2FF7464E816DABCA2B9DB7D8F75909CEB8F70AAF3E4633401D87
E86EC0698BC79253BA9A49BC1498FE9CBB60BCC5D06EB4A08004B665B63A67EC
9E690E5E0DF479D3844D0B21B68EBA67DB35C98DDC948E732644238649DBC89B
54633CEF2AA882567C823C6F21331BD4F98556D8FCC8D44F10AAFF9E4FABD558
7810FF14047DFA3E5185E0955F6BD298F8306A17456D921D7D3C75CFFF140087
BB0D9FABAA9F75CEC075AC019AE213A62E888471EE6E4ACF6C4AC9422C554BB4
2C> |-
/h <1C60D8A8C9B7EF3257330F56AA26B3B4D60E1AB698B7732F7E2F8B8B1233
66FD09FD4CF17306DC3C95E7C7F49EAAA224DAF837A0D57E9845075192FEB55A
59F361EE897E2ED04657CEF5BAB80C209F8B454E76E95664E5E92A953BF5D04A
824985B9EC7D7044712DF5643ADD4D8814DFBC9F902E4D275DF69220FC0263A8
8AA2FA89922F> |-
/i <1C60D8A8C9B854D088BE03066611142D35B96CDBC6AC69CE7D90A67E607A
97F6A9B6B875C22F51FD57BA3ACC3AD42FE0C4A0E1D536D46C6FA1792B134074
70AA44206267D45F7C9D5285679ED629FF131156C24DB7D425525CB4E784EDB9
C67C53B4D02F9488FD31A7A26AA8AF73> |-
/l <1C60D8A8C9B854D088BE0307DDE29E2DC8A57E14CCBDD0429C9D43FFDCE5
7C1979D6548F9F5B47CC0F21039A42929DCC89E93721E673DC46552B4818AF30> |-
/m <1C60D8A8C9B6B41C9EF86D4D6709D4B4B598121ABB5312D265CF235A834A
848ACC160F120715B6D9D9DE49A3676340531B82B90738BD6CAE6D52EC61EB6F
4100397B542B30AF3045B69D55E829A9CA2911A2131AEF0E17B862A77C80D00D
1B61DCDDB2FDD8AC1D4F6F1C38001BCEDACD3F5BD3CF61CF3007C39B156EF6E2
E67B4D6514FBC70B978E5F934A5BE1753968182C7F65657D118D3CFD8597FCFF
C0E74EEAA06DDD9859889BDB3E82F10A5B29BD59B729EB58CA91FF4B11BFABD1
8058EFD26FA1217D294C851E56C2F5CC05EF837BC32D4E3ED3> |-
/n <1C60D8A8C9B7EF3257330F56C94494157A7EF7FFCBD73F84DDC3CD027CBD
344CBE46734D8DBE3D0D7A5371055EA217764D1E6D19B975A4618DAFF7C83378
2DBB8AD061F2A7084A3861B8353FAB4D938BA793AC098E1E390E341D00898940
4E3478333E6F04C8A2256EF7F64BCEACA7195CAB26AF2CF435195B53F578CD79
712EFFD6BC467431370A461A8086A2496F058336> |-
/o <1C60D8A8C9B7A73D33B29FF9A975322B3362DC44B144D77C192E90E503AC
52DEE198FC9B9A0BE397FE5C900774EEEF1E745C0E1E84056DE211BFA2C0DD56
BD867F1CEE2D1CAF0E57E72D77AF929D1611EB127B9A6B678E> |-
/p <1C60D8A8C9B7EF3227BDC2DEF081752ABC87234A787BA60BDC47984CB411
ED63EC5E4B6D9478A33F088C2CF316BB52BFDB2FED861B15237D1ED95B6588FF
AAF4CF1D5D5601B80B411956DD9A8EE126B5735EB8A2084BC88DF8086F350B74
E28D821E583543F692E28901FD341BDD4D823558AE3235E81A295B5EFBE1B545
992A1C7B5623EEB3F1D3B33C87E44AE813DE4EF7B2CC460C88EC70DF784AA774
F4201DD8AE370C53518363BFDEE9C94F8DB93BA9732F9E3008C774076C08C665
4E3E> |-
/r <1C60D8A8C9B77FE2B2290770D44CC430BF6AF79602E44809DC88D3C54004
27379EAC0B160CEE8AF2E8F72C87C0147E60F09C5282EDD102E5F476C901E4E6
9904CE6DB98CB80ACEE6CA70E710379770254DC0880BBCB5487957E5B0BB4709
CA0E4C60374912AFBC44CC6DACEA916420> |-
/s <1C60D8A8C9B7361F88137B0B3B9E3BE8575A6F0132A8AB9BC21CCB7EEA59
D7C1838FEEC96953798936A0666A27E1BC45EA9D786F997994F74D34DE4AFF12
ED9FE990CE76057A0B0440124651A1447CC3EB65F8E5DD21BBCCF42559B0DC72
BC23E377821A6082C09BFD65655DAD91AC241371D8EE6F35DC6A81FF8B99FAAB
CFE16B4C07309EF358F349B1ADEA227F8C0DF4EAE6353A5FFA74> |-
/t <1C60D8A8C9B81F2CB2ACA02E0CECC7A7088ABA14D8BB1C717E776D9EDDA4
1B7C69A092B87660DC1D8821ED3D3E1FEA1F5AEA3E07AE0B68C4FA037897D267
0ED7A25F38BD082D632B2C2A93BC6E0C80> |-
/u <1C60D8A8C9B7EF3243D232E8573DAAF0F171C711AF0EEFF6FE5D5256DF8D
97D672758F82C9E2E877C020A441F6EB402FD1AA5DEC8D1C598FE06768BF2DFA
7BC4F3F56A078987032C87801D09237CF0E0DAE05AD963395884A2967847A085
BC10BBCEB6CB5318E5F568F7AF4D6031693682FA630A2052D1C2FD845AE4DF2D
65> |-
/v <1C60D8A8C9B7A73D3387F3351EBA955708736DF6DBBE5A6BBDC5B16FF90B
2796A40E907DB66E209CE98B2FF10F1ADA9282D643B19551AA40F0E8C7EDCE45
DC4C2D18302D116FBDE98C490A37A0AC7CB7875902354C1228FEEAAEBBF6B6FB
B829CEB817DC78B5BCB52D2BA6B351B4> |-
/w <1C60D8A8C9B6079FE827C15FB83B1503199A092AD3822C388DB38383E9EA
D719C761150F7CF485E3FAB58FE6077627A086EE00F384828FA9E7E754FF5F0C
30816B384CDB9059951BF9BEC38694DCC4A6323065CA844FE06EB38EAF037C00
F75BE013DE6D3AF5E95CFA710380A2A2FB7E603FDAAB142167FB43E812C73774
8B7F3607A92440A3CD36587D64BB08ED3773B9A0DACCB08D014B4D591197F0AE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRR+NimbusRomNo9L-Medi /Encoding get
dup 77 /M put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
pop
%ADOEndSubsetFont
/HQERRR+NimbusRomNo9L-Medi*1 
[65{/.notdef}rp /A /B /C 9{/.notdef}rp /M 6{/.notdef}rp /T 
2{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w 136{/.notdef}rp]
HQERRR+NimbusRomNo9L-Medi nf
HQERRR+NimbusRomNo9L-Medi*1 [9.96768 0 0 -9.96768 0 0 ]msf
-236.075 366.545 mo
(Manipulating)sh
-175.591 366.545 mo
(the)sh
-159.992 366.545 mo
(model)sh
-131.644 366.545 mo
(oftheTWneuralcircuitfortheinvertedpendulumswingupproblem)
[4.98386 5.64163 3.31917 5.54202 6.73814 6.64853 12.2901 5.54205 4.42566 5.54202 4.42563 4.98386 
5.09354 4.42566 2.771 4.24628 4.42566 5.54199 2.77103 5.63165 3.06995 4.9838 6.74817 3.31915 
5.54205 6.74814 2.771 5.14334 4.88422 4.42563 4.42566 3.31915 4.42566 7.85452 5.54202 4.42566 
5.54202 5.54202 5.54205 2.771 5.54205 10.6255 3.87753 7.19666 2.771 5.54205 4.98383 5.54205 
7.8645 5.54202 4.24619 4.98386 5.54199 2.77103 4.42566 0 ]xsh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/z <1C60D8A8C9B77FE2B2232EA49D913A831C97B47563501A79DCA41E417E74
E20F3E3020C6B422D96B1171C7F6A868EEF4F80EC234E8C81C6D5907680692B3
D53F97E8CC04C61D64F59B524A639C52> |-
/fi <1C60D8A8C9B7EF32570AFF8231DCF4ABC5DEFD5B6D550686CFFCC91C267
F1252BA4F4DAA274A3A6688691900FFEF7A839B52553AB9F891F187F51351F44
C21EAFE0C45D0394141E4F8BAFD06377AA51E37B7097AD1CD66EBD9853CBF817
2875228C37FE0953ECA0AB863FE32A47EEF2B7DF444F4BC2717645C8B4ECA894
32D1027B7AF6DE75966098D9C73E00129B4A704F85D81AF7D80671478639E183
CA75D9BD8666D9EFCDBB6B3C3084DAC79574807631815CB8BE737035BB77F054
C44C971E29217D4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 122 /z put
dup 174 /fi put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[33{/.notdef}rp /exclam 5{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen /period 2{/.notdef}rp /one 8{/.notdef}rp /colon 11{/.notdef}rp /F 
/.notdef /H /I 2{/.notdef}rp /L /M 2{/.notdef}rp /P 
3{/.notdef}rp /T 2{/.notdef}rp /W 3{/.notdef}rp /bracketleft /.notdef /bracketright 
3{/.notdef}rp /a /.notdef /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /v /w 
/x /y /z 51{/.notdef}rp /fi /fl 80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [10.167 0 0 -9.96768 0 0 ]msf
-236.543 412.99 mo
(We\256rstintroducetheneuronandsynapsemodelsweutilizedtomakeanarti\256cialTWneural)
[8.80463 8.19467 5.65288 3.38554 3.95505 6.51706 2.82645 5.0835 2.82645 3.38554 5.08353 5.08351 
5.08351 4.51418 8.20479 2.82643 5.08351 8.2049 5.08351 4.51416 5.08353 3.38554 5.08353 8.77412 
4.51418 5.08351 8.77412 3.95506 5.08353 5.08353 4.51416 5.0835 3.95508 8.20477 7.90997 5.08353 
5.0835 4.51416 2.82645 7.64575 7.34061 8.20477 5.08353 2.82645 2.82645 2.82642 2.82645 4.51416 
4.51416 8.77414 2.82645 8.77414 7.90997 4.51416 4.98187 8.2048 4.51413 8.77414 4.51416 3.38556 
2.82645 2.82642 5.65286 4.51419 2.82642 4.51419 6.50693 6.21194 13.2884 5.0835 4.51416 5.08356 
3.3855 4.51419 0 ]xsh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B6079F1E4884847E183CDFB6808979A7FFAABD96864B66E877
4E70985CF395DC1D2FB7C8BCD1A4C47C710B24983ACFD957FDD5209F65A7CC6D
CA7FAB2B31A94757B920900AF55DAFF07E485481F6EE171E97C1FB25B33FFF25
DE136D66C781030917AD5172E37CA4D4A7F6F4BF8A8F873BF0626800AF87A204
C228E1B6C0435E1F9862D6C5EA44C6C9DEA79E98A81138E9957151BC634A5F49
B7895409D9F2A50BD885B883DF4C> |-
/E <1C60D8A8C9B7D8BE6A6FAF13E57A5D0C2C66821CCEEF24B4E4419847787E
D4C8A98BBE3EBCCE15D1DC333F323E4C7D43FF48D1C1F11091632F6F11174D4D
B924B1BBA6DF69EF4ADB27C45D6BAFF8FAE037CF2DD63F0C99022D146FEDA01C
CFEE96DE599AE8069A8E5F6B8E0F74979F0CC193D875C6765F26CD248D1D0923
817F3CBDA21B14A62B3E828ED4997E1F5E3EED19C373DD0855950863084BA232
08116185FD3DCF> |-
/N <1C60D8A8C9B6079F150BE669E05A86555759DA107B43AB61905A62645A66
3DE63B767402DC6894A5DFEDB84E4BDD1D351CED404CF8174231DE9B67002319
4AC38274F20C1FD6D4B8DAC4F0C8BAF545ED28910A7DBCC99ACA30CFE6FD8C85
EEB2F3221A60E51AFB01492A579996C127A28D4FA98C92096380068298F29040
ACE78F68E55A11F391A0536D2E67FD1C08CF11> |-
/O <1C60D8A8C9B6079FE817D875D2CBFFB503E7661914031DEF82D48C90EF37
02517DD03C8E65B1C85769ED6887A24289D9AB99F5B1BDE82993DEACC2DDC39A
E11851296B5BD32A727B69731E92C7B0DB7ABEFABCF42140BCA1DA9DAA31FC27
FA6483912C36637F02E27FBD8C9B9BE19A703CEB20A6852E97F86CBFE152A658
3E5E69CA94CEFA79FBBF39D4558C7345137E92> |-
/b <1C60D8A8C9B7A73DCF483CC3D064C5D3508B11AE282C299523D8D2A309C1
7B70A170029C0F65CF90DD2BE591B98673683525C4890D287920F2AE4A535CEF
E47857E6491D69196894FC8103DF0EDDDC2D4539CDA22F565FDFB14A75B6689D
6F3BBF9428A6B06753AEFCDF61504E25> |-
/q <1C60D8A8C9B7A73DB5811938DD329AF5702F449C4C3015239F3E0A7732DF
C9E0828332DA51F1D7FDE724DF869BE73384BD1B7136B03BB11DF051325EE7A7
668042B3ABF69CE2C13C47BD4E4C9A86DDCBB9CAE3222F43A69A8FF1ABBDD409
F18B51721F47402665B69C88AC7610BDEE6B922DEBE4B9A5509B50F0E0D3E071
713E6B4ECEE647E52C37F2D1A72629A17EE40EF1260847BDA48E1E19> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 68 /D put
dup 69 /E put
dup 78 /N put
dup 79 /O put
dup 98 /b put
dup 113 /q put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[33{/.notdef}rp /exclam 5{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen /period 2{/.notdef}rp /one 8{/.notdef}rp /colon 9{/.notdef}rp /D 
/E /F /.notdef /H /I 2{/.notdef}rp /L /M 
/N /O /P 3{/.notdef}rp /T 2{/.notdef}rp /W 3{/.notdef}rp 
/bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /.notdef /k /l 
/m /n /o /p /q /r /s /t 
/u /v /w /x /y /z 51{/.notdef}rp /fi 
/fl 80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [9.7783 0 0 -9.96768 0 0 ]msf
-236.075 423.904 mo
(circuit.)sh
-205.557 423.904 mo
(Neurons)sh
-169.935 423.904 mo
(are)sh
-155.502 423.904 mo
(modeled)sh
-119.332 423.904 mo
(bythewell-known,deterministicordinarydifferentialequation\(ODE\),)
[4.88916 7.38255 2.71837 4.88916 6.83505 7.05997 4.34155 2.71835 2.71835 3.2561 4.88916 4.88916 
4.64465 7.05991 4.88916 4.93808 4.88916 4.34155 2.71838 4.34158 3.25607 7.60751 2.71835 4.88919 
2.71832 3.80386 2.71838 2.71835 6.83508 4.88913 3.2561 4.88916 2.71835 4.88916 4.34155 3.25613 
7.38251 4.88919 2.71832 3.00192 3.2659 4.34158 3.25607 4.34158 4.88913 2.71835 2.71838 4.34155 
5.21176 4.34158 4.88913 4.88916 4.34155 2.71838 2.71838 4.88913 7.38266 3.2561 7.05991 7.05994 
5.97449 5.74963 0 ]xsh
%ADOBeginSubsetFont: JCAAAA+NimbusRomNo9L-ReguItal AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRS+NimbusRomNo9L-ReguItal dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B81F2C3AEF8CABB00AA0848D99DDA5FA3929309DD8608
1> |-
/L <1C60D8A8C9B7EF32573FBA3773C23852FE2AF74934999517C9B92B6F40CF
AB34FD10393E7C21AD897166E6BD746717A61507CD69D6A6299BCF5FE03B8A50
3AEC95FE431B0781054386FB6A1B84FA250D1164DDDBE348378845624ED3CF9C
0D08806FAA994DBE60> |-
/d <1C60D8A8C9B7A73DCEAFB0502243BD04706825067C78310881CCC16C5F6F
F8AAEC74F317B88CC0E4F1055489FB852C14136A6E1F60B5B0042E4758635412
066A24BD500B790764F39B57DB21FA6563BA932B89447DF074787049FE3A50BB
104A3B691543F02DCED75C58972F1687D2574445464A58B981530FA8EB1E9C62
58FCE2491852C79FF9BF09AA8339BC431996263A97DBE2207CD8E1022C6FAAC5
776FC9675ECCB714EEA043A95F7AFBAEC875872AC8A77FB76A5F76AFE9EC3753
490950DCB6FFAFA27B> |-
/i <1C60D8A8C9B854D083AFE4C873AEC1E7FDB9EE859797A45455327B9BDB70
760240E8ACF666DC8D59275277C3F3C252A46BC2A92D5BC509D2A0906FF0489A
6A2863B6C52E12014E0BA262008BDC08AE94865A26FD90663B8FE13B433E5668
3A79BB00550E9151E21E522B2D2B5D71B39AD827ED501C13C2B901FC1670356A
6C436566AF4075B7579EA6C70A85F6C747F08B> |-
/k <1C60D8A8C9B77FE2B9904C0D7F53E23A4C1615C54D82151E5F6F1709EF28
5A7DF0207FF2792345B30C4F64EA44EA0D4B9545CCD81D04F7FABC0179109982
790F710B1E6EA02BA26B8408D5204B6E1D22D1F0941E40E45423FB9E4B4DE78E
F08056AC21485D24868243D7412008A28FC36E340A5BA095D4F511C64AC11D1B
DE7DB96CD844FEBC6AD2820E216ADBAB959FD92B182EDA07A9C290755C> |-
/r <1C60D8A8C9B7361F7E31A316A5441472A3D5F0BBE187EC79A442CBC96388
45592AF85C4E4C7D40F5739783C28CBA686CB4EDBADD3DF864045E1617F9EF64
EF28B75F06BB7DB3735A4D1B8449A08901B30CEFEBABE09F310BAA3CE48486D6
4D9403EE527234C18BDC9B0C77031AC2437A48321C> |-
/t <1C60D8A8C9B854D083A90EFBC938A92D26787E8A2985BDD732F5F3979320
973AE05469589D37F6710993FA8C4F22B07BA5CDB62E8203EBC0D0A817CECF14
3F719975302FFF456E372C07C4540089BA89691B08F22F6B687DBA322D090528
19E08BEFEC85E919D4B4433340CE06E3E3F5538367ACD04AC81520E078F70831
E1> |-
/y <1C60D8A8C9B77FE2C19B609CB909D76D35AC1FA9390A2909D4A1E86242AC
BFBCB0DA2AC096B623B472719455C929A7EFF710055BF930CB636686B0B30F57
8AE3A30E9C2F193F9AD930D45E9F04F1617DFB8E62CE43CC06972C63F68200FE
3923E367F0FE8CB040C4E353A18F8BA0A62F448921E029E259F4E7C9636FE4A8
38051DD4DA9E7CD8541D94DFA1F5BA65E010DE3147FEA31F28F0830EB65AC119
8FABA7801C8E81C380C67CC14F62389A5C0F> |-
/fi <1C60D8A8C9B7A73DB58F6C98A5E3761A1BAD4C6AA16E3404DC9F6F52195
C5E055530D0F0AE4A43C9A4F8E3355B0340B60E234DD50BCF3FF412A6DC0D7FF
F16A2390549118672BACCF65F97EA4D3C9B7B5A6D1074BACC8DC99F6E7CEE2C7
DBE22A1C3F42F5D6E47EF9FC3711B2FC5D6718702EC11387021F832A46CE3391
253821E08C7A515CB79722C5AD33AB2C3B065F5EEC77CF8E8AE385268D2B6D37
666835EACB05976DB7E40CCEE92797978DED7C798EDA80D579AD4E5EDABA4512
BB05880BAAB69F3E81D9D790CBFF256A4A145643E5C734FC7171512B8C583091
4830C667813934E6A8CC5D513B39EE3985F6B60D044011EE7FAC3B374B0073E7
5C261D73DBAF99FC225E79F76CFED38D5BFC8001152824441C1C87EDDE5B959C
1234812790E6A0A784738A54C2708D3FB03147107F50AC3A2A1865CE9B76E24> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRS+NimbusRomNo9L-ReguItal /Encoding get
dup 45 /hyphen put
dup 76 /L put
dup 100 /d put
dup 105 /i put
dup 107 /k put
dup 114 /r put
dup 116 /t put
dup 121 /y put
dup 174 /fi put
pop
%ADOEndSubsetFont
/HQERRS+NimbusRomNo9L-ReguItal*1 
[45{/.notdef}rp /hyphen /period 20{/.notdef}rp /C 8{/.notdef}rp /L 20{/.notdef}rp 
/a 2{/.notdef}rp /d /e /.notdef /g /.notdef /i 
/.notdef /k /l /.notdef /n 3{/.notdef}rp /r /s 
/t 4{/.notdef}rp /y 52{/.notdef}rp /fi 81{/.notdef}rp]
HQERRS+NimbusRomNo9L-ReguItal nf
HQERRS+NimbusRomNo9L-ReguItal*1 [10.1571 0 0 -9.96768 0 0 ]msf
-236.354 438.522 mo
(Leak)sh
-216.711 438.522 mo
(y-inte)sh
-193.979 438.522 mo
(grate-and-\256re)
[5.07852 3.79887 5.07854 2.82367 4.50974 3.38223 5.07852 5.07854 5.07854 3.38222 5.07854 3.58548 
0 ]xsh
HQERRQ+NimbusRomNo9L-Regu*1 [10.1571 0 0 -9.96768 0 0 ]msf
-135.026 438.522 mo
(\(LIF\))sh
-110.528 438.522 mo
(model)sh
-82.6466 438.522 mo
([)sh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73D33B7A780A4FB6D478F9DFFD1DA2730E109F94628
9022DF44AA9C6B3C7A83D30909F0BAB42A6E1D1548FDDC248F7C953CDE5A28D8
689A27CB59F87D356A314D4EFED0475CC0AAF39DC03786C824DDF509843103FC
7FA496FB5DCC5A8557EAC7C07B47467CFAA928DDE85F766B75A88715FF4FBE39
5D793AA936CD181919EAA5062E994CBA144301D3C748F9AB1671C4DDDDB4E131
7F6796560BFDDC9A58> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[33{/.notdef}rp /exclam 5{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen /period 2{/.notdef}rp /one /.notdef /three 6{/.notdef}rp /colon 
9{/.notdef}rp /D /E /F /.notdef /H /I 2{/.notdef}rp 
/L /M /N /O /P 3{/.notdef}rp /T 2{/.notdef}rp 
/W 3{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /.notdef 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w /x /y /z 
51{/.notdef}rp /fi /fl 80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [9.96768 0 0 -9.96768 0 0 ]msf
-79.2635 438.522 mo
(3)sh
HQERRQ+NimbusRomNo9L-Regu*1 [10.1571 0 0 -9.96768 0 0 ]msf
-74.2802 438.522 mo
(]as)
[5.88089 4.50974 0 ]xsh
%ADOBeginSubsetFont: OCAAAA+CMMI10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /OCAAAA+CMMI10 def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI10.) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
def
/FontBBox {-32 -250 1048 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 431 442 453 466 683 705] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [72] def
/StemSnapH [25 31] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/C <1C60D8A8C9B63FB7C309BB51A0AA38866971342058637E4EA8CE5B53AB6E
EDDFC0DD4BDF4349D1CCBEC7FC3B8F8C4BC56F4AACD598A0CB5CDB1A49842906
ED33DE2381C847D7D561B34860359680485FF707969037C9A22F4277055DB265
4232064AD12BBF45F796A3AB236EB6B871446058974A4373294390B85B91CDA4
CC8A3CAF6468783E7EEB7DC337BF0B494BB06171CC8D9EE695CD15> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HQERRT+CMMI10 /OCAAAA+CMMI10 findfont ct_VMDictPut
/HQERRT+CMMI10*1 
[67{/.notdef}rp /C 188{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-57.4483 438.522 mo
(C)sh
%ADOBeginSubsetFont: TCAAAA+CMMI7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TCAAAA+CMMI7 def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI7.) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 109 /m put
def
/FontBBox {-1 -250 1171 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 431 441 451 463 683 703] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [32] def
/StdVW [81] def
/StemSnapH [32 36] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/m <1C60D8A8C9B51B15A3B004ABA78A4F02BD45FD7274A9A74A7E48B0CC064D
1921E5F873EDDD9CF9C0E04FB4DDBB5A9DE083B2A06BBAAA363C515090F99E1B
B42E4268DDFDD4B979C34D2B766AEA414FC3301D3900FB6A2581AD984395510A
7DE6E4E94F0B46728CE5D2F992A065A90F6FDC045FF834218D0821D404C67A58
3E6DD4E1C1588B76CFCBAC1F0CF3095FBCE07AB6CB05BD94D14F59C6697D642A
E3F308A8ECEAA8EDA418A19805A2AF109BEDC47DCC3ED47312863C6C89DF3AE5
52650A8DAB19AA4E26F36E02C586851911CC17A2A390CF53B48BB9E3B044F2B7
3887D346B6371E8B3242F85376774A8C36E83543CF398DA6610FF498DF45068C
D5CFA4B320311628C3069E3398E15B2A2F0A889B7AFCD88C192CA83812CBF5C3
1A2E8B2370AC853734ADAF47BADBD0D80D02C1B26A91738B43EBAA89B839> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HQERRU+CMMI7 /TCAAAA+CMMI7 findfont ct_VMDictPut
/HQERRU+CMMI7*1 
[109{/.notdef}rp /m 146{/.notdef}rp]
HQERRU+CMMI7 nf
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-50.324 440.017 mo
(m)sh
HQERRQ+NimbusRomNo9L-Regu*1 [6.97728 0 0 -6.97728 0 0 ]msf
-41.5569 434.435 mo
(d)sh
%ADOBeginSubsetFont: TCAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRU+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/v <1C60D8A8C9B7E02ADCCAB09304437B5161F217459F0E8D5BDFFA27E93625
D30460D1635AAE8BBDBBD1E1DB54433BBD8DAA44296C65C081628E84ED84C0B5
62616014DBC12689C5AE70A5A152C945BD544AA9DA286DCF26261BD3CBD878C3
4026FC6F7D7A6404C1D6AC38EF9EDA4F4B6CA0052376D25732DA953623AD6D87
D564B41792E3832E4CA7D4EF2F314245> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRU+CMMI7 /Encoding get
dup 118 /v put
pop
%ADOEndSubsetFont
/HQERRU+CMMI7*1 
[109{/.notdef}rp /m 8{/.notdef}rp /v 137{/.notdef}rp]
HQERRU+CMMI7 nf
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-38.0682 434.435 mo
(v)sh
%ADOBeginSubsetFont: YCAAAA+CMMI5 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /YCAAAA+CMMI5 def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI5.) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
def
/FontBBox {37 -250 1349 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 431 442 453 464 683 705] def
/OtherBlues [-205 -191] def
/BlueScale 0.044 def
/StdHW [36] def
/StdVW [90] def
/StemSnapH [36 44] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/i <1C60D8A8C9B78699153E6D8DCCDB283AF8B8230707F331CBACA3D20BCD5E
83244BB9DAD4967164CBC1D33D76B08E88D7F13738B77ADE77EFDEA539EAB8E4
67A563EE3E141C9A3DFC1A09A0010159A0E6AE909C867759552B45755720A159
FDDF60596A3A803EAAAD75823F27F1CE932205BF37E0BEA078BCA55DAF077B24
C8AB2A034308A399AB402E9AAEBC54F852F79EAE25C999BFE8001C4F3C43856B
7FD755D3A04F65064389D01F6AAFDB490E00B977C223F4D3787403> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HQERRV+CMMI5 /YCAAAA+CMMI5 findfont ct_VMDictPut
/HQERRV+CMMI5*1 
[105{/.notdef}rp /i 150{/.notdef}rp]
HQERRV+CMMI5 nf
HQERRV+CMMI5*1 [4.98334 0 0 -4.98334 0 0 ]msf
-34.0814 435.432 mo
(i)sh
.398187 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
-41.5569 436.03 mo
-30.9239 436.03 li
@
HQERRQ+NimbusRomNo9L-Regu*1 [6.97728 0 0 -6.97728 0 0 ]msf
-39.4899 441.959 mo
(d)sh
%ADOBeginSubsetFont: TCAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRU+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B76C9024B562E6ACACC3BBFBFEA0392D5F04472FA97061AAE4
DC52A3F98A11D8D54F25E4E1258444AF5132275DA6C5E3D0885B5B2A4654CEE3
4242292B9FEE69B16E5DD8A918634DD3321B8DE0F4A8FC34CE141D352DCEC7C4
316AD4FCDE9B4AA88B17F80EB64AF3D0551FB1E213394E362152BE7414F5D1A1
399F0E6D948396CBDF7FCCB9AE5C344B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRU+CMMI7 /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/HQERRU+CMMI7*1 
[109{/.notdef}rp /m 6{/.notdef}rp /t /.notdef /v 137{/.notdef}rp]
HQERRU+CMMI7 nf
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-36.0012 441.959 mo
(t)sh
%ADOBeginSubsetFont: DDAAAA+CMR10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /DDAAAA+CMR10 def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR10.) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 61 /equal put
def
/FontBBox {-40 -250 1009 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 431 448 666 677 683 705] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [69] def
/StemSnapH [22 31] def
/StemSnapV [69 89] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/equal <1C60D8A8C9B6FC2D989577693E56B5D5D9CAF0920CAA1C7CAC692E59
93F0507AA10E6DD4C22E48360AB64AABC8F79D72A37E3395EFF87B7331B16AA5
497F9A03CF7F30718A4F8E51FE4C555962B834> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HQERRW+CMR10 /DDAAAA+CMR10 findfont ct_VMDictPut
/HQERRW+CMR10*1 
[61{/.notdef}rp /equal 194{/.notdef}rp]
HQERRW+CMR10 nf
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-26.954 438.522 mo
(=)sh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/G <1C60D8A8C9B6C769ACE610B045CAFC9B5980A473DD1FC7D0825A108A30FA
8B6928939249BB86D25CF7F7BC83AA684EADB904385B56983401AB4C03055B07
AD0B04F0195681C3704FF99AEDA7162EA34DA2298893A96EC0968FC82D924057
6EBEB60CDDC4267751368A85189C1D03A7C4168DF79F971555E9FD96763D9E2F
CFD9653E141DDD68CBFCD7799D812FB3F9D0FB7B20A86B7D279C5803E306715D
3B278CA834CBCE10493BCBF6DD47CF720BD5E2A5EF8F561B417B93A5339A1575
6A1DC1FF080401ED565511E48A597549E2B6FD001BED2FB381216F29CED68B48
75634C28A1DAA6EE1F421071E86BA892193138CB6B31060D2ADC36A6CAE37159
8E97> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 71 /G put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[67{/.notdef}rp /C 3{/.notdef}rp /G 184{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-16.427 438.522 mo
(G)sh
%ADOBeginSubsetFont: TCAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRU+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B6C25608C72BE65985FE220269462904E30336467C7373CBB0
F550F0ED1DE66BFC747476B9B3ADC508E3159560C254125C1629F1FE394079EC
1D724E9F4530B15FD85263D4F7494839C4564EF3F73D00DFCBBA57AA002ADA2A
FD2B4646B86CDC9CEBE3DB07FC3339D181B9ABC5EFB8E00A4E4B87F2BF8B42E7
D6DD06585405E2F128B4293060DFA8ABFFD8422438BBE74E7018D169CC88AF1A
0543F16DD1B5A9F62527703413DCED62> |-
/a <1C60D8A8C9B7D04D6EAC82F8236992FC7B075E79E13721E67606CC7CB1C1
341E499C16669F8E832C7BBF92CCCA25441F87E33D4C56566B335F7DB78148D0
11F90B6CBA7B8511ED65A515E66767EA6C6A2593BA18EA27C354755856993C63
64F03C4A44FD9A4EF4B4324F4E9AB0E8015ADA73B8E2196307A0372CDF806D86
713115049ECE43E5C5D5E090805805E0F6406B60A6790A6B4F1D2F7EC7C37DAC
CAD6030DF5A398C693824186C48D669E310E41570649D967796D60> |-
/e <1C60D8A8C9B79D2DDE51C8AF9A1C2C117AAD2B3599A8804571A02FD41B74
BE8E9A00AC5CC45F41A1E38286496207E531A42B79D80783F6F0722D9F37C9D5
6876D347FE6F5612AB6913E73901C4EDB5DB5AC6ECD136C5354ABF5C0DC1E23A
39841D51A447E70E05EDDF9B9B07D5A69F4F674101E48D7FD34D4DE5DF2B3162
EC7B> |-
/k <1C60D8A8C9B7DCE0346E58A1F51E7C4C69C1082EBFC4E4F7F707F4564379
656105A40D2B029E40ADC01E8EFA659F22A6C18C4DA5DA066116754D5C5886ED
C21111EA5D9A62B93664DE4E3C5027595619448BFBEE90529362A1E3EAEA2134
1C8858F496B028AB52B426A78BCC76AE1DE84CEEB909E3C2E914F547AB9297AC
023A19FB5439AAB393491CFF29F4ED5F95657D7E28EC801370D07341133A025B
363D666AE1FC100E8BFC32C3CC6B2F785789FF43E37586498CFFE9083D378BD4
7FEC31825515133345DD04A4F9F7D200930C452B491D3B11BB7D620FF9E5CF68
FE79DD8F3D2025F652E39575A43D48726472FDBB71B93CD75527> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRU+CMMI7 /Encoding get
dup 76 /L put
dup 97 /a put
dup 101 /e put
dup 107 /k put
pop
%ADOEndSubsetFont
/HQERRU+CMMI7*1 
[76{/.notdef}rp /L 20{/.notdef}rp /a 3{/.notdef}rp /e 5{/.notdef}rp /k 
/.notdef /m 6{/.notdef}rp /t /.notdef /v 137{/.notdef}rp]
HQERRU+CMMI7 nf
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-8.59033 440.017 mo
(Leak)
[5.46814 3.78174 4.32385 0 ]xsh
%ADOBeginSubsetFont: IDAAAA+CMEX10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IDAAAA+CMEX10 def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMEX10.) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /parenleftBig put
def
/FontBBox {-24 -2960 1454 772} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0] def
/OtherBlues [-1159 -1139] def
/BlueScale 0.04796 def
/StdHW [47] def
/StdVW [47] def
/StemSnapH [40 47] def
/StemSnapV [40 47] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/parenleftBig <1C60D8A8C9B7C63DFF0E30CD5C0327BE74A96BE560BCA961A
CF698878054DA30EF9B4CFB82768D5B4E404EF5732F1FC3DC94BDC5A964687B6
5B9F6B7DE9434850BC3D3E6B08ECDFE191872EBBA1B73992DACEFE7049F8AA21
944213CC29013B92870D3C09D041FA43B95B48671570E9D14CD545E430252F72
9AEFA6FDE84ABAFA9F180FE4E4D5A2E8926ECEF1C4A4805345051> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HQERRX+CMEX10 /IDAAAA+CMEX10 findfont ct_VMDictPut
/HQERRX+CMEX10*1 
[16{/.notdef}rp /parenleftBig 239{/.notdef}rp]
HQERRX+CMEX10 nf
HQERRX+CMEX10*1 [9.96768 0 0 -9.96768 0 0 ]msf
9.88733 427.458 mo
(\020)sh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/V <1C60D8A8C9B7F44A4E58A3FE29A801396C4DA1DF17CDB2B354514EF59794
C1C07AC5FD6F40EE28650B2FE8FB68B9DA6BD85A482B92D52BA74241616AB0AC
8E2815E3098242BF657BCF71DB2E9E87D171CE76BB8548E6B2121240DDA27C25
25AEFECBD1C7DAA77355B1A83D994CDF326D8868CE17D3A0CE201581FECDB843
7425CA9F468A336E5E62074B2DDBF80B29DEFA7D4EED2051F19152B8775C48F8
3E63250113F1DBD5E8454CCAEF5F05469AC04B813D2E1365A8E1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 86 /V put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[67{/.notdef}rp /C 3{/.notdef}rp /G 14{/.notdef}rp /V 169{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
15.8401 438.522 mo
(V)sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
21.6539 440.017 mo
(Leak)
[5.46814 3.78177 4.32382 0 ]xsh
%ADOBeginSubsetFont: NDAAAA+CMSY10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /NDAAAA+CMSY10 def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMSY10.) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /minus put
def
/FontBBox {-29 -960 1116 775} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-24 0 683 705] def
/OtherBlues [-135 -124] def
/BlueScale 0.04379 def
/StdHW [40] def
/StdVW [40] def
/StemSnapH [40 56] def
/StemSnapV [40 56] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/minus <1C60D8A8C9B6FC2D98F64FA8A84856380510A8B89CD4DE936C2002F9
CA66334C70459EFC1D8016D52F4ACC8D584A> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HQERRY+CMSY10 /NDAAAA+CMSY10 findfont ct_VMDictPut
/HQERRY+CMSY10*1 
[32{/.notdef}rp /minus 223{/.notdef}rp]
HQERRY+CMSY10 nf
HQERRY+CMSY10*1 [9.96768 0 0 -9.96768 0 0 ]msf
42.3486 438.522 mo
( )sh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/v <1C60D8A8C9B757A3CCA419203BF94D2EA809857FC5AEAF28AEF59E6D5D45
95243375EAF5326012C4167BD7F8B392426C632C6BD60C506B533235B57DACEE
5845AF98B9556028F4CB4A4DE219381CDBF6B35E72D60AF0075649B899EACBAA
65356AEBEB0FD0694026C4EFD6A1484FCF2301F1B9CB02C37F17D7273BD89FBF
D7D50E022EDB45C8AF26A82D60B86E25FEB1CF67FA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 118 /v put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[67{/.notdef}rp /C 3{/.notdef}rp /G 14{/.notdef}rp /V 31{/.notdef}rp /v 
137{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
52.3183 438.522 mo
(v)sh
%ADOBeginSubsetFont: TCAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRU+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/i <1C60D8A8C9B70721B9F639782C8460B97E82801AD0D8A919DC5D9CAA4C68
FBE7833AC2F83808014E455261AE4698D1787D69206B38071478CB577B72EF41
ED0606485A0805B327A9541BF99C223B853428820C7432E93F64332505182833
A9A1726F67F49595C0D6B4E36728E08E3A3FFE1D3400C0426C9F7D546B609ED9
847726C531FCA5CF35B9B04381F81797F4E937A123F607399D53953A016040EB
4EB08C885D7568DA709FDAC1486D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRU+CMMI7 /Encoding get
dup 105 /i put
pop
%ADOEndSubsetFont
/HQERRU+CMMI7*1 
[76{/.notdef}rp /L 20{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 
/.notdef /k /.notdef /m 6{/.notdef}rp /t /.notdef /v 
137{/.notdef}rp]
HQERRU+CMMI7 nf
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
57.1496 440.017 mo
(i)sh
%ADOBeginSubsetFont: DDAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRW+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B737EC27E43BF1977FE17AEB7DE778CD9D1D3D9164
F271727AA0A52834106DB6D5C2AAFD94AB31812D41894E82D13A11FDF4155F02
A6615144E05EE47C8795E8E89CE29B723AE08221B1DF3C5B4817E44D18CE1598
A5DC2F98DABB2ADE3D131ACFA2D3D56E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRW+CMR10 /Encoding get
dup 40 /parenleft put
pop
%ADOEndSubsetFont
/HQERRW+CMR10*1 
[40{/.notdef}rp /parenleft 20{/.notdef}rp /equal 194{/.notdef}rp]
HQERRW+CMR10 nf
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
60.4681 438.522 mo
(\()sh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B80380260085120D6D1E249FB2DE32EFDFC5AEFCC3C1AB362A
B1AC4D945C4142F374B77DC20250C08162AEB69DC4CEC0575EF34A20FF2838C5
6D01A3D40EE49012FD52F036B2ED1BB119E65DE07D10EB5C2DD7F41ED672F45A
F363F4750BF26AF3518256DE17E77936DC9CD6CE44CA5F494C6FB830F5037D06
DCD316E617> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[67{/.notdef}rp /C 3{/.notdef}rp /G 14{/.notdef}rp /V 29{/.notdef}rp /t 
/.notdef /v 137{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
64.3445 438.522 mo
(t)sh
%ADOBeginSubsetFont: DDAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRW+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenright <1C60D8A8C9B737EC27E43BF1977FE17AF226302CB703517021A
0DB54938D38A906781CE143685A42358F6D26C1E58529BD5B1EB56AB64CAF397
16A9479AF082DEB3A49B0B9FF06175FD4C622795E8AFACAE24D77E337BE03FB9
9C4AAA689F9E967FCE15709E3204C4D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRW+CMR10 /Encoding get
dup 41 /parenright put
pop
%ADOEndSubsetFont
/HQERRW+CMR10*1 
[40{/.notdef}rp /parenleft /parenright 19{/.notdef}rp /equal 194{/.notdef}rp]
HQERRW+CMR10 nf
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
67.9438 438.522 mo
(\))sh
%ADOBeginSubsetFont: IDAAAA+CMEX10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRX+CMEX10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenrightBig <1C60D8A8C9B7C63DFF0E30CD5C0327BE74A96B45647443E5
FC8EB13065214475FD67AC6F093420444DE21E02A7D43CD34724383E912A1100
D7235C41C2786EE777C6012158E875F2D1F8601DE81C64B2C6C205BC44B8ABBF
9E6B4737C7A8449536ED331AF57DD51985426AB22DA85CE0C38F8D1A1A18F21C
D9770BD5C7B9BC03E8750B6407139B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRX+CMEX10 /Encoding get
dup 17 /parenrightBig put
pop
%ADOEndSubsetFont
/HQERRX+CMEX10*1 
[16{/.notdef}rp /parenleftBig /parenrightBig 238{/.notdef}rp]
HQERRX+CMEX10 nf
HQERRX+CMEX10*1 [9.96768 0 0 -9.96768 0 0 ]msf
71.8195 427.458 mo
(\021)sh
%ADOBeginSubsetFont: DDAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRW+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/plus <1C60D8A8C9B6FC2D57823F96FCEAA42600BD46AFBB76FB6FF2C168953
BCB7FF7D0E7F5CE3217809FB248485B096C8249504CD271987061A868385A7E2
BE1F08F0D0B8329FA5B5F11EC03D020ECC8A0457ADD9A63765A60296998F5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRW+CMR10 /Encoding get
dup 43 /plus put
pop
%ADOEndSubsetFont
/HQERRW+CMR10*1 
[40{/.notdef}rp /parenleft /parenright /.notdef /plus 17{/.notdef}rp /equal 194{/.notdef}rp]
HQERRW+CMR10 nf
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
79.9893 438.522 mo
(+)sh
%ADOBeginSubsetFont: IDAAAA+CMEX10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRX+CMEX10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/summationtext <1C60D8A8C9B521E322C24C96E0E231F0E47EB04843156366
A24A293B59AFC4B3918CB6344678BC1DF63E4B4187061E01F9A9212873DA6C87
4CF370BD0DB0D5C637E26FABE797593940996ADB65EE3E84D5A9E5E17601165C
94096235E3C4719045852E9B9AAC2FDD3B4EE793AA595A2CDD953AE0DA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRX+CMEX10 /Encoding get
dup 80 /summationtext put
pop
%ADOEndSubsetFont
/HQERRX+CMEX10*1 
[16{/.notdef}rp /parenleftBig /parenrightBig 62{/.notdef}rp /summationtext 175{/.notdef}rp]
HQERRX+CMEX10 nf
HQERRX+CMEX10*1 [9.96768 0 0 -9.96768 0 0 ]msf
89.959 431.047 mo
(P)sh
%ADOBeginSubsetFont: TCAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRU+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B6374B4C02BBA2C2A4BDFB14D942002897AD9E721F35D86194
D6438DBDEDC613997064273324A03221ED77119ACF97A1D09756CA7E107C6843
B21D2503F6D3BC75D192648064781744E5678EE97FB1A6056604808404C56F7F
8D9D91257F1B37A07011CB22C58E0406E0C6D4A5BC20F01F9DAAA77AA12DA66A
554F2FCCCF5FB6A9C312E0AF216136CBBB0407BD13C77F63C014B8ACF17C60BC
7406988C870BA107A13FF0CB13470F996F69FC27271E79FA5A5A46301340F300
2E6F499CCA32312E6CC54FD83DEA5D41382D0DEBB2CBA04A7F886B0B36B4C204
4E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRU+CMMI7 /Encoding get
dup 110 /n put
pop
%ADOEndSubsetFont
/HQERRU+CMMI7*1 
[76{/.notdef}rp /L 20{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 
/.notdef /k /.notdef /m /n 5{/.notdef}rp /t /.notdef 
/v 137{/.notdef}rp]
HQERRU+CMMI7 nf
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
100.48 433.511 mo
(n)sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
100.48 441.512 mo
(i)sh
%ADOBeginSubsetFont: SDAAAA+CMR7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /SDAAAA+CMR7 def
/FontInfo 7 dict dup begin
/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR7.) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 61 /equal put
def
/FontBBox {-27 -250 1122 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 431 446 664 674 683 703] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [36] def
/StdVW [79] def
/StemSnapH [28 36] def
/StemSnapV [79 95] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/one <1C60D8A8C9B7E2CE5B62E9FEEC2E64DB4DF57A0DEE8F2DC4BC1D285E2D
6E93583C8BA769F966BA0D2874BA4F6692804A12EE154BF6C4128EE336963B1B
369FC937E51FD440B01114006718C9CD9EDADE925291DDB3291CFBE83284B576
2DA660F3B8EE1736383DFDEEBA0BD582FD6608113CEA73> |-
/equal <1C60D8A8C9B593D6D47FD9CC657AEA78BB93B93E797CFD3C2F45E7AE
99BBC72E0746A7E2A1090B9AA11860F7CCC70A62A9356998CC9E481F07FF34F4
8507607194D6BEE374D18623A13CD516823B17> |-
/.notdef <1C60D8A8C9B7A73D40> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HQERRZ+CMR7 /SDAAAA+CMR7 findfont ct_VMDictPut
/HQERRZ+CMR7*1 
[49{/.notdef}rp /one 11{/.notdef}rp /equal 194{/.notdef}rp]
HQERRZ+CMR7 nf
HQERRZ+CMR7*1 [6.97728 0 0 -6.97728 0 0 ]msf
103.3 441.512 mo
(=1)
[6.11905 0 ]xsh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B76427AC28DB7D15FEE2E108AECA7DF16495D9DB7B1104C5DA
C5B674AB916F6EB0F1CEE2C2E75233460BA1B0249AFD1C196A33C527D1FA2B6B
DD5B83C69545214F6F5ADD2A4C251710BA5BBAC22879AB1368BA71D26ACE60F5
7627B6F7F1A20965116C511B9F905306CBFECF81D93BD2E56CF4F63043F594C1
DA94B530DB3FCA83359351B8DBBE123A41AF7424E0C7DAE444680EF9B0A3D333
CAD63A9B7444F6EE4090E3CE0DF53B2DD1017299A5EAFEF6A9E0CA7E843AAD52
4BB5F2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 73 /I put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[67{/.notdef}rp /C 3{/.notdef}rp /G /.notdef /I 12{/.notdef}rp /V 
29{/.notdef}rp /t /.notdef /v 137{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
115.552 438.522 mo
(I)sh
%ADOBeginSubsetFont: SDAAAA+CMR7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRZ+CMR7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B77D5F989B950A07335B748C2E59E5D2D6BF1E6051
957DD97CEFF35302EE98FC4B787BCA44229E0EB5B1327789C7E84159A08D8DD6
8C92A07DE5F5A75D5A81EBAB8FA5D1E69836F3FC93F6E29FC5BFCC9DEA3989EC
8EA8AA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRZ+CMR7 /Encoding get
dup 40 /parenleft put
pop
%ADOEndSubsetFont
/HQERRZ+CMR7*1 
[40{/.notdef}rp /parenleft 8{/.notdef}rp /one 11{/.notdef}rp /equal 194{/.notdef}rp]
HQERRZ+CMR7 nf
HQERRZ+CMR7*1 [6.97728 0 0 -6.97728 0 0 ]msf
120.715 433.345 mo
(\()sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
123.83 433.345 mo
(i)sh
%ADOBeginSubsetFont: SDAAAA+CMR7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRZ+CMR7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenright <1C60D8A8C9B77D5F989B950A07335B748CB31A51BDF9FCF02A2
BBCACD13F22BC441A3FF8286B2AF4AFEB0BAC09CB8CFC19F55A315F3EDC1D3B4
CB4181963F3AF6C950ED14D564BDEFFFE139BE1E10473AE6A5D25F9A29D9AC22
23E09CC1DB99271> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRZ+CMR7 /Encoding get
dup 41 /parenright put
pop
%ADOEndSubsetFont
/HQERRZ+CMR7*1 
[40{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one 11{/.notdef}rp /equal 194{/.notdef}rp]
HQERRZ+CMR7 nf
HQERRZ+CMR7*1 [6.97728 0 0 -6.97728 0 0 ]msf
126.65 433.345 mo
(\))sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
119.933 441.3 mo
(in)
[2.82028 0 ]xsh
HQERRQ+NimbusRomNo9L-Regu*1 [10.1571 0 0 -9.96768 0 0 ]msf
130.264 438.522 mo
(,where)
[5.03793 7.3334 5.07852 4.50974 3.38223 0 ]xsh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-236.075 456.408 mo
(C)sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-228.951 457.902 mo
(m)sh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B85744148CA332C8F6F1C9DE6B352F8C512D68BA1E3142
6FC0ECC7A922246EACB7A924151A79EDFB3E3451BD87933C27475FAC0D74CB82
67D592363D57178D8C03E491CE91E57E08820A621E0AED28> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 59 /comma put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[59{/.notdef}rp /comma 7{/.notdef}rp /C 3{/.notdef}rp /G /.notdef /I 
12{/.notdef}rp /V 29{/.notdef}rp /t /.notdef /v 137{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-221.38 456.408 mo
(;G)
[4.43365 0 ]xsh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-209.114 457.902 mo
(Leak)
[5.46814 3.78174 4.32385 0 ]xsh
HQERRQ+NimbusRomNo9L-Regu*1 [10.1072 0 0 -9.96768 0 0 ]msf
-188.14 456.408 mo
(and)sh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-171.05 456.408 mo
(V)sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-165.235 457.902 mo
(Leak)
[5.46814 3.78174 4.32385 0 ]xsh
HQERRQ+NimbusRomNo9L-Regu*1 [10.1072 0 0 -9.96768 0 0 ]msf
-144.261 456.408 mo
(are)sh
-129.424 456.408 mo
(parameters)sh
-82.5869 456.408 mo
(oftheneuronand)
[5.05362 5.86215 2.80981 5.05365 6.9841 5.05365 4.48758 5.05365 3.36563 5.05359 7.55008 4.48758 
5.05362 0 ]xsh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-9.17563 456.408 mo
(I)sh
HQERRZ+CMR7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-4.01123 451.23 mo
(\()sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-.896606 451.23 mo
(i)sh
HQERRZ+CMR7*1 [6.97728 0 0 -6.97728 0 0 ]msf
1.92365 451.23 mo
(\))sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-4.79361 459.186 mo
(in)
[2.82025 0 ]xsh
HQERRQ+NimbusRomNo9L-Regu*1 [10.1072 0 0 -9.96768 0 0 ]msf
5.53625 456.408 mo
(,standsfortheexternalcurrentstothe)
[5.02332 3.93182 2.80978 4.48761 5.05362 5.05362 6.42822 3.36563 5.05359 5.86221 2.80978 5.05362 
6.98413 4.33594 5.05362 2.80981 4.48761 3.36563 5.05362 4.48761 5.30637 4.48758 5.05362 3.36563 
3.36563 4.48761 5.05362 2.80981 6.42822 2.80978 7.55014 2.80981 5.05362 0 ]xsh
HQERRQ+NimbusRomNo9L-Regu*1 [9.96768 0 0 -9.96768 0 0 ]msf
-236.075 467.322 mo
(cell.)sh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B64EDF7E182276F33FE64591D35477734F1A3F05995A9E21B3
849012DBE3E5D9BEEC357D7966D622D0BDA2A87D7DF76C988A3C6DB72B7AC755
68902A6FAD90FC53E6498F9E166085199E8D84083DB27D286921A07C13F283E6
EF1D868FB1C61773EE28620908EC2A5479956F05B0F020BC9E52293B72C896E3
409360C9D09608CE13546B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 67 /C put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[33{/.notdef}rp /exclam 5{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen /period 2{/.notdef}rp /one /.notdef /three 6{/.notdef}rp /colon 
8{/.notdef}rp /C /D /E /F /.notdef /H /I 
2{/.notdef}rp /L /M /N /O /P 3{/.notdef}rp /T 
2{/.notdef}rp /W 3{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/.notdef /k /l /m /n /o /p /q 
/r /s /t /u /v /w /x /y 
/z 51{/.notdef}rp /fi /fl 80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [10.167 0 0 -9.96768 0 0 ]msf
-236.075 483.718 mo
(Chemical)sh
-194.024 483.718 mo
(synapses)sh
-154.81 483.718 mo
(are)sh
-139.315 483.718 mo
(where)sh
-111.397 483.718 mo
(twoneuronstradeinformationbythereleaseofneurotransmitters.)
[2.82645 7.23895 8.15396 5.08353 4.51413 5.08353 3.38556 5.08353 5.0835 7.03568 2.82648 3.38556 
4.51413 5.08353 7.59476 2.82639 5.08353 3.38556 5.08353 3.38553 7.90997 4.51413 2.82648 2.82642 
5.08356 8.1539 5.08353 8.16415 2.82645 5.08353 7.59482 3.38553 4.51416 2.82645 4.51416 4.51419 
3.95505 7.58456 5.08356 6.46606 5.08356 4.51416 5.0835 3.38556 5.08353 2.82642 3.38556 4.51419 
5.0835 3.95505 7.90997 2.82642 2.82645 2.82642 4.51419 3.38556 3.95505 0 ]xsh
HQERRQ+NimbusRomNo9L-Regu*1 [9.88794 0 0 -9.96768 0 0 ]msf
-236.075 494.633 mo
(Chemical)sh
-195.683 494.633 mo
(synaptic)sh
-160.235 494.633 mo
(currents)sh
-125.894 494.633 mo
(are)sh
-111.329 494.633 mo
(calculated)sh
-68.7515 494.633 mo
(byanon-linearcomponentstandingfortheirconductance)
[4.944 7.43573 6.88193 4.94394 4.94397 4.94397 3.29263 2.74884 2.73901 4.944 4.39023 4.39026 
5.78427 4.39023 4.944 7.69281 4.94397 4.94397 4.94397 4.39026 4.94397 5.24066 3.84647 2.74884 
4.39026 4.94397 4.94397 2.74884 4.94397 7.43576 3.29263 4.94397 5.78439 2.74884 4.94397 4.39026 
2.74881 5.7843 4.39026 4.94397 4.94397 4.94397 4.94397 4.39026 2.74884 4.39026 4.94397 4.39023 
0 ]xsh
HQERRQ+NimbusRomNo9L-Regu*1 [10.167 0 0 -9.96768 0 0 ]msf
-236.075 505.547 mo
(strength,)sh
-197.705 505.547 mo
(which)sh
-169.898 505.547 mo
(exponentiallydependsonthepresynapticneurons'potential,)
[4.36169 5.08353 5.08351 5.08353 5.08351 4.51418 5.0835 2.82645 2.82643 4.51416 2.82645 2.82645 
8.0421 5.08353 4.51418 5.0835 4.51418 5.0835 5.08356 6.91364 5.08353 8.04211 2.82642 5.08353 
7.47284 5.08353 3.38553 4.51419 3.95508 5.0835 5.0835 4.51419 5.08353 2.82639 2.82648 7.47275 
5.0835 4.51422 5.0835 3.38553 5.08353 5.08353 3.95508 6.34412 5.08353 5.08353 2.82642 4.50397 
5.08353 2.82642 2.82645 4.51416 2.82645 0 ]xsh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
82.5854 505.547 mo
(V)sh
%ADOBeginSubsetFont: TCAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRU+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B7CF7CC0110C5B2BBB893738FB1B2A870C74A5B6D9E5F8D92C
0DA056906EED924D081612EC7538CD1EFB4EFF84E8BC93244FA3E1B1AA88489C
8FBEF8299EA8716E5C1673B3401166ADE7F26AE1AAD400A5B35D592DD488A38E
4AD2A33AD2B964FE51C082176C4A85B12453BE8A1C7392E9C26B6C909B909E55
719FB24DF370C587EBAD7D0C1C1D55D0E2B53D38D8AF92113A7ADD29B31E86B3
2283E22255453F8EB4B9E6054F67FD56219A9F5ACB00F69EF21FE824A56E9F3F
B233A636E8D3D75AECD689DC8C0FC366785DF0A7E9BD7834652F11836760449F
644FD75F42F3CED641176B37B3847A> |-
/r <1C60D8A8C9B7890D00481D2C25DC59AC462738A7908647A15752A3AFFCCD
82AFB55F3D209EC0B794DEDDC2CE25565929F21C086DF18DC1C50AA7E07A8388
D5158D170B4268F7BBA5724DE3DDD8BF83A348FC9CABF1FB221059AF3799835E
78341AE70D66B6566419F262897356C41452AE9F42AA6EEC683E691B71DBA214
CE2E35D9657C9B9F4CCEEBAE48B5919D56430661EC6FCE7D881D8F19C002BBE2
36C2CD941C8E618DE41114FF2AB2F6723922> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRU+CMMI7 /Encoding get
dup 112 /p put
dup 114 /r put
pop
%ADOEndSubsetFont
/HQERRU+CMMI7*1 
[76{/.notdef}rp /L 20{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 
/.notdef /k /.notdef /m /n /.notdef /p /.notdef 
/r /.notdef /t /.notdef /v 137{/.notdef}rp]
HQERRU+CMMI7 nf
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
88.4002 507.041 mo
(pre)
[4.10889 3.91702 0 ]xsh
HQERRQ+NimbusRomNo9L-Regu*1 [10.167 0 0 -9.96768 0 0 ]msf
100.705 505.547 mo
(,as)
[5.61221 4.51416 0 ]xsh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B75F2F6D395BACC84C31C3B8372903CC9CFF677AF414414B7A
87C94C2007602795A97FFC216D9EC68A6CC816BABFC68EE2D165F092E1DEDD21
80D5E68F1E46BD3D39915DBF0BD529944A9F460E79C2A2DD3ADDE535C40B258B
0EDF1F0BB945C030943CE9CE8EC3218E2F97303675C45D0C4673767D0716ABF7
60AE70BC855A6EC26691BFC4D832CC1B7C48F0D399DAC1CD612279746CF4AD2E
4603C65720EFD86A50DF927E0E363599AA3336A351667EC814635E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[59{/.notdef}rp /comma 7{/.notdef}rp /C 3{/.notdef}rp /G /.notdef /I 
12{/.notdef}rp /V 16{/.notdef}rp /g 12{/.notdef}rp /t /.notdef /v 
137{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
117.745 505.547 mo
(g)sh
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
122.857 505.547 mo
(\()sh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
126.734 505.547 mo
(V)sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
132.548 507.041 mo
(pre)
[4.10892 3.91702 0 ]xsh
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
144.852 505.547 mo
(\)=)
[7.50467 0 ]xsh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/slash <1C60D8A8C9B7A73DB56225352A24C6E389DE2B55CA07FB5710C6DCAE
04F94BC5CAA5785E17ED28271B55834262FD3846E502CB37AB886C6947131546
D475C5E688F02E31C309> |-
/w <1C60D8A8C9B63EE682F71457722A7C10F63B8BF0FC39EB4308901C88A931
18D378480E75480AD7F79F5F3C0F19218D3E26F0BF347BCC16F8C0C511E06631
9A536DFCEC607A7530AE82F11BCC1C5E91484F3622E8BB262EEAB0BB6AD55BF6
A403A3F57F5C94D0821D8B79627B73E22CE67B546D7D2C0A513B27AD06F93FFB
2F65904515BBA20972A27D47CFFFD3C9679B699A9C5B08A0C4C2D00EBF747880
6361E7EC8D35F36D9A8CF873DD17EA7E7E9B10AAD63C5089E29EB35F740B3431
A2AAE2EE66ED3AC732DD3A6DC099B6D943D540FA8F7EBFD79C1BB337EB126B93
01A020BD8AB05C0EB5A44C565A81924BDD47> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 61 /slash put
dup 119 /w put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[59{/.notdef}rp /comma /.notdef /slash 5{/.notdef}rp /C 3{/.notdef}rp /G 
/.notdef /I 12{/.notdef}rp /V 16{/.notdef}rp /g 12{/.notdef}rp /t 
/.notdef /v /w 136{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-236.075 518.245 mo
(w=)
[7.40495 0 ]xsh
%ADOBeginSubsetFont: DDAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRW+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A73DC579B9CE13A4EA8C203AFC890ABD6F58341B006CF1
BDD8FED3A7238E01F751FEAC75885229C293891E5636AD630D9C884528B6FEF0
25DDA723DD68103C537890571B4B95BCC242A78DD7EA0DA80E91751ED6DEA668
D97ECF27E58978E82B8932F2635747B0D240AA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRW+CMR10 /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/HQERRW+CMR10*1 
[40{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp /one 11{/.notdef}rp 
/equal 194{/.notdef}rp]
HQERRW+CMR10 nf
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-223.686 518.245 mo
(1+)
[7.63518 0 ]xsh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B74A3E84572DD0FC48169FB86B2CFD7F6BE83E4F2E1E5CA16C
2AC92E66EBE7710F60635A18699716341094CF929B549F2ED1A04C750C178E83
9D10856F86288F148E1167E0754DCAA9E2B0F560E85D0BC1CDEDF0A86C4726EB
FBDBEED85D99B5FADD778BC7414A74C5493C2DB91DDF0EDD2E8B66AC843CF149> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[59{/.notdef}rp /comma /.notdef /slash 5{/.notdef}rp /C 3{/.notdef}rp /G 
/.notdef /I 12{/.notdef}rp /V 14{/.notdef}rp /e /.notdef /g 
12{/.notdef}rp /t /.notdef /v /w 136{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-205.648 518.245 mo
(e)sh
%ADOBeginSubsetFont: TCAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRU+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/sigma <1C60D8A8C9B64B6A5D6CBA7324DCAE06FC3B4D37F53DEADCF7E19FBA
2AAF2806943E4D8AE89535324BF490EAAA416EDC64D5332642428AB30BBCF7E2
3BA41AC6A0E2D5A69D197716FD30FC00F8E926868EE730C346DDC67A55339B2A
4AAFFC1163BFD2CA90002975E240B0CD575B7B0D0A826831D3F8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRU+CMMI7 /Encoding get
dup 27 /sigma put
pop
%ADOEndSubsetFont
/HQERRU+CMMI7*1 
[27{/.notdef}rp /sigma 48{/.notdef}rp /L 20{/.notdef}rp /a 3{/.notdef}rp /e 
3{/.notdef}rp /i /.notdef /k /.notdef /m /n /.notdef 
/p /.notdef /r /.notdef /t /.notdef /v 137{/.notdef}rp]
HQERRU+CMMI7 nf
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-201.007 514.628 mo
(\033)sh
HQERRZ+CMR7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-196.137 514.628 mo
(\()sh
%ADOBeginSubsetFont: TCAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRU+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/V <1C60D8A8C9B65719BE5F80E79DFB3F881AF3F352EAF9548551275DB1123D
29FC96BA2666FF60F17B7CC5B850BD0DF92E44FB0026E0066FEDC9A64C2B7D78
83661F050CFF9C0E944C55393E0F92132572C3EB3F7D3393D0E3911158B4374A
62B7D9124E71E849D80D59A6F860C156561607868AC5325B0B16B66308B3872F
DDC546419B6DE55A2D5AFB84DFB13FCFDFDF985ACFC77C7F3DF7B4A7233FD19C
A8C766428A8B5056443C8FD4023AD5D8FDA0B42AC8AE7E2AD5639F95EAF9984E
1CB45CAEAD2F37E94BB43473F06867FDAB04CD95> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRU+CMMI7 /Encoding get
dup 86 /V put
pop
%ADOEndSubsetFont
/HQERRU+CMMI7*1 
[27{/.notdef}rp /sigma 48{/.notdef}rp /L 9{/.notdef}rp /V 10{/.notdef}rp /a 
3{/.notdef}rp /e 3{/.notdef}rp /i /.notdef /k /.notdef /m 
/n /.notdef /p /.notdef /r /.notdef /t /.notdef 
/v 137{/.notdef}rp]
HQERRU+CMMI7 nf
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-193.023 514.628 mo
(V)sh
%ADOBeginSubsetFont: YCAAAA+CMMI5 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRV+CMMI5 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B658EF72AB31CAF00710938B0778D8124B011BBC8B05D115C4
F83CCA0709599E352CC1E736BD64A8BAC197226635557B81B922A37C6E86A33B
EA8420F0B21B894960588BA3EECB5A736B47F4183AF23CF28EDB47FCFEA7DBF6
6D83EBA108A1B514E3BB2A373AAF15DCF3A411A4573B6E971286420B72C3689A
ACFAE3> |-
/p <1C60D8A8C9B616A7EEA6A906B8B14650D3A437D8380F7F97E87849D6D9C1
4671C482EA584AFE82FA5A9597A8192185885A799F3378C95AC6A8E713D2BC3F
027804F8CFC8415A3DDE67D51B4EA31F29E5AD03B84E704ED3830CC44F104373
0FE7344BA2A5F544D12024D02DF17558D3907B8F0B5DFC005C6E63176DB196EA
1CB877728AC89286034474673F4BFC87F3A13B3559B9BA2071DF9C5BDD58FB23
B4B22F2650E09B398724492273ED44F3D4CC7E89D2CEFDFA9C31FD82BD683FA2
C0F766BD86A6FD6623B8AC93E2DBE3E0CCE1F08603FD9C0C35328B21A4AE2101
E0EEF46A480E86706ADEAD87C7FF127F495682200DCD71767FB3195E212DBCB9
49D5> |-
/r <1C60D8A8C9B65201EB3FAA7004BA768E4E867A4086475285C19DD0A9A6E2
A372C1FCE78E2E3E017588FF131CA5F8782F2BC294B205B2B114F730CEEAAABF
FACC7957E40492E7432CAB0A3873B532FE76BDE6A522DFCBD452866B13D087A7
6DECDC0FB48E764402922FE82DFB676C9DE81CA2D8AE1DF68ADDA67AA2A6CF5B
0A0FF8F9C7D57915B4E60AD641A1F619F2D910DBDEA5D2EFB65C4CA9D43BF2E8
D5101FE0865BA574F45F8C5FDB22B18A7D8A928F5C8010B5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRV+CMMI5 /Encoding get
dup 101 /e put
dup 112 /p put
dup 114 /r put
pop
%ADOEndSubsetFont
/HQERRV+CMMI5*1 
[101{/.notdef}rp /e 3{/.notdef}rp /i 6{/.notdef}rp /p /.notdef /r 
141{/.notdef}rp]
HQERRV+CMMI5 nf
HQERRV+CMMI5*1 [4.98334 0 0 -4.98334 0 0 ]msf
-188.316 515.624 mo
(pre)
[3.68619 3.51971 0 ]xsh
%ADOBeginSubsetFont: SDAAAA+CMR7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRZ+CMR7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/plus <1C60D8A8C9B593D6D8BB90123291AA259E2A2720FD4880A5BA5668DBB
3FDE6DF999803DA9EDD496C11A38D856114909900BC9E753D6A6BF5C2786C87D
5C6E0CE8F6625D8E3C55B080D69D2651DDE1B21281AD85504D17B37BA0750A5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRZ+CMR7 /Encoding get
dup 43 /plus put
pop
%ADOEndSubsetFont
/HQERRZ+CMR7*1 
[40{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp /one 11{/.notdef}rp 
/equal 194{/.notdef}rp]
HQERRZ+CMR7 nf
HQERRZ+CMR7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-177.239 514.628 mo
(+)sh
%ADOBeginSubsetFont: TCAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRU+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/mu <1C60D8A8C9B62B9496EA6A5F4B0DB6E285AE3CC5F76070E9D0900B8E9FB
8BB0D4197D1A2DD59EA5C34E7E07F4C901FEEAF8469C7C1D2ADC049F489D443C
94412286D62F02E1B2CDD53F2E790FA86ACAAB6C0C197701F917DC40928C56DF
8CB23C05C1517B6379CF4DFC0CF2B813A78C4566C10B5CFE2E1A85E39F2E7315
0E833D337F5C20540E3A61A8691FA5423C0C17FCF73D4EC215E0AA7E60754B3D
13B20403263483B2B6569F56CFD6328D38088230363BC189DF44352B95D109F5
F4208BF4AC6092171FFC97A681C9437D5E1E824878D17C139FB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRU+CMMI7 /Encoding get
dup 22 /mu put
pop
%ADOEndSubsetFont
/HQERRU+CMMI7*1 
[22{/.notdef}rp /mu 4{/.notdef}rp /sigma 48{/.notdef}rp /L 9{/.notdef}rp /V 
10{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i /.notdef /k 
/.notdef /m /n /.notdef /p /.notdef /r /.notdef 
/t /.notdef /v 137{/.notdef}rp]
HQERRU+CMMI7 nf
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-171.12 514.628 mo
(\026)sh
HQERRZ+CMR7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-166.273 514.628 mo
(\))sh
HQERRQ+NimbusRomNo9L-Regu*1 [10.167 0 0 -9.96768 0 0 ]msf
-162.661 518.245 mo
(.Thesynapsemodeladoptedfrom[)
[7.40158 6.21199 5.08351 7.59482 3.95506 5.08351 5.08351 4.51418 5.08351 3.95506 7.5948 7.90994 
5.08353 5.08353 4.51416 5.90695 4.51419 5.08353 5.0835 5.0835 2.82648 4.51413 8.16418 3.38556 
3.38553 5.08356 10.9906 0 ]xsh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7A73D33A88FEA12959A734E0957E304D49DC85E4BE1FA3
9EAB2AF48D0318F3CC26662E787C00C247C6E0112180BCE6759D50FF9BBD9846
DFA361CDEB2512314B6E62318760F370D90F648D279E929D53983BF8D2AC98EF
81CED8855AB0EC5338E13ECD1542C111649132984A10E95D5EFD7471329778D6
74DBEAC9048068A00D504E5675BFC58E3AC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[33{/.notdef}rp /exclam 5{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen /period 2{/.notdef}rp /one /.notdef /three /.notdef /five 
4{/.notdef}rp /colon 8{/.notdef}rp /C /D /E /F /.notdef 
/H /I 2{/.notdef}rp /L /M /N /O /P 
3{/.notdef}rp /T 2{/.notdef}rp /W 3{/.notdef}rp /bracketleft /.notdef /bracketright 
3{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z 51{/.notdef}rp /fi /fl 80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [9.96768 0 0 -9.96768 0 0 ]msf
-11.1015 518.245 mo
(5)sh
HQERRQ+NimbusRomNo9L-Regu*1 [10.167 0 0 -9.96768 0 0 ]msf
-6.11819 518.245 mo
(].Thesecurrentslinearlydependonthe)
[3.38556 7.40158 6.21194 5.08356 4.51413 3.95508 7.59479 4.51416 5.08356 3.38553 3.38556 4.51416 
5.08353 2.82642 7.03571 2.82645 2.82642 5.08353 4.51416 4.51416 3.38556 2.82642 8.16406 5.08353 
4.51416 5.08353 4.51419 5.0835 8.16418 5.0835 8.16418 2.82642 5.08353 0 ]xsh
HQERRQ+NimbusRomNo9L-Regu*1 [10.1571 0 0 -9.96768 0 0 ]msf
-236.075 529.159 mo
(postsynaptic)sh
-182.801 529.159 mo
(neuron')sh
-151.761 529.159 mo
(smembranepotentialaswell,as)
[6.43962 7.90221 4.50974 7.90221 5.07854 3.38223 4.50974 5.07852 6.9982 5.07852 5.07855 2.82368 
4.5097 5.07852 2.82367 2.82367 4.50977 5.31223 4.50974 6.42941 7.3436 4.49954 2.82367 2.82367 
5.02783 4.50974 0 ]xsh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-17.5196 529.159 mo
(I)sh
%ADOBeginSubsetFont: TCAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRU+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B780B36FC0B82FFF96FF7BBE1C7AAB5C809901C6829D000E60
ED4472D849A0693461393A400A42DE3B8661652FB48693B7CF78A6FFCA06F8F5
33E03C57BAD5162F309A10083065F3F1C2B6F7FF7E230349EB32B7E899462AA9
E42087DF2F7A99AF1635052B8E5CE0048996F663D571D3889B89C0EE9B4D026B
A350888C8667D77DF6453D12C2DC48B189B1D86BB3F53AF0C73C1C175C1303B2
C51CFB2E52D560F8B82C2AC9FE8E0A7C01E95143EF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRU+CMMI7 /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
/HQERRU+CMMI7*1 
[22{/.notdef}rp /mu 4{/.notdef}rp /sigma 48{/.notdef}rp /L 9{/.notdef}rp /V 
10{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i /.notdef /k 
/.notdef /m /n /.notdef /p /.notdef /r /s 
/t /.notdef /v 137{/.notdef}rp]
HQERRU+CMMI7 nf
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-13.1385 530.654 mo
(s)sh
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-6.10919 529.159 mo
(=)sh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
4.41174 529.159 mo
(g)sh
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
9.52313 529.159 mo
(\()sh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
13.3996 529.159 mo
(V)sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
19.2137 530.654 mo
(pre)
[4.10889 3.91702 0 ]xsh
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
31.5185 529.159 mo
(\)\()
[3.87643 0 ]xsh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/E <1C60D8A8C9B6177404106CAF965141780A3169E0E51FB498B39631979289
FE59D7C56480822ECDA6B9254C24924A8B73A24155F39A737A9244DC782D8C6A
6A3BD0A905E5D1F011649259A74E1CAD29A1D8E72F81F09B4C7EECA4FFCFAEB3
B1E6346CD6A3D954E38DE31F2A1F351DE9C3279D3BD0707BFECC7B59C0106939
56FA43F9D76D2D5AE29B7B4A7BC612A50EB461CD1514B7B648A599EA86165FA5
A4E003B2D394C7C044D03DD15C624FCCA439C3E5318F9E4A407BDFE3B43DC9F7
E49965BBD7AE8C3EB73C6B79F04E8C58C59F20EF8F521424F93F0641BD42D5E6
1E58F889154054E7C906D96931054DD69096ED84D5E307FCA9D9C16C1D12FD79> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 69 /E put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[59{/.notdef}rp /comma /.notdef /slash 5{/.notdef}rp /C /.notdef /E 
/.notdef /G /.notdef /I 12{/.notdef}rp /V 14{/.notdef}rp /e 
/.notdef /g 12{/.notdef}rp /t /.notdef /v /w 136{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
39.2714 529.159 mo
(E)sh
HQERRY+CMSY10*1 [9.96768 0 0 -9.96768 0 0 ]msf
49.4029 529.159 mo
( )sh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
59.3546 529.159 mo
(V)sh
%ADOBeginSubsetFont: TCAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRU+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B7E89794A470D5249454A382FB3FA3DB4B0BC1C087FDC934E9
AF3F1B1B8EBFF86B274C390AA8038DB5932EA06D78C52D412FAC80C76EA672BC
3FD9AEBDC461655EDF36EA14B6803A376A40F1D0CEDF460614E3368E58740171
092D32B468B9EC0670> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRU+CMMI7 /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
/HQERRU+CMMI7*1 
[22{/.notdef}rp /mu 4{/.notdef}rp /sigma 48{/.notdef}rp /L 9{/.notdef}rp /V 
10{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i /.notdef /k 
/.notdef /m /n /o /p /.notdef /r /s 
/t /.notdef /v 137{/.notdef}rp]
HQERRU+CMMI7 nf
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
65.1683 530.654 mo
(post)
[4.10889 3.93454 3.76215 0 ]xsh
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
80.4835 529.159 mo
(\))sh
HQERRQ+NimbusRomNo9L-Regu*1 [10.1571 0 0 -9.96768 0 0 ]msf
84.3593 529.159 mo
(,wherebyvarying)
[5.02771 7.3334 5.07852 4.50974 3.38226 6.99826 5.07852 7.56699 4.82468 4.50977 3.38223 5.07852 
2.82364 5.07855 0 ]xsh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B6079F1E495237E195FB086879F6BCD60DCB240CDB4816DCDA
7E7D74835F693D24CCD6C338D68869D7AF0A42511BFE8C5AA9C0FDA69D2F0CC3
FEEA1E37C9F5A5B0401E78C533D84B405A09584E86C2A416FFCA03B71FACE3A1
46D6DFD53C2043C5A98FBBF0B70EB7EE652DFCDC5B6B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 65 /A put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[33{/.notdef}rp /exclam 5{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen /period 2{/.notdef}rp /one /.notdef /three /.notdef /five 
4{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C /D /E 
/F /.notdef /H /I 2{/.notdef}rp /L /M /N 
/O /P 3{/.notdef}rp /T 2{/.notdef}rp /W 3{/.notdef}rp /bracketleft 
/.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /.notdef /k /l /m 
/n /o /p /q /r /s /t /u 
/v /w /x /y /z 51{/.notdef}rp /fi /fl 
80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [10.167 0 0 -9.96768 0 0 ]msf
-236.075 540.073 mo
(E,theycanmakeinhibitoryorexcitatoryconnectiontotheirpostsynapticneurons.Anelectrical)
[6.21198 5.40892 2.82643 5.08353 4.3616 7.94046 4.51416 4.51418 7.95067 7.90994 4.51418 4.98178 
7.38132 2.82643 5.08353 5.08353 2.82643 5.08351 2.82645 2.82643 5.08351 3.38554 7.94048 5.08351 
6.25261 4.36169 5.08353 4.51418 2.82643 2.82643 4.51416 2.82642 5.08356 3.38553 7.95056 4.51419 
5.08353 5.0835 5.08353 4.51419 4.51416 2.82642 2.82645 5.0835 7.94049 2.82642 7.95068 2.82642 
5.08356 4.51413 2.82648 6.25256 5.08353 5.08353 3.95505 2.82645 3.95505 5.08353 5.0835 4.51419 
5.0835 2.82645 2.82645 7.37109 5.08353 4.51416 5.08353 3.38556 5.08347 5.08353 3.95505 6.75101 
7.34061 7.94037 4.51416 2.82642 4.51419 4.51416 2.82645 3.38553 2.82645 4.51416 4.51416 0 
]xsh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/j <1C60D8A8C9B854D0F8036B9E41B2E65A80996E2E907110434A0413DE6F0F
A1CED7D44101D2CB80C53365B7D9FCFEF3C557C392B7A8BD9A59049D2FAAF659
0B303228E435BBBFF7AB6415134822B91A84512D7F51F017E320BF297D96E6DA
013E3EF49D9FE337AA59725CBCFD287E12AC43B2BA5588F15DB53EA3E4AD5969
92DAFBC9104E3366F1848F482EBDAB72B852260AA183> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 106 /j put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[33{/.notdef}rp /exclam 5{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen /period 2{/.notdef}rp /one /.notdef /three /.notdef /five 
4{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C /D /E 
/F /.notdef /H /I 2{/.notdef}rp /L /M /N 
/O /P 3{/.notdef}rp /T 2{/.notdef}rp /W 3{/.notdef}rp /bracketleft 
/.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /j /k /l /m 
/n /o /p /q /r /s /t /u 
/v /w /x /y /z 51{/.notdef}rp /fi /fl 
80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [9.91784 0 0 -9.96768 0 0 ]msf
-236.075 550.988 mo
(synapse)sh
-202.176 550.988 mo
(\(gap-junction\),whichisaphysicaljunctionbetweentwoneurons,ismodeledbyaconstant)
[3.30257 4.90935 4.40352 4.95892 3.30257 2.75716 4.95892 4.95894 4.40352 2.75716 2.75716 4.95894 
4.95891 3.30257 4.97868 7.16069 4.95894 2.75716 4.40352 7.45824 2.75716 6.35742 6.9127 4.95892 
4.90933 4.95892 3.85812 2.75717 4.4035 4.40353 5.25647 2.75717 4.95892 4.95892 4.40353 2.75714 
2.7572 4.95889 7.45825 4.95892 4.4035 2.75714 7.16074 4.40347 4.40356 7.45813 2.75714 7.06155 
7.45825 4.95892 4.40353 4.95889 3.30258 4.95892 4.95892 3.85809 4.97882 2.75714 6.35733 7.71609 
4.95889 4.95892 4.40353 2.75714 4.40353 7.45825 4.95892 7.45825 6.90283 4.40353 4.95892 4.95892 
3.85812 2.75714 4.40353 4.95892 0 ]xsh
HQERRQ+NimbusRomNo9L-Regu*1 [9.78827 0 0 -9.96768 0 0 ]msf
-236.075 561.902 mo
(conductance)sh
-184.667 561.902 mo
(model,)sh
-155.263 561.902 mo
(where)sh
-128.874 561.902 mo
(based)sh
-104.1 561.902 mo
(ontheOhm'slawtheirbidirectionalcurrentbetweenneurons)
[4.89413 7.38034 2.72115 4.89413 6.83221 7.06711 4.89413 7.61526 2.7113 6.29391 2.72113 4.18939 
9.55331 2.72116 4.8941 4.34601 2.72116 5.74564 4.89413 2.72113 4.89413 2.72113 3.2594 4.34598 
4.34604 2.72113 2.72113 4.8941 4.89417 4.34598 5.1976 4.34601 4.89417 3.2594 3.25943 4.34598 
4.89413 5.20734 4.89417 4.34601 2.72113 7.06711 4.34601 4.34598 7.38037 4.89413 4.34601 4.8941 
3.25946 4.8941 4.89413 0 ]xsh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/j <1C60D8A8C9B7008A514089371E7F6C3F852A3CE5C127370B236F47AA9C8A
C019CB30198B0F9B562EB2AAF5462A73919E71099A23DF2F310B8412D429BA12
CAAFF3861208A6F813AF227CDD41326B28374679C7D0DAD15F3C60DA7CA3A1FF
BDD27E7F1EA5C89C2C62A5266172A8E394744211CD22B36375E13AC626FBF17D
0F94E85B3C1DE145D3DDE7BE6FDCD2D1D486D7C75C90F3CEB0658F9109B29310
D4F9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 106 /j put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[59{/.notdef}rp /comma /.notdef /slash 5{/.notdef}rp /C /.notdef /E 
/.notdef /G /.notdef /I 12{/.notdef}rp /V 14{/.notdef}rp /e 
/.notdef /g 2{/.notdef}rp /j 9{/.notdef}rp /t /.notdef /v 
/w 136{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
138.818 561.902 mo
(j)sh
HQERRQ+NimbusRomNo9L-Regu*1 [9.78827 0 0 -9.96768 0 0 ]msf
145.977 561.902 mo
(and)sh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/i <1C60D8A8C9B812A873C68D5B4F2B5E768224EF46878151BB86C5276D36B7
6A2F589A55C4A5EE3BA699CB4A88BF37C5D78C86C14140FEDFCAF26ED7786558
FB4004F7D4D6D6C473392EF89CF6F306E31522AC6282E6F880718CA584CA5F3C
F0073D906ABBCC6E22D61AC44BA56F049036466C761D68D70488E4284A0B9913
0D02240C3784DC91BC2576EE2D8BCBACBD2D3149F4EC97A54B1651F29418DDD6
9418816B9BD7EE2B71ADCDA3A3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 105 /i put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[59{/.notdef}rp /comma /.notdef /slash 5{/.notdef}rp /C /.notdef /E 
/.notdef /G /.notdef /I 12{/.notdef}rp /V 14{/.notdef}rp /e 
/.notdef /g /.notdef /i /j 9{/.notdef}rp /t /.notdef 
/v /w 136{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-236.075 576.299 mo
(i)sh
HQERRQ+NimbusRomNo9L-Regu*1 [9.96768 0 0 -9.96768 0 0 ]msf
-232.642 576.299 mo
(,canbecomputedas)
[4.98384 4.42566 4.42564 7.47577 4.98384 6.91757 4.42567 4.98383 7.75485 4.98384 4.98386 2.77101 
4.42564 7.47575 4.42567 0 ]xsh
%ADOBeginSubsetFont: DDAAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRW+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/circumflex <1C60D8A8C9B7A73DB60A8ACCDB3317529757244A8C206C879D4
63E1B6DBEAF6E2585BBF80C15CD541571D922A24030> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRW+CMR10 /Encoding get
dup 94 /circumflex put
pop
%ADOEndSubsetFont
/HQERRW+CMR10*1 
[40{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp /one 11{/.notdef}rp 
/equal 32{/.notdef}rp /circumflex 161{/.notdef}rp]
HQERRW+CMR10 nf
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-145.636 573.78 mo
(^)sh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-146.833 576.299 mo
(I)sh
%ADOBeginSubsetFont: TCAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRU+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B819470FBAA7FAE29F94FE5E1C3B9B75DC4790587D41A6
359664CCCB9DF34CCF4C2F0AC42534E0055B03F416CB4A009F3CFB7A5457CDA6
19C6F531CBDA2D09EA5CE8E955> |-
/j <1C60D8A8C9B7438395C05C3169C7D7F1B75841D59B682CA8E1CB804C6469
10A66FD2FCC71781905A58559BBA987CC824FFAAB397A0A844F68F0784D79177
8BFA705461CB803F3EE01A604672F851DFC355D949F816439FA935B222739DB3
7285B3A3E42C0239F8EE5F68050B2DF98E8AD7E2799FC0902863F65C628C563B
12CEF5D2630A2BB2B44B3A9C73B011F81C919CB27F1DB0217F205BFED4F83AF7
102BB68BD0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRU+CMMI7 /Encoding get
dup 59 /comma put
dup 106 /j put
pop
%ADOEndSubsetFont
/HQERRU+CMMI7*1 
[22{/.notdef}rp /mu 4{/.notdef}rp /sigma 31{/.notdef}rp /comma 16{/.notdef}rp /L 
9{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 
/j /k /.notdef /m /n /o /p /.notdef 
/r /s /t /.notdef /v 137{/.notdef}rp]
HQERRU+CMMI7 nf
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-142.452 577.795 mo
(i;j)
[2.82024 2.36736 0 ]xsh
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-130.297 576.299 mo
(=^)
[11.3113 0 ]xsh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/omega <1C60D8A8C9B663CCDCD38BB615B5A9927D0AC8F3BEF99308F53E6E11
EF6FDEC2A41598615AD97858C1C11CB2852335C8D037EC343F7FB2C8BB19CE76
FD6F3CFC450758B31E07C66BA64F6059F9713685D367F90360A0A6D6D36DC658
50B1914FCA760767E999EE65C6CD28F426EBA0E29CA50A7962F3BDF64398160F
81EDCC71E779153676C2979CD0C26D1D704FD8A8A9077DF794C92C4969318F13
08BFC9C44847FB6EBD1C8DAB4B80C252D428DD48E8F0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 33 /omega put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[33{/.notdef}rp /omega 25{/.notdef}rp /comma /.notdef /slash 5{/.notdef}rp /C 
/.notdef /E /.notdef /G /.notdef /I 12{/.notdef}rp /V 
14{/.notdef}rp /e /.notdef /g /.notdef /i /j 9{/.notdef}rp 
/t /.notdef /v /w 136{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-119.776 576.299 mo
(!)sh
HQERRX+CMEX10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-113.214 565.236 mo
(\020)sh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-107.261 576.299 mo
(v)sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-102.429 577.795 mo
(j)sh
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-98.2295 576.299 mo
(\()sh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-94.353 576.299 mo
(t)sh
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-90.7537 576.299 mo
(\))sh
HQERRY+CMSY10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-84.6631 576.299 mo
( )sh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-74.6954 576.299 mo
(v)sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-69.8641 577.795 mo
(i)sh
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-66.5456 576.299 mo
(\()sh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-62.6692 576.299 mo
(t)sh
HQERRW+CMR10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-59.0699 576.299 mo
(\))sh
HQERRX+CMEX10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-55.1942 565.236 mo
(\021)sh
HQERRQ+NimbusRomNo9L-Regu*1 [9.96768 0 0 -9.96768 0 0 ]msf
-49.2414 576.299 mo
(.)sh
HQERRQ+NimbusRomNo9L-Regu*1 [9.96768 0 0 -9.96768 0 0 ]msf
-236.384 596.014 mo
(Tosimulateaneuralcircuitweuseda\256xedstep)
[5.29276 7.47577 3.8775 2.77101 7.75485 4.98384 2.77103 4.42564 2.77101 6.91757 6.91757 4.98386 
4.42566 4.98384 3.31917 4.42564 5.26292 4.42566 2.77103 3.31915 4.42566 4.98386 2.77101 5.26292 
7.19667 6.91759 4.98383 3.8775 4.42566 7.47577 6.91757 5.54202 4.83435 4.42566 7.47574 3.8775 
2.771 4.42566 0 ]xsh
%ADOBeginSubsetFont: JCAAAA+NimbusRomNo9L-ReguItal AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRS+NimbusRomNo9L-ReguItal dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B77FE2B98067ECA4D192682BFDB9E0521383E33AEF2AB13B6C
DDCB44DC5120998F37998811E16806D92A99440332371A54614042CCE9C92086
58B4DA3084C9D34213BEAABE4A6FF1F8DDFDED091410C941873DF78E52217871
1690A9E31F99D607B4F2E450328ADA> |-
/m <1C60D8A8C9B6079F178B521F79AB859140E406AE0C2925608732DA7C451C
154E79810E39F6B5B32562F5C747F43EAB8EE9FB3FB6AA02E6DDB5B640F73FD8
7203F2815F23DF37ED7B3C3D8C139F5494C5B589021482C0B49E3A45AD6BB8E3
CAD535C1815C616845611D52745E9E3A7F20A4EBDE118920053905EBB7FD273F
CEE0F7C3154EDD9B7922A8B0AA076EDCD5457FC5F23E58EA02963DE27C4A3BF9
950FE2FA1EA72709B44D0C0F0BF575E839D8A98FDCD76D9969A59CC799256EFB
31C8671E64FA561CA954E7B20BA848D7C14B1A853B062E6E8D2D0191BA5377EA
F94B1122C09634F15B> |-
/p <1C60D8A8C9B7A73DCE8ADACD4C270B1786D169F3E20E591ACA0CE0F9229D
EE17149E57EA8C388BBBF5AE30EF5200D4A0F04C5FB938FADE53A36AA852E300
38E1FA465FEEE81384F5AC9A894FCBDF86FEF2356D791085E73D3BAC227D40C3
D40A0ABF220A13538E735EB867A89FE7F997755F8A45044BE6AD11D1FCB29BDB
76E0B5A99487831F30A755181A44C79BEC9E7A2E620A0A8F0F68B5D6A210CFBB
2A4B6BC0BD97267D664E7703B3442231F4316A57450D866947A8A78B101E2823
43E74357967E784FE808D25ACE69CE8C0752F22F39F56CA80C2FD357DE0B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRS+NimbusRomNo9L-ReguItal /Encoding get
dup 99 /c put
dup 109 /m put
dup 112 /p put
pop
%ADOEndSubsetFont
/HQERRS+NimbusRomNo9L-ReguItal*1 
[45{/.notdef}rp /hyphen /period 20{/.notdef}rp /C 8{/.notdef}rp /L 20{/.notdef}rp 
/a /.notdef /c /d /e /.notdef /g /.notdef 
/i /.notdef /k /l /m /n /.notdef /p 
/.notdef /r /s /t 4{/.notdef}rp /y 52{/.notdef}rp /fi 
81{/.notdef}rp]
HQERRS+NimbusRomNo9L-ReguItal nf
HQERRS+NimbusRomNo9L-ReguItal*1 [9.96768 0 0 -9.96768 0 0 ]msf
-42.4522 596.014 mo
(implicit)sh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B7A73DCDD9F59C989262D4C837ECD30CDC197CC53D803B
FEC41706B8BD5D4AFE4F1DDC03AF8B5A096985BA058506805DD9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[33{/.notdef}rp /exclam 5{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen /period 2{/.notdef}rp /one /.notdef /three /.notdef /five 
/.notdef /seven 2{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C 
/D /E /F /.notdef /H /I 2{/.notdef}rp /L 
/M /N /O /P 3{/.notdef}rp /T 2{/.notdef}rp /W 
3{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w /x /y /z 51{/.notdef}rp 
/fi /fl 80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [9.96768 0 0 -9.96768 0 0 ]msf
-9.32169 596.014 mo
(numerical)sh
33.0309 596.014 mo
(ODE)sh
56.0064 596.014 mo
(solv)sh
72.4731 596.014 mo
(er[7].)
[4.42563 5.81107 3.31918 4.98386 3.31915 0 ]xsh
HQERRQ+NimbusRomNo9L-Regu*1 [10.0773 0 0 -9.96768 0 0 ]msf
-236.075 612.411 mo
(Forinteractingwithenvironment,Weintroducesensoryandmotorneurons.Asensorycomponent)
[5.45187 5.03867 5.8347 2.80148 5.03867 2.8015 4.47433 3.35567 4.47435 4.47433 2.8015 2.80148 
5.03868 7.51767 7.27583 2.8015 2.8015 7.51768 4.47433 4.63556 5.03868 2.8015 3.35567 5.03865 
5.03868 7.84015 4.47435 5.03867 2.80148 4.99837 8.71683 6.9534 2.80148 5.03864 2.80154 3.35562 
5.0387 5.03864 5.03867 4.47433 6.9534 3.9201 4.47437 5.03867 3.92017 5.03867 3.35565 7.5177 
4.47433 5.03867 7.50769 7.84015 5.03867 2.80148 5.03867 5.83472 5.03864 4.47433 5.0387 3.35565 
5.03867 5.0387 3.92014 5.60294 9.75485 3.92017 4.47433 5.03867 3.92017 5.03864 3.35568 7.5177 
4.4743 5.03867 7.84018 5.03864 5.0387 5.03864 4.47433 5.0387 0 ]xsh
HQERRQ+NimbusRomNo9L-Regu*1 [9.79823 0 0 -9.96768 0 0 ]msf
-236.075 623.325 mo
(consists)sh
-202.545 623.325 mo
(oftwoneurons)
[4.89912 5.7515 2.72391 6.97627 7.39771 4.89912 4.3504 4.89911 3.26276 4.89911 4.89911 0 
]xsh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B7D61B49D3C2C55B286BB7611547356F88D2748EE94686CFF7
DB559D31FC9FF071D4427CD1BE2C0E0154218F9B78D7DF9660DF25B6417BB6F9
F75BE0C95B4CBE8A0ADD0EF176DA908C8A6AAD739CC99FA33EF7F99A2A03213B
C117D582256B8F7B61A53F49F1649834B93E189E2FF00920DC197ABC503F0465
1DBD65AF220AEBDF91D683045EABE5E48703024D70629FF86262AEF629A8290D
AB0FA7171C89CB4B4541502BABA5B917742283F08909BAE0150CBE3362CCB8C1
E37DBFD80043B2D3C627189CF060AF2A1FEBD818E46E95> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 83 /S put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[33{/.notdef}rp /omega 25{/.notdef}rp /comma /.notdef /slash 5{/.notdef}rp /C 
/.notdef /E /.notdef /G /.notdef /I 9{/.notdef}rp /S 
2{/.notdef}rp /V 14{/.notdef}rp /e /.notdef /g /.notdef /i 
/j 9{/.notdef}rp /t /.notdef /v /w 136{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-141.284 623.325 mo
(S)sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-135.172 624.82 mo
(p)sh
HQERRQ+NimbusRomNo9L-Regu*1 [9.79823 0 0 -9.96768 0 0 ]msf
-130.565 623.325 mo
(,)sh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-125.618 623.325 mo
(S)sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-119.506 624.82 mo
(n)sh
HQERRQ+NimbusRomNo9L-Regu*1 [9.79823 0 0 -9.96768 0 0 ]msf
-111.585 623.325 mo
(and)sh
-94.9375 623.325 mo
(ameasurabledynamicsystemvariable)
[6.83917 7.62302 4.3504 4.35043 3.81158 4.89911 3.26273 4.35043 4.89914 2.72388 6.84891 4.89911 
4.89914 4.89911 4.3504 7.62305 2.72391 6.849 3.81158 4.89911 3.81161 2.72388 4.35043 10.1216 
4.64432 4.35043 3.2627 2.72394 4.3504 4.89914 2.72388 0 ]xsh
%ADOBeginSubsetFont: OCAAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRT+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/x <1C60D8A8C9B7E02ADD9A961EA85B11A4D6AE8E5FF47D0FB2B207722E9454
9CFCF90B2994EB4018DCD72707FC7E657C1357774D6ABC659E4BFFA1BAD58151
43126640EA2DAE45CE146667BB09E3222C5B2BE1809001CE57FFDA3F8C3B30B2
86B230357F5F955C9F57E2989850ACB5C1C587977554FAB8160F71D5F85970C9
22D115B7642513052A5260EFE973B9D542C18F64EADFD1C5FDD09160C3DC94D4
7F2CD7AE4851BB3D04487C33689E9C61C71A12B0085775C7E4FAF6B3AF6BF212
F2A47B39735F454DF875687BF642E91EEAEBA7EEB2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRT+CMMI10 /Encoding get
dup 120 /x put
pop
%ADOEndSubsetFont
/HQERRT+CMMI10*1 
[33{/.notdef}rp /omega 25{/.notdef}rp /comma /.notdef /slash 5{/.notdef}rp /C 
/.notdef /E /.notdef /G /.notdef /I 9{/.notdef}rp /S 
2{/.notdef}rp /V 14{/.notdef}rp /e /.notdef /g /.notdef /i 
/j 9{/.notdef}rp /t /.notdef /v /w /x 135{/.notdef}rp]
HQERRT+CMMI10 nf
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
58.7783 623.325 mo
(x)sh
HQERRQ+NimbusRomNo9L-Regu*1 [9.79823 0 0 -9.96768 0 0 ]msf
64.4749 623.325 mo
(.)sh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
70.0266 623.325 mo
(S)sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
76.1385 624.82 mo
(p)sh
HQERRQ+NimbusRomNo9L-Regu*1 [9.79823 0 0 -9.96768 0 0 ]msf
83.2418 623.325 mo
(gets)sh
101.525 623.325 mo
(acti)sh
115.419 623.325 mo
(vatedwhen)
[4.65421 4.35043 2.72391 4.3504 7.39761 7.07434 4.89914 4.35037 0 ]xsh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-236.075 634.239 mo
(x)sh
HQERRQ+NimbusRomNo9L-Regu*1 [10.167 0 0 -9.96768 0 0 ]msf
-227.454 634.239 mo
(has)sh
-210.973 634.239 mo
(apositivevalue,whereas)
[7.43213 5.08351 5.08353 3.95505 2.82643 2.82645 2.58243 4.93105 7.44225 4.8293 4.51416 2.82645 
5.08351 4.51418 5.57158 7.34059 5.08353 4.51416 3.38556 4.51418 4.51416 0 ]xsh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-105.242 634.239 mo
(S)sh
HQERRU+CMMI7*1 [6.97728 0 0 -6.97728 0 0 ]msf
-99.1289 635.734 mo
(n)sh
HQERRQ+NimbusRomNo9L-Regu*1 [10.167 0 0 -9.96768 0 0 ]msf
-90.78 634.239 mo
(\256res)sh
-70.3443 634.239 mo
(when)sh
HQERRT+CMMI10*1 [9.96768 0 0 -9.96768 0 0 ]msf
-45.4037 634.239 mo
(x)sh
HQERRQ+NimbusRomNo9L-Regu*1 [10.167 0 0 -9.96768 0 0 ]msf
-36.7826 634.239 mo
(isnegative.Mathematically,thepotentialofthe)
[2.82642 6.88315 5.0835 4.36169 5.03271 4.51416 2.82645 2.57224 4.94113 4.51416 6.9238 9.03857 
4.51413 2.82648 5.0835 4.51419 7.90991 4.51419 2.82642 2.82645 4.51416 4.51416 2.82645 2.82645 
4.44302 5.57147 2.82645 5.08353 7.4321 5.08356 5.0835 2.82645 4.51416 5.0835 2.82648 2.82642 
4.51419 5.75446 5.08353 6.31375 2.82645 5.0835 0 ]xsh
%ADOBeginSubsetFont: BCAAAA+NimbusRomNo9L-Regu AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
HQERRQ+NimbusRomNo9L-Regu dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DC5046156A965F0B3A5C5C92B949F09859351B744F8
D4F54DF812628245A65EF24CEAADD5DE190FFD56148C6E385D5491D13046F140
F2584C73B6FA05C320B018358B9C23ED6C9E586FC4F73E174BDB9E859FD3482F
BC3EE225AB5583DDBB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
HQERRQ+NimbusRomNo9L-Regu /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/HQERRQ+NimbusRomNo9L-Regu*1 
[33{/.notdef}rp /exclam 5{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma 
/hyphen /period 2{/.notdef}rp /one /two /three /.notdef /five 
/.notdef /seven 2{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C 
/D /E /F /.notdef /H /I 2{/.notdef}rp /L 
/M /N /O /P 3{/.notdef}rp /T 2{/.notdef}rp /W 
3{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w /x /y /z 51{/.notdef}rp 
/fi /fl 80{/.notdef}rp]
HQERRQ+NimbusRomNo9L-Regu nf
HQERRQ+NimbusRomNo9L-Regu*1 [9.96768 0 0 -9.96768 0 0 ]msf
-40.4743 664.141 mo
(2)sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 ]]
] del_res
/HQERRR+NimbusRomNo9L-Medi*1 uf
/HQERRR+NimbusRomNo9L-Medi uf
/FCAAAA+NimbusRomNo9L-Medi uf
/HQERRS+NimbusRomNo9L-ReguItal*1 uf
/HQERRS+NimbusRomNo9L-ReguItal uf
/JCAAAA+NimbusRomNo9L-ReguItal uf
/HQERRW+CMR10*1 uf
/HQERRW+CMR10 uf
/DDAAAA+CMR10 uf
/HQERRZ+CMR7*1 uf
/HQERRZ+CMR7 uf
/SDAAAA+CMR7 uf
/HQERRX+CMEX10*1 uf
/HQERRX+CMEX10 uf
/IDAAAA+CMEX10 uf
/HQERRQ+NimbusRomNo9L-Regu*1 uf
/HQERRQ+NimbusRomNo9L-Regu uf
/BCAAAA+NimbusRomNo9L-Regu uf
/HQERRN+CMSS10*1 uf
/HQERRN+CMSS10 uf
/DEAAAA+CMSS10 uf
/HQERRY+CMSY10*1 uf
/HQERRY+CMSY10 uf
/NDAAAA+CMSY10 uf
/HQERRU+CMMI7*1 uf
/HQERRU+CMMI7 uf
/TCAAAA+CMMI7 uf
/HQERRP+CMSSBX10*1 uf
/HQERRP+CMSSBX10 uf
/NEAAAA+CMSSBX10 uf
/HQERRT+CMMI10*1 uf
/HQERRT+CMMI10 uf
/OCAAAA+CMMI10 uf
/HQERRV+CMMI5*1 uf
/HQERRV+CMMI5 uf
/YCAAAA+CMMI5 uf
/HQERRO+CMSS8*1 uf
/HQERRO+CMSS8 uf
/IEAAAA+CMSS8 uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
